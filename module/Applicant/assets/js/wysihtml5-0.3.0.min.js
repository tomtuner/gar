  


<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# githubog: http://ogp.me/ns/fb/githubog#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>wysihtml5/dist/wysihtml5-0.3.0.min.js at master Â· xing/wysihtml5</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon-precomposed" sizes="57x57" href="apple-touch-icon-114.png" />
    <link rel="apple-touch-icon-precomposed" sizes="114x114" href="apple-touch-icon-114.png" />
    <link rel="apple-touch-icon-precomposed" sizes="72x72" href="apple-touch-icon-144.png" />
    <link rel="apple-touch-icon-precomposed" sizes="144x144" href="apple-touch-icon-144.png" />
    <meta name="msapplication-TileImage" content="/windows-tile.png">
    <meta name="msapplication-TileColor" content="#ffffff">

    
    
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="Z+IINFtsXZn5ifvQvuW8+aECZZAv6oWJPVhsnNXjnyA=" name="csrf-token" />

    <link href="https://a248.e.akamai.net/assets.github.com/assets/github-7ef703df15129d3b898830277d50fc760ca91cbc.css" media="screen" rel="stylesheet" type="text/css" />
    <link href="https://a248.e.akamai.net/assets.github.com/assets/github2-204e28c07493b8ba6089c49791ed7ab61ecb6581.css" media="screen" rel="stylesheet" type="text/css" />
    


      <script src="https://a248.e.akamai.net/assets.github.com/assets/frameworks-cc4895cbb610429d2ce48e7c2392822c33db2dfe.js" type="text/javascript"></script>
      <script src="https://a248.e.akamai.net/assets.github.com/assets/github-e539dcf1e3c93f4acda64d064d3f30a39afabae0.js" type="text/javascript"></script>
      

        <link rel='permalink' href='/xing/wysihtml5/blob/56960b31adc37e07797382d8e8b10109f206b19c/dist/wysihtml5-0.3.0.min.js'>
    <meta property="og:title" content="wysihtml5"/>
    <meta property="og:type" content="githubog:gitrepository"/>
    <meta property="og:url" content="https://github.com/xing/wysihtml5"/>
    <meta property="og:image" content="https://secure.gravatar.com/avatar/c674816842f017d3cc4e33ba4725f98f?s=420&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"/>
    <meta property="og:site_name" content="GitHub"/>
    <meta property="og:description" content="wysihtml5 - Open source rich text editor based on HTML5 and the progressive-enhancement approach. Uses a sophisticated security concept and aims to generate fully valid HTML5 markup by preventing unmaintainable tag soups and inline styles."/>

    <meta name="description" content="wysihtml5 - Open source rich text editor based on HTML5 and the progressive-enhancement approach. Uses a sophisticated security concept and aims to generate fully valid HTML5 markup by preventing unmaintainable tag soups and inline styles." />

  <link href="https://github.com/xing/wysihtml5/commits/master.atom" rel="alternate" title="Recent Commits to wysihtml5:master" type="application/atom+xml" />

  </head>


  <body class="logged_in page-blob windows vis-public env-production ">
    <div id="wrapper">

      

      

      


        <div class="header header-logged-in true">
          <div class="container clearfix">

            <a class="header-logo-blacktocat" href="https://github.com/">
  <span class="mega-icon mega-icon-blacktocat"></span>
</a>

            <div class="divider-vertical"></div>

            
  <a href="/notifications" class="notification-indicator tooltipped downwards" title="You have unread notifications">
    <span class="mail-status unread"></span>
  </a>
  <div class="divider-vertical"></div>


              
  <div class="topsearch command-bar-activated">
    <form accept-charset="UTF-8" action="/search" class="command_bar_form" id="top_search_form" method="get">
  <a href="/search/advanced" class="advanced-search tooltipped downwards command-bar-search" id="advanced_search" title="Advanced search"><span class="mini-icon mini-icon-advanced-search "></span></a>

  <input type="text" name="q" id="command-bar" placeholder="Search or type a command" tabindex="1" data-username="nikeshhajari" autocapitalize="off">

  <span class="mini-icon help tooltipped downwards" title="Show command bar help">
    <span class="mini-icon mini-icon-help"></span>
  </span>

  <input type="hidden" name="ref" value="commandbar">

  <div class="divider-vertical"></div>
</form>

    <ul class="top-nav">
        <li class="explore"><a href="https://github.com/explore">Explore</a></li>
        <li><a href="https://gist.github.com">Gist</a></li>
        <li><a href="/blog">Blog</a></li>
      <li><a href="http://help.github.com">Help</a></li>
    </ul>
  </div>


            

  
    <ul id="user-links">
      <li>
        <a href="https://github.com/nikeshhajari" class="name">
          <img height="20" src="https://secure.gravatar.com/avatar/6c99e94dead5de38244bc79bfd8eb101?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="20" /> nikeshhajari
        </a>
      </li>
      <li>
        <a href="/new" id="new_repo" class="tooltipped downwards" title="Create a new repo">
          <span class="mini-icon mini-icon-create"></span>
        </a>
      </li>
      <li>
        <a href="/settings/profile" id="account_settings"
          class="tooltipped downwards"
          title="Account settings ">
          <span class="mini-icon mini-icon-account-settings"></span>
        </a>
      </li>
      <li>
          <a href="/logout" data-method="post" id="logout" class="tooltipped downwards" title="Sign out">
            <span class="mini-icon mini-icon-logout"></span>
          </a>
      </li>
    </ul>



            
          </div>
        </div>


      

      


            <div class="site hfeed" itemscope itemtype="http://schema.org/WebPage">
      <div class="hentry">
        
        <div class="pagehead repohead instapaper_ignore readability-menu">
          <div class="container">
            <div class="title-actions-bar">
              


                  <ul class="pagehead-actions">

          <li class="subscription">
              <form accept-charset="UTF-8" action="/notifications/subscribe" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="Z+IINFtsXZn5ifvQvuW8+aECZZAv6oWJPVhsnNXjnyA=" /></div>  <input id="repository_id" name="repository_id" type="hidden" value="1922703" />
  <div class="context-menu-container js-menu-container js-context-menu">
    <span class="minibutton switcher bigger js-menu-target">
      <span class="js-context-button">
          <span class="mini-icon mini-icon-watching"></span>Watch
      </span>
    </span>

    <div class="context-pane js-menu-content">
      <a href="#" class="close js-menu-close"><span class="mini-icon mini-icon-remove-close"></span></a>
      <div class="context-title">Notification status</div>

      <div class="context-body pane-selector">
        <ul class="js-navigation-container">
          <li class="selector-item js-navigation-item js-navigation-target selected">
            <span class="mini-icon mini-icon-confirm"></span>
            <label>
              <input checked="checked" id="do_included" name="do" type="radio" value="included" />
              <h4>Not watching</h4>
              <p>You will only receive notifications when you participate or are mentioned.</p>
            </label>
            <span class="context-button-text js-context-button-text">
              <span class="mini-icon mini-icon-watching"></span>
              Watch
            </span>
          </li>
          <li class="selector-item js-navigation-item js-navigation-target ">
            <span class="mini-icon mini-icon-confirm"></span>
            <label>
              <input id="do_subscribed" name="do" type="radio" value="subscribed" />
              <h4>Watching</h4>
              <p>You will receive all notifications for this repository.</p>
            </label>
            <span class="context-button-text js-context-button-text">
              <span class="mini-icon mini-icon-unwatch"></span>
              Unwatch
            </span>
          </li>
          <li class="selector-item js-navigation-item js-navigation-target ">
            <span class="mini-icon mini-icon-confirm"></span>
            <label>
              <input id="do_ignore" name="do" type="radio" value="ignore" />
              <h4>Ignored</h4>
              <p>You will not receive notifications for this repository.</p>
            </label>
            <span class="context-button-text js-context-button-text">
              <span class="mini-icon mini-icon-mute"></span>
              Stop ignoring
            </span>
          </li>
        </ul>
      </div>
    </div>
  </div>
</form>
          </li>

          <li class="js-toggler-container js-social-container starring-container ">
            <a href="/xing/wysihtml5/unstar" class="minibutton js-toggler-target starred" data-remote="true" data-method="post" rel="nofollow">
              <span class="mini-icon mini-icon-star"></span>Unstar
            </a><a href="/xing/wysihtml5/star" class="minibutton js-toggler-target unstarred" data-remote="true" data-method="post" rel="nofollow">
              <span class="mini-icon mini-icon-star"></span>Star
            </a><a class="social-count js-social-count" href="/xing/wysihtml5/stargazers">4,353</a>
          </li>

              <li><a href="/xing/wysihtml5/fork" class="minibutton js-toggler-target fork-button lighter" rel="nofollow" data-method="post"><span class="mini-icon mini-icon-fork"></span>Fork</a><a href="/xing/wysihtml5/network" class="social-count">465</a>
              </li>


    </ul>

              <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
                <span class="repo-label"><span>public</span></span>
                <span class="mega-icon mega-icon-public-repo"></span>
                <span class="author vcard">
                  <a href="/xing" class="url fn" itemprop="url" rel="author">
                  <span itemprop="title">xing</span>
                  </a></span> /
                <strong><a href="/xing/wysihtml5" class="js-current-repository">wysihtml5</a></strong>
              </h1>
            </div>

            

  <ul class="tabs">
    <li><a href="/xing/wysihtml5" class="selected" highlight="repo_sourcerepo_downloadsrepo_commitsrepo_tagsrepo_branches">Code</a></li>
    <li><a href="/xing/wysihtml5/network" highlight="repo_network">Network</a></li>
    <li><a href="/xing/wysihtml5/pulls" highlight="repo_pulls">Pull Requests <span class='counter'>18</span></a></li>

      <li><a href="/xing/wysihtml5/issues" highlight="repo_issues">Issues <span class='counter'>112</span></a></li>

      <li><a href="/xing/wysihtml5/wiki" highlight="repo_wiki">Wiki</a></li>


    <li><a href="/xing/wysihtml5/graphs" highlight="repo_graphsrepo_contributors">Graphs</a></li>


  </ul>
  
<div class="tabnav">

  <span class="tabnav-right">
    <ul class="tabnav-tabs">
          <li><a href="/xing/wysihtml5/tags" class="tabnav-tab" highlight="repo_tags">Tags <span class="counter ">2</span></a></li>
    </ul>
    
  </span>

  <div class="tabnav-widget scope">


    <div class="select-menu js-menu-container js-select-menu js-branch-menu">
      <a class="minibutton select-menu-button js-menu-target" data-hotkey="w" data-ref="master">
        <span class="mini-icon mini-icon-branch"></span>
        <i>branch:</i>
        <span class="js-select-button">master</span>
      </a>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container js-select-menu-pane">

        <div class="select-menu-modal js-select-menu-pane">
          <div class="select-menu-header">
            <span class="select-menu-title">Switch branches/tags</span>
            <span class="mini-icon mini-icon-remove-close js-menu-close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-filters">
            <div class="select-menu-text-filter">
              <input type="text" id="commitish-filter-field" class="js-select-menu-text-filter js-filterable-field js-navigation-enable" placeholder="Find or create a branchâ¦">
            </div> <!-- /.select-menu-text-filter -->
            <div class="select-menu-tabs">
              <ul>
                <li class="select-menu-tab">
                  <a href="#" data-filter="branches" class="js-select-menu-tab selected">Branches</a>
                </li>
                <li class="select-menu-tab">
                  <a href="#" data-filter="tags" class="js-select-menu-tab">Tags</a>
                </li>
              </ul>
            </div><!-- /.select-menu-tabs -->
          </div><!-- /.select-menu-filters -->

          <div class="select-menu-list js-filter-tab js-filter-branches" data-filterable-for="commitish-filter-field" data-filterable-type="substring">



              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-checkmark mini-icon mini-icon-confirm"></span>

                    <a href="/xing/wysihtml5/blob/gh-pages/dist/wysihtml5-0.3.0.min.js" class="js-navigation-open select-menu-item-text js-select-button-text" data-name="gh-pages" rel="nofollow">gh-pages</a>

              </div> <!-- /.select-menu-item -->



              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-checkmark mini-icon mini-icon-confirm"></span>

                    <a href="/xing/wysihtml5/blob/line_breaks/dist/wysihtml5-0.3.0.min.js" class="js-navigation-open select-menu-item-text js-select-button-text" data-name="line_breaks" rel="nofollow">line_breaks</a>

              </div> <!-- /.select-menu-item -->



              <div class="select-menu-item js-navigation-item js-navigation-target selected">
                <span class="select-menu-checkmark mini-icon mini-icon-confirm"></span>

                    <a href="/xing/wysihtml5/blob/master/dist/wysihtml5-0.3.0.min.js" class="js-navigation-open select-menu-item-text js-select-button-text" data-name="master" rel="nofollow">master</a>

              </div> <!-- /.select-menu-item -->


              <div class="select-menu-no-results js-not-filterable">Nothing to show</div>
          </div> <!-- /.select-menu-list -->


          <div class="select-menu-list js-filter-tab js-filter-tags" data-filterable-for="commitish-filter-field" data-filterable-type="substring" style="display:none;">

              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-checkmark mini-icon mini-icon-confirm"></span>
                    <a href="/xing/wysihtml5/blob/0.3.0/dist/wysihtml5-0.3.0.min.js" class="js-navigation-open select-menu-item-text js-select-button-text" data-name="0.3.0" rel="nofollow">0.3.0</a>

              </div> <!-- /.select-menu-item -->
              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-checkmark mini-icon mini-icon-confirm"></span>
                    <a href="/xing/wysihtml5/blob/0.2.0/dist/wysihtml5-0.3.0.min.js" class="js-navigation-open select-menu-item-text js-select-button-text" data-name="0.2.0" rel="nofollow">0.2.0</a>

              </div> <!-- /.select-menu-item -->

            <div class="select-menu-no-results js-not-filterable">Nothing to show</div>

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

  </div> <!-- /.scope -->

  <ul class="tabnav-tabs">
    <li><a href="/xing/wysihtml5" class="selected tabnav-tab" highlight="repo_source">Files</a></li>
    <li><a href="/xing/wysihtml5/commits/master" class="tabnav-tab" highlight="repo_commits">Commits</a></li>
    <li><a href="/xing/wysihtml5/branches" class="tabnav-tab" highlight="repo_branches" rel="nofollow">Branches <span class="counter ">3</span></a></li>
  </ul>

</div>

  
  
  


            
          </div>
        </div><!-- /.repohead -->

        <div id="js-repo-pjax-container" class="container context-loader-container" data-pjax-container>
          


<!-- blob contrib key: blob_contributors:v21:612bf439f32dc2348078df3f1b83b8be -->
<!-- blob contrib frag key: views10/v8/blob_contributors:v21:612bf439f32dc2348078df3f1b83b8be -->

<div id="slider">


    <div class="frame-meta">

      <p title="This is a placeholder element" class="js-history-link-replace hidden"></p>
      <div class="breadcrumb">
        <span class='bold'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/xing/wysihtml5" class="js-slide-to" data-direction="back" itemscope="url"><span itemprop="title">wysihtml5</span></a></span></span> / <span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/xing/wysihtml5/tree/master/dist" class="js-slide-to" data-direction="back" itemscope="url"><span itemprop="title">dist</span></a></span> / <strong class="final-path">wysihtml5-0.3.0.min.js</strong> <span class="js-zeroclipboard zeroclipboard-button" data-clipboard-text="dist/wysihtml5-0.3.0.min.js" data-copied-hint="copied!" title="copy to clipboard"><span class="mini-icon mini-icon-clipboard"></span></span>
      </div>

      <a href="/xing/wysihtml5/find/master" class="js-slide-to" data-hotkey="t" style="display:none">Show File Finder</a>

        
  <div class="commit file-history-tease">
    <img class="main-avatar" height="24" src="https://secure.gravatar.com/avatar/95d719de574a2da9905363545448a67f?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
    <span class="author"><span rel="author">Christopher Blum</span></span>
    <time class="js-relative-date" datetime="2012-05-18T07:41:50-07:00" title="2012-05-18 07:41:50">May 18, 2012</time>
    <div class="commit-title">
        <a href="/xing/wysihtml5/commit/f8a7e30e65e75e0796b41c1e899b7344a38d1f96" class="message">0.3.0 stable</a>
    </div>

    <div class="participation">
      <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>0</strong> contributors</a></p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2>Users on GitHub who have contributed to this file</h2>
      <ul class="facebox-user-list">
      </ul>
    </div>
  </div>


    </div><!-- ./.frame-meta -->

    <div class="frames">
      <div class="frame" data-permalink-url="/xing/wysihtml5/blob/56960b31adc37e07797382d8e8b10109f206b19c/dist/wysihtml5-0.3.0.min.js" data-title="wysihtml5/dist/wysihtml5-0.3.0.min.js at master Â· xing/wysihtml5 Â· GitHub" data-type="blob">

        <div id="files" class="bubble">
          <div class="file">
            <div class="meta">
              <div class="info">
                <span class="icon"><b class="mini-icon mini-icon-text-file"></b></span>
                <span class="mode" title="File Mode">file</span>
                  <span>262 lines (257 sloc)</span>
                <span>112.524 kb</span>
              </div>
              <ul class="button-group actions">
                  <li>
                        <a class="grouped-button minibutton bigger lighter tooltipped leftwards"
                           title="Clicking this button will automatically fork this project so you can edit the file"
                           href="/xing/wysihtml5/edit/master/dist/wysihtml5-0.3.0.min.js"
                           data-method="post" rel="nofollow">Edit</a>
                  </li>
                <li><a href="/xing/wysihtml5/raw/master/dist/wysihtml5-0.3.0.min.js" class="button minibutton grouped-button bigger lighter" id="raw-url">Raw</a></li>
                  <li><a href="/xing/wysihtml5/blame/master/dist/wysihtml5-0.3.0.min.js" class="button minibutton grouped-button bigger lighter">Blame</a></li>
                <li><a href="/xing/wysihtml5/commits/master/dist/wysihtml5-0.3.0.min.js" class="button minibutton grouped-button bigger lighter" rel="nofollow">History</a></li>
              </ul>

            </div>
                <div class="data type-javascript">
      <table cellpadding="0" cellspacing="0" class="lines">
        <tr>
          <td>
            <pre class="line_numbers"><span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>
<span id="L8" rel="#L8">8</span>
<span id="L9" rel="#L9">9</span>
<span id="L10" rel="#L10">10</span>
<span id="L11" rel="#L11">11</span>
<span id="L12" rel="#L12">12</span>
<span id="L13" rel="#L13">13</span>
<span id="L14" rel="#L14">14</span>
<span id="L15" rel="#L15">15</span>
<span id="L16" rel="#L16">16</span>
<span id="L17" rel="#L17">17</span>
<span id="L18" rel="#L18">18</span>
<span id="L19" rel="#L19">19</span>
<span id="L20" rel="#L20">20</span>
<span id="L21" rel="#L21">21</span>
<span id="L22" rel="#L22">22</span>
<span id="L23" rel="#L23">23</span>
<span id="L24" rel="#L24">24</span>
<span id="L25" rel="#L25">25</span>
<span id="L26" rel="#L26">26</span>
<span id="L27" rel="#L27">27</span>
<span id="L28" rel="#L28">28</span>
<span id="L29" rel="#L29">29</span>
<span id="L30" rel="#L30">30</span>
<span id="L31" rel="#L31">31</span>
<span id="L32" rel="#L32">32</span>
<span id="L33" rel="#L33">33</span>
<span id="L34" rel="#L34">34</span>
<span id="L35" rel="#L35">35</span>
<span id="L36" rel="#L36">36</span>
<span id="L37" rel="#L37">37</span>
<span id="L38" rel="#L38">38</span>
<span id="L39" rel="#L39">39</span>
<span id="L40" rel="#L40">40</span>
<span id="L41" rel="#L41">41</span>
<span id="L42" rel="#L42">42</span>
<span id="L43" rel="#L43">43</span>
<span id="L44" rel="#L44">44</span>
<span id="L45" rel="#L45">45</span>
<span id="L46" rel="#L46">46</span>
<span id="L47" rel="#L47">47</span>
<span id="L48" rel="#L48">48</span>
<span id="L49" rel="#L49">49</span>
<span id="L50" rel="#L50">50</span>
<span id="L51" rel="#L51">51</span>
<span id="L52" rel="#L52">52</span>
<span id="L53" rel="#L53">53</span>
<span id="L54" rel="#L54">54</span>
<span id="L55" rel="#L55">55</span>
<span id="L56" rel="#L56">56</span>
<span id="L57" rel="#L57">57</span>
<span id="L58" rel="#L58">58</span>
<span id="L59" rel="#L59">59</span>
<span id="L60" rel="#L60">60</span>
<span id="L61" rel="#L61">61</span>
<span id="L62" rel="#L62">62</span>
<span id="L63" rel="#L63">63</span>
<span id="L64" rel="#L64">64</span>
<span id="L65" rel="#L65">65</span>
<span id="L66" rel="#L66">66</span>
<span id="L67" rel="#L67">67</span>
<span id="L68" rel="#L68">68</span>
<span id="L69" rel="#L69">69</span>
<span id="L70" rel="#L70">70</span>
<span id="L71" rel="#L71">71</span>
<span id="L72" rel="#L72">72</span>
<span id="L73" rel="#L73">73</span>
<span id="L74" rel="#L74">74</span>
<span id="L75" rel="#L75">75</span>
<span id="L76" rel="#L76">76</span>
<span id="L77" rel="#L77">77</span>
<span id="L78" rel="#L78">78</span>
<span id="L79" rel="#L79">79</span>
<span id="L80" rel="#L80">80</span>
<span id="L81" rel="#L81">81</span>
<span id="L82" rel="#L82">82</span>
<span id="L83" rel="#L83">83</span>
<span id="L84" rel="#L84">84</span>
<span id="L85" rel="#L85">85</span>
<span id="L86" rel="#L86">86</span>
<span id="L87" rel="#L87">87</span>
<span id="L88" rel="#L88">88</span>
<span id="L89" rel="#L89">89</span>
<span id="L90" rel="#L90">90</span>
<span id="L91" rel="#L91">91</span>
<span id="L92" rel="#L92">92</span>
<span id="L93" rel="#L93">93</span>
<span id="L94" rel="#L94">94</span>
<span id="L95" rel="#L95">95</span>
<span id="L96" rel="#L96">96</span>
<span id="L97" rel="#L97">97</span>
<span id="L98" rel="#L98">98</span>
<span id="L99" rel="#L99">99</span>
<span id="L100" rel="#L100">100</span>
<span id="L101" rel="#L101">101</span>
<span id="L102" rel="#L102">102</span>
<span id="L103" rel="#L103">103</span>
<span id="L104" rel="#L104">104</span>
<span id="L105" rel="#L105">105</span>
<span id="L106" rel="#L106">106</span>
<span id="L107" rel="#L107">107</span>
<span id="L108" rel="#L108">108</span>
<span id="L109" rel="#L109">109</span>
<span id="L110" rel="#L110">110</span>
<span id="L111" rel="#L111">111</span>
<span id="L112" rel="#L112">112</span>
<span id="L113" rel="#L113">113</span>
<span id="L114" rel="#L114">114</span>
<span id="L115" rel="#L115">115</span>
<span id="L116" rel="#L116">116</span>
<span id="L117" rel="#L117">117</span>
<span id="L118" rel="#L118">118</span>
<span id="L119" rel="#L119">119</span>
<span id="L120" rel="#L120">120</span>
<span id="L121" rel="#L121">121</span>
<span id="L122" rel="#L122">122</span>
<span id="L123" rel="#L123">123</span>
<span id="L124" rel="#L124">124</span>
<span id="L125" rel="#L125">125</span>
<span id="L126" rel="#L126">126</span>
<span id="L127" rel="#L127">127</span>
<span id="L128" rel="#L128">128</span>
<span id="L129" rel="#L129">129</span>
<span id="L130" rel="#L130">130</span>
<span id="L131" rel="#L131">131</span>
<span id="L132" rel="#L132">132</span>
<span id="L133" rel="#L133">133</span>
<span id="L134" rel="#L134">134</span>
<span id="L135" rel="#L135">135</span>
<span id="L136" rel="#L136">136</span>
<span id="L137" rel="#L137">137</span>
<span id="L138" rel="#L138">138</span>
<span id="L139" rel="#L139">139</span>
<span id="L140" rel="#L140">140</span>
<span id="L141" rel="#L141">141</span>
<span id="L142" rel="#L142">142</span>
<span id="L143" rel="#L143">143</span>
<span id="L144" rel="#L144">144</span>
<span id="L145" rel="#L145">145</span>
<span id="L146" rel="#L146">146</span>
<span id="L147" rel="#L147">147</span>
<span id="L148" rel="#L148">148</span>
<span id="L149" rel="#L149">149</span>
<span id="L150" rel="#L150">150</span>
<span id="L151" rel="#L151">151</span>
<span id="L152" rel="#L152">152</span>
<span id="L153" rel="#L153">153</span>
<span id="L154" rel="#L154">154</span>
<span id="L155" rel="#L155">155</span>
<span id="L156" rel="#L156">156</span>
<span id="L157" rel="#L157">157</span>
<span id="L158" rel="#L158">158</span>
<span id="L159" rel="#L159">159</span>
<span id="L160" rel="#L160">160</span>
<span id="L161" rel="#L161">161</span>
<span id="L162" rel="#L162">162</span>
<span id="L163" rel="#L163">163</span>
<span id="L164" rel="#L164">164</span>
<span id="L165" rel="#L165">165</span>
<span id="L166" rel="#L166">166</span>
<span id="L167" rel="#L167">167</span>
<span id="L168" rel="#L168">168</span>
<span id="L169" rel="#L169">169</span>
<span id="L170" rel="#L170">170</span>
<span id="L171" rel="#L171">171</span>
<span id="L172" rel="#L172">172</span>
<span id="L173" rel="#L173">173</span>
<span id="L174" rel="#L174">174</span>
<span id="L175" rel="#L175">175</span>
<span id="L176" rel="#L176">176</span>
<span id="L177" rel="#L177">177</span>
<span id="L178" rel="#L178">178</span>
<span id="L179" rel="#L179">179</span>
<span id="L180" rel="#L180">180</span>
<span id="L181" rel="#L181">181</span>
<span id="L182" rel="#L182">182</span>
<span id="L183" rel="#L183">183</span>
<span id="L184" rel="#L184">184</span>
<span id="L185" rel="#L185">185</span>
<span id="L186" rel="#L186">186</span>
<span id="L187" rel="#L187">187</span>
<span id="L188" rel="#L188">188</span>
<span id="L189" rel="#L189">189</span>
<span id="L190" rel="#L190">190</span>
<span id="L191" rel="#L191">191</span>
<span id="L192" rel="#L192">192</span>
<span id="L193" rel="#L193">193</span>
<span id="L194" rel="#L194">194</span>
<span id="L195" rel="#L195">195</span>
<span id="L196" rel="#L196">196</span>
<span id="L197" rel="#L197">197</span>
<span id="L198" rel="#L198">198</span>
<span id="L199" rel="#L199">199</span>
<span id="L200" rel="#L200">200</span>
<span id="L201" rel="#L201">201</span>
<span id="L202" rel="#L202">202</span>
<span id="L203" rel="#L203">203</span>
<span id="L204" rel="#L204">204</span>
<span id="L205" rel="#L205">205</span>
<span id="L206" rel="#L206">206</span>
<span id="L207" rel="#L207">207</span>
<span id="L208" rel="#L208">208</span>
<span id="L209" rel="#L209">209</span>
<span id="L210" rel="#L210">210</span>
<span id="L211" rel="#L211">211</span>
<span id="L212" rel="#L212">212</span>
<span id="L213" rel="#L213">213</span>
<span id="L214" rel="#L214">214</span>
<span id="L215" rel="#L215">215</span>
<span id="L216" rel="#L216">216</span>
<span id="L217" rel="#L217">217</span>
<span id="L218" rel="#L218">218</span>
<span id="L219" rel="#L219">219</span>
<span id="L220" rel="#L220">220</span>
<span id="L221" rel="#L221">221</span>
<span id="L222" rel="#L222">222</span>
<span id="L223" rel="#L223">223</span>
<span id="L224" rel="#L224">224</span>
<span id="L225" rel="#L225">225</span>
<span id="L226" rel="#L226">226</span>
<span id="L227" rel="#L227">227</span>
<span id="L228" rel="#L228">228</span>
<span id="L229" rel="#L229">229</span>
<span id="L230" rel="#L230">230</span>
<span id="L231" rel="#L231">231</span>
<span id="L232" rel="#L232">232</span>
<span id="L233" rel="#L233">233</span>
<span id="L234" rel="#L234">234</span>
<span id="L235" rel="#L235">235</span>
<span id="L236" rel="#L236">236</span>
<span id="L237" rel="#L237">237</span>
<span id="L238" rel="#L238">238</span>
<span id="L239" rel="#L239">239</span>
<span id="L240" rel="#L240">240</span>
<span id="L241" rel="#L241">241</span>
<span id="L242" rel="#L242">242</span>
<span id="L243" rel="#L243">243</span>
<span id="L244" rel="#L244">244</span>
<span id="L245" rel="#L245">245</span>
<span id="L246" rel="#L246">246</span>
<span id="L247" rel="#L247">247</span>
<span id="L248" rel="#L248">248</span>
<span id="L249" rel="#L249">249</span>
<span id="L250" rel="#L250">250</span>
<span id="L251" rel="#L251">251</span>
<span id="L252" rel="#L252">252</span>
<span id="L253" rel="#L253">253</span>
<span id="L254" rel="#L254">254</span>
<span id="L255" rel="#L255">255</span>
<span id="L256" rel="#L256">256</span>
<span id="L257" rel="#L257">257</span>
<span id="L258" rel="#L258">258</span>
<span id="L259" rel="#L259">259</span>
<span id="L260" rel="#L260">260</span>
<span id="L261" rel="#L261">261</span>
</pre>
          </td>
          <td width="100%">
                <div class="highlight"><pre><div class='line' id='LC1'><span class="cm">/*</span></div><div class='line' id='LC2'><span class="cm"> wysihtml5 v0.3.0</span></div><div class='line' id='LC3'><span class="cm"> https://github.com/xing/wysihtml5</span></div><div class='line' id='LC4'><br/></div><div class='line' id='LC5'><span class="cm"> Author: Christopher Blum (https://github.com/tiff)</span></div><div class='line' id='LC6'><br/></div><div class='line' id='LC7'><span class="cm"> Copyright (C) 2012 XING AG</span></div><div class='line' id='LC8'><span class="cm"> Licensed under the MIT license (MIT)</span></div><div class='line' id='LC9'><br/></div><div class='line' id='LC10'><span class="cm"> Rangy, a cross-browser JavaScript range and selection library</span></div><div class='line' id='LC11'><span class="cm"> http://code.google.com/p/rangy/</span></div><div class='line' id='LC12'><br/></div><div class='line' id='LC13'><span class="cm"> Copyright 2011, Tim Down</span></div><div class='line' id='LC14'><span class="cm"> Licensed under the MIT license.</span></div><div class='line' id='LC15'><span class="cm"> Version: 1.2.2</span></div><div class='line' id='LC16'><span class="cm"> Build date: 13 November 2011</span></div><div class='line' id='LC17'><span class="cm">*/</span></div><div class='line' id='LC18'><span class="kd">var</span> <span class="nx">wysihtml5</span><span class="o">=</span><span class="p">{</span><span class="nx">version</span><span class="o">:</span><span class="s2">&quot;0.3.0&quot;</span><span class="p">,</span><span class="nx">commands</span><span class="o">:</span><span class="p">{},</span><span class="nx">dom</span><span class="o">:</span><span class="p">{},</span><span class="nx">quirks</span><span class="o">:</span><span class="p">{},</span><span class="nx">toolbar</span><span class="o">:</span><span class="p">{},</span><span class="nx">lang</span><span class="o">:</span><span class="p">{},</span><span class="nx">selection</span><span class="o">:</span><span class="p">{},</span><span class="nx">views</span><span class="o">:</span><span class="p">{},</span><span class="nx">INVISIBLE_SPACE</span><span class="o">:</span><span class="s2">&quot;\ufeff&quot;</span><span class="p">,</span><span class="nx">EMPTY_FUNCTION</span><span class="o">:</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">ELEMENT_NODE</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">TEXT_NODE</span><span class="o">:</span><span class="mi">3</span><span class="p">,</span><span class="nx">BACKSPACE_KEY</span><span class="o">:</span><span class="mi">8</span><span class="p">,</span><span class="nx">ENTER_KEY</span><span class="o">:</span><span class="mi">13</span><span class="p">,</span><span class="nx">ESCAPE_KEY</span><span class="o">:</span><span class="mi">27</span><span class="p">,</span><span class="nx">SPACE_KEY</span><span class="o">:</span><span class="mi">32</span><span class="p">,</span><span class="nx">DELETE_KEY</span><span class="o">:</span><span class="mi">46</span><span class="p">};</span></div><div class='line' id='LC19'><span class="nb">window</span><span class="p">.</span><span class="nx">rangy</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="k">return</span> <span class="nx">c</span><span class="o">==</span><span class="nx">k</span><span class="o">||!!</span><span class="p">(</span><span class="nx">c</span><span class="o">==</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">])</span><span class="o">||</span><span class="s2">&quot;unknown&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">}</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="o">!!</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">==</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">])}</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">typeof</span> <span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">!=</span><span class="nx">j</span><span class="p">}</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">--</span><span class="p">;)</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">r</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">q</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nb">window</span><span class="p">.</span><span class="nx">alert</span><span class="p">(</span><span class="s2">&quot;Rangy not supported in your browser. Reason: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);</span><span class="nx">o</span><span class="p">.</span><span class="nx">initialized</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">o</span><span class="p">.</span><span class="nx">supported</span><span class="o">=!</span><span class="mi">1</span><span class="p">}</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">o</span><span class="p">.</span><span class="nx">initialized</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">h</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">(</span><span class="nb">document</span><span class="p">,</span><span class="s2">&quot;createRange&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC20'><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createRange</span><span class="p">(),</span><span class="nx">m</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">p</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">n</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=!</span><span class="mi">0</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">detach</span><span class="p">());</span><span class="k">if</span><span class="p">((</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nb">document</span><span class="p">,</span><span class="s2">&quot;body&quot;</span><span class="p">)</span><span class="o">?</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="o">:</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;body&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;createTextRange&quot;</span><span class="p">))</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">createTextRange</span><span class="p">(),</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">=!</span><span class="mi">0</span><span class="p">);</span><span class="o">!</span><span class="nx">d</span><span class="o">&amp;&amp;!</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">(</span><span class="s2">&quot;Neither Range nor TextRange are implemented&quot;</span><span class="p">);</span><span class="nx">o</span><span class="p">.</span><span class="nx">initialized</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">o</span><span class="p">.</span><span class="nx">features</span><span class="o">=</span><span class="p">{</span><span class="nx">implementsDomRange</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">implementsTextRange</span><span class="o">:</span><span class="nx">h</span><span class="p">};</span><span class="nx">d</span><span class="o">=</span><span class="nx">w</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">z</span><span class="p">);</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">;</span><span class="o">++</span><span class="nx">h</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="nx">d</span><span class="p">[</span><span class="nx">h</span><span class="p">](</span><span class="nx">o</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">j</span><span class="p">){</span><span class="nx">c</span><span class="p">(</span><span class="nb">window</span><span class="p">,</span><span class="s2">&quot;console&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">console</span><span class="p">,</span><span class="s2">&quot;log&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nb">window</span><span class="p">.</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Init listener threw an exception. Continuing.&quot;</span><span class="p">,</span></div><div class='line' id='LC21'><span class="nx">j</span><span class="p">)}}}</span><span class="kd">function</span> <span class="nx">i</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">supported</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">initialized</span><span class="o">=!</span><span class="mi">1</span><span class="p">}</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="s2">&quot;object&quot;</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="s2">&quot;function&quot;</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="s2">&quot;undefined&quot;</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="s2">&quot;startContainer startOffset endContainer endOffset collapsed commonAncestorContainer START_TO_START START_TO_END END_TO_START END_TO_END&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">p</span><span class="o">=</span><span class="s2">&quot;setStart setStartBefore setStartAfter setEnd setEndBefore setEndAfter collapse selectNode selectNodeContents compareBoundaryPoints deleteContents extractContents cloneContents insertNode surroundContents cloneRange toString detach&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span></div><div class='line' id='LC22'><span class="nx">q</span><span class="o">=</span><span class="s2">&quot;boundingHeight boundingLeft boundingTop boundingWidth htmlText text&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="s2">&quot;collapse compareEndPoints duplicate getBookmark moveToBookmark moveToElementText parentElement pasteHTML select setEndPoint getBoundingClientRect&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">m</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">s</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">x</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">o</span><span class="o">=</span><span class="p">{</span><span class="nx">version</span><span class="o">:</span><span class="s2">&quot;1.2.2&quot;</span><span class="p">,</span><span class="nx">initialized</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">supported</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">util</span><span class="o">:</span><span class="p">{</span><span class="nx">isHostMethod</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">isHostObject</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">isHostProperty</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">areHostMethods</span><span class="o">:</span><span class="nx">m</span><span class="p">,</span><span class="nx">areHostObjects</span><span class="o">:</span><span class="nx">s</span><span class="p">,</span><span class="nx">areHostProperties</span><span class="o">:</span><span class="nx">x</span><span class="p">,</span><span class="nx">isTextRange</span><span class="o">:</span><span class="nx">e</span><span class="p">},</span><span class="nx">features</span><span class="o">:</span><span class="p">{},</span><span class="nx">modules</span><span class="o">:</span><span class="p">{},</span><span class="nx">config</span><span class="o">:</span><span class="p">{</span><span class="nx">alertOnWarn</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">preferTextRange</span><span class="o">:!</span><span class="mi">1</span><span class="p">}};</span></div><div class='line' id='LC23'><span class="nx">o</span><span class="p">.</span><span class="nx">fail</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="nx">o</span><span class="p">.</span><span class="nx">warn</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;Rangy warning: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">;</span><span class="nx">o</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">alertOnWarn</span><span class="o">?</span><span class="nb">window</span><span class="p">.</span><span class="nx">alert</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="k">typeof</span> <span class="nb">window</span><span class="p">.</span><span class="nx">console</span><span class="o">!=</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nb">window</span><span class="p">.</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="o">!=</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="nb">window</span><span class="p">.</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">a</span><span class="p">)};({}).</span><span class="nx">hasOwnProperty</span><span class="o">?</span><span class="nx">o</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">extend</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span> <span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">])}</span><span class="o">:</span><span class="nx">f</span><span class="p">(</span><span class="s2">&quot;hasOwnProperty not supported&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">z</span><span class="o">=</span><span class="p">[],</span><span class="nx">w</span><span class="o">=</span><span class="p">[];</span><span class="nx">o</span><span class="p">.</span><span class="nx">init</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="nx">o</span><span class="p">.</span><span class="nx">addInitListener</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">initialized</span><span class="o">?</span><span class="nx">a</span><span class="p">(</span><span class="nx">o</span><span class="p">)</span><span class="o">:</span><span class="nx">z</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">)};</span><span class="kd">var</span> <span class="nx">y</span><span class="o">=</span><span class="p">[];</span><span class="nx">o</span><span class="p">.</span><span class="nx">addCreateMissingNativeApiListener</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">y</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">)};</span><span class="nx">o</span><span class="p">.</span><span class="nx">createMissingNativeApi</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="nb">window</span><span class="p">;</span><span class="nx">g</span><span class="p">();</span></div><div class='line' id='LC24'><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">y</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="o">++</span><span class="nx">b</span><span class="p">)</span><span class="nx">y</span><span class="p">[</span><span class="nx">b</span><span class="p">](</span><span class="nx">a</span><span class="p">)};</span><span class="nx">i</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">fail</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">initialized</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">supported</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">throw</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Module &#39;&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s2">&quot;&#39; failed to load: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);};</span><span class="nx">i</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">warn</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">warn</span><span class="p">(</span><span class="s2">&quot;Module &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s2">&quot;: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">)};</span><span class="nx">i</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">createError</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Error in Rangy &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s2">&quot; module: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">)};</span><span class="nx">o</span><span class="p">.</span><span class="nx">createModule</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">i</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">o</span><span class="p">.</span><span class="nx">modules</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">w</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">initialized</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">supported</span><span class="o">=!</span><span class="mi">0</span><span class="p">})};</span><span class="nx">o</span><span class="p">.</span><span class="nx">requireModules</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">h</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span></div><div class='line' id='LC25'><span class="nx">c</span><span class="p">;</span><span class="o">++</span><span class="nx">b</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="nx">d</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">modules</span><span class="p">[</span><span class="nx">h</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="o">||!</span><span class="p">(</span><span class="nx">d</span> <span class="k">instanceof</span> <span class="nx">i</span><span class="p">))</span><span class="k">throw</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Module &#39;&quot;</span><span class="o">+</span><span class="nx">h</span><span class="o">+</span><span class="s2">&quot;&#39; not found&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">.</span><span class="nx">supported</span><span class="p">)</span><span class="k">throw</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Module &#39;&quot;</span><span class="o">+</span><span class="nx">h</span><span class="o">+</span><span class="s2">&quot;&#39; not supported&quot;</span><span class="p">);}};</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">A</span><span class="o">||</span><span class="p">(</span><span class="nx">A</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">initialized</span><span class="o">||</span><span class="nx">g</span><span class="p">())};</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nb">window</span><span class="o">==</span><span class="nx">j</span><span class="p">)</span><span class="nx">f</span><span class="p">(</span><span class="s2">&quot;No window found&quot;</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nb">document</span><span class="o">==</span><span class="nx">j</span><span class="p">)</span><span class="nx">f</span><span class="p">(</span><span class="s2">&quot;No document found&quot;</span><span class="p">);</span><span class="k">else</span> <span class="k">return</span> <span class="nx">b</span><span class="p">(</span><span class="nb">document</span><span class="p">,</span><span class="s2">&quot;addEventListener&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nb">document</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;DOMContentLoaded&quot;</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="p">(</span><span class="nb">window</span><span class="p">,</span><span class="s2">&quot;addEventListener&quot;</span><span class="p">)</span><span class="o">?</span><span class="nb">window</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;load&quot;</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">(</span><span class="nb">window</span><span class="p">,</span><span class="s2">&quot;attachEvent&quot;</span><span class="p">)</span><span class="o">?</span><span class="nb">window</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s2">&quot;onload&quot;</span><span class="p">,</span></div><div class='line' id='LC26'><span class="nx">s</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="p">(</span><span class="s2">&quot;Window does not have required addEventListener or attachEvent method&quot;</span><span class="p">),</span><span class="nx">o</span><span class="p">}();</span></div><div class='line' id='LC27'><span class="nx">rangy</span><span class="p">.</span><span class="nx">createModule</span><span class="p">(</span><span class="s2">&quot;DomUtil&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">previousSibling</span><span class="p">;)</span><span class="nx">b</span><span class="o">++</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[],</span><span class="nx">d</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">))</span><span class="k">return</span> <span class="nx">d</span><span class="p">;</span><span class="k">return</span> <span class="kc">null</span><span class="p">}</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="nx">c</span><span class="p">;){</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">===</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">}</span><span class="k">return</span> <span class="kc">null</span><span class="p">}</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">;</span><span class="k">return</span> <span class="mi">3</span><span class="o">==</span><span class="nx">a</span><span class="o">||</span><span class="mi">4</span><span class="o">==</span><span class="nx">a</span><span class="o">||</span><span class="mi">8</span><span class="o">==</span><span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="nx">c</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">i</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">9</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">;</span></div><div class='line' id='LC28'><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="o">!=</span><span class="nx">p</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nb">document</span><span class="o">!=</span><span class="nx">p</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nb">document</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">)</span><span class="k">return</span> <span class="nx">i</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">);</span><span class="k">throw</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;getDocument: no document found for node&quot;</span><span class="p">);}</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="o">!</span><span class="nx">a</span><span class="o">?</span><span class="s2">&quot;[No node]&quot;</span><span class="o">:</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="s1">&#39;&quot;&#39;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="o">+</span><span class="s1">&#39;&quot;&#39;</span><span class="o">:</span><span class="mi">1</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">?</span><span class="s2">&quot;&lt;&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">+</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">id</span><span class="o">?</span><span class="s1">&#39; id=&quot;&#39;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">id</span><span class="o">+</span><span class="s1">&#39;&quot;&#39;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;&gt;[&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">}</span><span class="kd">function</span> <span class="nx">k</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_next</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">root</span><span class="o">=</span><span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">j</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">offset</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">code</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">codeName</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">message</span><span class="o">=</span><span class="s2">&quot;DOMException: &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">codeName</span><span class="p">}</span></div><div class='line' id='LC29'><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="s2">&quot;undefined&quot;</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">;</span><span class="nx">q</span><span class="p">.</span><span class="nx">areHostMethods</span><span class="p">(</span><span class="nb">document</span><span class="p">,[</span><span class="s2">&quot;createDocumentFragment&quot;</span><span class="p">,</span><span class="s2">&quot;createElement&quot;</span><span class="p">,</span><span class="s2">&quot;createTextNode&quot;</span><span class="p">])</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">fail</span><span class="p">(</span><span class="s2">&quot;document missing a Node creation method&quot;</span><span class="p">);</span><span class="nx">q</span><span class="p">.</span><span class="nx">isHostMethod</span><span class="p">(</span><span class="nb">document</span><span class="p">,</span><span class="s2">&quot;getElementsByTagName&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">fail</span><span class="p">(</span><span class="s2">&quot;document missing getElementsByTagName method&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="nx">q</span><span class="p">.</span><span class="nx">areHostMethods</span><span class="p">(</span><span class="nx">r</span><span class="p">,[</span><span class="s2">&quot;insertBefore&quot;</span><span class="p">,</span><span class="s2">&quot;appendChild&quot;</span><span class="p">,</span><span class="s2">&quot;cloneNode&quot;</span><span class="p">])</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">fail</span><span class="p">(</span><span class="s2">&quot;Incomplete Element implementation&quot;</span><span class="p">);</span><span class="nx">q</span><span class="p">.</span><span class="nx">isHostProperty</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="s2">&quot;innerHTML&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">fail</span><span class="p">(</span><span class="s2">&quot;Element is missing innerHTML property&quot;</span><span class="p">);</span><span class="nx">r</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="s2">&quot;test&quot;</span><span class="p">);</span></div><div class='line' id='LC30'><span class="nx">q</span><span class="p">.</span><span class="nx">areHostMethods</span><span class="p">(</span><span class="nx">r</span><span class="p">,[</span><span class="s2">&quot;splitText&quot;</span><span class="p">,</span><span class="s2">&quot;deleteData&quot;</span><span class="p">,</span><span class="s2">&quot;insertData&quot;</span><span class="p">,</span><span class="s2">&quot;appendData&quot;</span><span class="p">,</span><span class="s2">&quot;cloneNode&quot;</span><span class="p">])</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">fail</span><span class="p">(</span><span class="s2">&quot;Incomplete Text Node implementation&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">--</span><span class="p">;)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">===</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">};</span><span class="nx">k</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">_current</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">hasNext</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!!</span><span class="k">this</span><span class="p">.</span><span class="nx">_next</span><span class="p">},</span><span class="nx">next</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_current</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_next</span><span class="p">,</span><span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_current</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">a</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">root</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">);)</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_next</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_current</span><span class="p">},</span><span class="nx">detach</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_current</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_next</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">root</span><span class="o">=</span></div><div class='line' id='LC31'><span class="kc">null</span><span class="p">}};</span><span class="nx">j</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">equals</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="o">&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">offset</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">offset</span><span class="p">},</span><span class="nx">inspect</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;[DomPosition(&quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">offset</span><span class="o">+</span><span class="s2">&quot;)]&quot;</span><span class="p">}};</span><span class="nx">n</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">INDEX_SIZE_ERR</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">HIERARCHY_REQUEST_ERR</span><span class="o">:</span><span class="mi">3</span><span class="p">,</span><span class="nx">WRONG_DOCUMENT_ERR</span><span class="o">:</span><span class="mi">4</span><span class="p">,</span><span class="nx">NO_MODIFICATION_ALLOWED_ERR</span><span class="o">:</span><span class="mi">7</span><span class="p">,</span><span class="nx">NOT_FOUND_ERR</span><span class="o">:</span><span class="mi">8</span><span class="p">,</span><span class="nx">NOT_SUPPORTED_ERR</span><span class="o">:</span><span class="mi">9</span><span class="p">,</span><span class="nx">INVALID_STATE_ERR</span><span class="o">:</span><span class="mi">11</span><span class="p">};</span><span class="nx">n</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">message</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="o">=</span><span class="p">{</span><span class="nx">arrayContains</span><span class="o">:</span><span class="nx">m</span><span class="p">,</span><span class="nx">isHtmlNamespace</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span><span class="k">return</span> <span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">namespaceURI</span><span class="o">==</span><span class="nx">p</span><span class="o">||</span><span class="kc">null</span><span class="o">===</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">namespaceURI</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;http://www.w3.org/1999/xhtml&quot;</span><span class="o">==</span></div><div class='line' id='LC32'><span class="nx">b</span><span class="p">},</span><span class="nx">parentElement</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="k">return</span> <span class="mi">1</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="nx">getNodeIndex</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">getNodeLength</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span><span class="k">return</span> <span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">:</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">)</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">:</span><span class="mi">0</span><span class="p">},</span><span class="nx">getCommonAncestor</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">isAncestorOf</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="nx">b</span><span class="p">;){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">===</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">}</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">},</span><span class="nx">getClosestAncestorIn</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">isCharacterDataNode</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">insertAfter</span><span class="o">:</span><span class="nx">g</span><span class="p">,</span><span class="nx">splitDataNode</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">cloneNode</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">deleteData</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">deleteData</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="nx">b</span><span class="p">);</span><span class="nx">g</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span><span class="nx">getDocument</span><span class="o">:</span><span class="nx">i</span><span class="p">,</span><span class="nx">getWindow</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">i</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span></div><div class='line' id='LC33'><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">defaultView</span><span class="o">!=</span><span class="nx">p</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">defaultView</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">parentWindow</span><span class="o">!=</span><span class="nx">p</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">parentWindow</span><span class="p">;</span><span class="k">throw</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Cannot get a window object for node&quot;</span><span class="p">);},</span><span class="nx">getIframeWindow</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">contentWindow</span><span class="o">!=</span><span class="nx">p</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">contentWindow</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">contentDocument</span><span class="o">!=</span><span class="nx">p</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">contentDocument</span><span class="p">.</span><span class="nx">defaultView</span><span class="p">;</span><span class="k">throw</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;getIframeWindow: No Window object found for iframe element&quot;</span><span class="p">);},</span><span class="nx">getIframeDocument</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">contentDocument</span><span class="o">!=</span><span class="nx">p</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">contentDocument</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">contentWindow</span><span class="o">!=</span><span class="nx">p</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">contentWindow</span><span class="p">.</span><span class="nb">document</span><span class="p">;</span></div><div class='line' id='LC34'><span class="k">throw</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;getIframeWindow: No Document object found for iframe element&quot;</span><span class="p">);},</span><span class="nx">getBody</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">q</span><span class="p">.</span><span class="nx">isHostObject</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;body&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">body</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;body&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]},</span><span class="nx">getRootContainer</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;)</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">comparePoints</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">j</span><span class="p">){</span><span class="kd">var</span> <span class="nx">k</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">==</span><span class="nx">h</span><span class="p">)</span><span class="k">return</span> <span class="nx">c</span><span class="o">===</span><span class="nx">j</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">j</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">))</span><span class="k">return</span> <span class="nx">c</span><span class="o">&lt;=</span><span class="nx">a</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">))</span><span class="k">return</span> <span class="nx">a</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span><span class="o">&lt;</span><span class="nx">j</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">===</span><span class="nx">c</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="nx">e</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="nx">h</span><span class="o">=</span><span class="nx">h</span><span class="o">===</span><span class="nx">c</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="nx">e</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">===</span><span class="nx">h</span><span class="p">)</span><span class="k">throw</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;comparePoints got to case 4 and childA and childB are the same!&quot;</span><span class="p">);</span></div><div class='line' id='LC35'><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;</span><span class="nx">c</span><span class="p">;){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">===</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">===</span><span class="nx">h</span><span class="p">)</span><span class="k">return</span> <span class="mi">1</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">}</span><span class="k">throw</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Should not be here!&quot;</span><span class="p">);},</span><span class="nx">inspectNode</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">fragmentFromNodeChildren</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">i</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">createDocumentFragment</span><span class="p">(),</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;)</span><span class="nx">b</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="nx">createIterator</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">k</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">DomPosition</span><span class="o">:</span><span class="nx">j</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">DOMException</span><span class="o">=</span><span class="nx">n</span><span class="p">});</span></div><div class='line' id='LC36'><span class="nx">rangy</span><span class="p">.</span><span class="nx">createModule</span><span class="p">(</span><span class="s2">&quot;DomRange&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="mi">3</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">isAncestorOf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">||</span><span class="nx">l</span><span class="p">.</span><span class="nx">isAncestorOf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">l</span><span class="p">.</span><span class="nx">getDocument</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">_listeners</span><span class="p">[</span><span class="nx">b</span><span class="p">])</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="o">++</span><span class="nx">d</span><span class="p">)</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,{</span><span class="nx">target</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">args</span><span class="o">:</span><span class="nx">c</span><span class="p">})}</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">getNodeIndex</span><span class="p">(</span><span class="nx">a</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">getNodeIndex</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">11</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">firstChild</span><span class="o">:</span><span class="nx">a</span><span class="p">;</span><span class="nx">l</span><span class="p">.</span><span class="nx">isCharacterDataNode</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span></div><div class='line' id='LC37'><span class="nx">c</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">l</span><span class="p">.</span><span class="nx">insertAfter</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">0</span><span class="o">==</span><span class="nx">c</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">splitDataNode</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">))</span><span class="o">:</span><span class="nx">c</span><span class="o">&gt;=</span><span class="nx">b</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">[</span><span class="nx">c</span><span class="p">]);</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="kd">function</span> <span class="nx">i</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">range</span><span class="p">).</span><span class="nx">createDocumentFragment</span><span class="p">();</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">next</span><span class="p">();){</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">isPartiallySelectedSubtree</span><span class="p">();</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">cloneNode</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">);</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">getSubtreeIterator</span><span class="p">(),</span><span class="nx">d</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">i</span><span class="p">(</span><span class="nx">c</span><span class="p">)),</span><span class="nx">c</span><span class="p">.</span><span class="nx">detach</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="mi">10</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">B</span><span class="p">(</span><span class="s2">&quot;HIERARCHY_REQUEST_ERR&quot;</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">d</span><span class="p">)}</span><span class="k">return</span> <span class="nx">h</span><span class="p">}</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="p">{</span><span class="nx">stop</span><span class="o">:!</span><span class="mi">1</span><span class="p">};</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">next</span><span class="p">();)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">isPartiallySelectedSubtree</span><span class="p">())</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="o">===</span></div><div class='line' id='LC38'><span class="nx">b</span><span class="p">(</span><span class="nx">d</span><span class="p">)){</span><span class="nx">c</span><span class="p">.</span><span class="nx">stop</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">break</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getSubtreeIterator</span><span class="p">(),</span><span class="nx">h</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">detach</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">stop</span><span class="p">)</span><span class="k">break</span><span class="p">}</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">createIterator</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">next</span><span class="p">();)</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="o">===</span><span class="nx">b</span><span class="p">(</span><span class="nx">e</span><span class="p">)){</span><span class="nx">c</span><span class="p">.</span><span class="nx">stop</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">k</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">next</span><span class="p">();)</span><span class="nx">a</span><span class="p">.</span><span class="nx">isPartiallySelectedSubtree</span><span class="p">()</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getSubtreeIterator</span><span class="p">(),</span><span class="nx">k</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">detach</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">))</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">remove</span><span class="p">()}</span><span class="kd">function</span> <span class="nx">j</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">range</span><span class="p">).</span><span class="nx">createDocumentFragment</span><span class="p">(),</span><span class="nx">h</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">next</span><span class="p">();){</span><span class="nx">b</span><span class="p">.</span><span class="nx">isPartiallySelectedSubtree</span><span class="p">()</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">cloneNode</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">getSubtreeIterator</span><span class="p">(),</span><span class="nx">c</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">j</span><span class="p">(</span><span class="nx">h</span><span class="p">)),</span><span class="nx">h</span><span class="p">.</span><span class="nx">detach</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">))</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">remove</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="mi">10</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">B</span><span class="p">(</span><span class="s2">&quot;HIERARCHY_REQUEST_ERR&quot;</span><span class="p">);</span></div><div class='line' id='LC39'><span class="nx">d</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">c</span><span class="p">)}</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="kd">function</span> <span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=!</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="o">||!</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">),</span><span class="nx">e</span><span class="p">,</span><span class="nx">j</span><span class="o">=!!</span><span class="nx">c</span><span class="p">;</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;^(&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;|&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;)$&quot;</span><span class="p">));</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="p">[];</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">q</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){(</span><span class="o">!</span><span class="nx">d</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="nx">j</span><span class="o">||</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">)});</span><span class="k">return</span> <span class="nx">k</span><span class="p">}</span><span class="kd">function</span> <span class="nx">p</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;[&quot;</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot;undefined&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">getName</span><span class="o">?</span><span class="s2">&quot;Range&quot;</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">getName</span><span class="p">())</span><span class="o">+</span><span class="s2">&quot;(&quot;</span><span class="o">+</span><span class="nx">l</span><span class="p">.</span><span class="nx">inspectNode</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">startOffset</span><span class="o">+</span><span class="s2">&quot;, &quot;</span><span class="o">+</span><span class="nx">l</span><span class="p">.</span><span class="nx">inspectNode</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">endOffset</span><span class="o">+</span><span class="s2">&quot;)]&quot;</span><span class="p">}</span><span class="kd">function</span> <span class="nx">q</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">range</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">clonePartiallySelectedTextNodes</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">collapsed</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">sc</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">;</span></div><div class='line' id='LC40'><span class="k">this</span><span class="p">.</span><span class="nx">so</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">startOffset</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ec</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">eo</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">endOffset</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">commonAncestorContainer</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">sc</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">ec</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">isCharacterDataNode</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">sc</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">isSingleCharacterDataNode</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_first</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_last</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_next</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">sc</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_first</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_next</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">sc</span><span class="o">===</span><span class="nx">c</span><span class="o">&amp;&amp;!</span><span class="nx">l</span><span class="p">.</span><span class="nx">isCharacterDataNode</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">sc</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">sc</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">so</span><span class="p">]</span><span class="o">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">getClosestAncestorIn</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">sc</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_last</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ec</span><span class="o">===</span><span class="nx">c</span><span class="o">&amp;&amp;!</span><span class="nx">l</span><span class="p">.</span><span class="nx">isCharacterDataNode</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ec</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">ec</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">eo</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">getClosestAncestorIn</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ec</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">))}}</span><span class="kd">function</span> <span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">code</span><span class="o">=</span></div><div class='line' id='LC41'><span class="k">this</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">codeName</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">message</span><span class="o">=</span><span class="s2">&quot;RangeException: &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">codeName</span><span class="p">}</span><span class="kd">function</span> <span class="nx">m</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">nodes</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_next</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">nodes</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="o">=</span><span class="mi">0</span><span class="p">}</span><span class="kd">function</span> <span class="nx">s</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="nx">h</span><span class="p">;){</span><span class="nx">d</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">arrayContains</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">))</span><span class="k">return</span> <span class="nx">h</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">}</span><span class="k">return</span> <span class="kc">null</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">r</span><span class="p">(</span><span class="s2">&quot;INVALID_NODE_TYPE_ERR&quot;</span><span class="p">);}</span><span class="kd">function</span> <span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">B</span><span class="p">(</span><span class="s2">&quot;INVALID_STATE_ERR&quot;</span><span class="p">);}</span><span class="kd">function</span> <span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">l</span><span class="p">.</span><span class="nx">arrayContains</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">r</span><span class="p">(</span><span class="s2">&quot;INVALID_NODE_TYPE_ERR&quot;</span><span class="p">);</span></div><div class='line' id='LC42'><span class="p">}</span><span class="kd">function</span> <span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">b</span><span class="o">||</span><span class="nx">b</span><span class="o">&gt;</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">isCharacterDataNode</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">.</span><span class="nx">length</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">B</span><span class="p">(</span><span class="s2">&quot;INDEX_SIZE_ERR&quot;</span><span class="p">);}</span><span class="kd">function</span> <span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">O</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">!==</span><span class="nx">O</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">B</span><span class="p">(</span><span class="s2">&quot;WRONG_DOCUMENT_ERR&quot;</span><span class="p">);}</span><span class="kd">function</span> <span class="nx">A</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">aa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">B</span><span class="p">(</span><span class="s2">&quot;NO_MODIFICATION_ALLOWED_ERR&quot;</span><span class="p">);}</span><span class="kd">function</span> <span class="nx">t</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">B</span><span class="p">(</span><span class="nx">b</span><span class="p">);}</span><span class="kd">function</span> <span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">l</span><span class="p">.</span><span class="nx">arrayContains</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">O</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">||!</span><span class="nx">l</span><span class="p">.</span><span class="nx">arrayContains</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">O</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">||!</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">startOffset</span><span class="o">&lt;=</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">isCharacterDataNode</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">)</span><span class="o">?</span></div><div class='line' id='LC43'><span class="nx">a</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">.</span><span class="nx">length</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">.</span><span class="nx">length</span><span class="p">))</span><span class="o">||!</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">endOffset</span><span class="o">&lt;=</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">isCharacterDataNode</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">.</span><span class="nx">length</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">.</span><span class="nx">length</span><span class="p">)))</span><span class="k">throw</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Range error: Range is no longer valid after DOM mutation (&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">inspect</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">);}</span><span class="kd">function</span> <span class="nx">D</span><span class="p">(){}</span><span class="kd">function</span> <span class="nx">K</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">START_TO_START</span><span class="o">=</span><span class="nx">Q</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">START_TO_END</span><span class="o">=</span><span class="nx">U</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">END_TO_END</span><span class="o">=</span><span class="nx">ba</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">END_TO_START</span><span class="o">=</span><span class="nx">V</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">NODE_BEFORE</span><span class="o">=</span><span class="nx">W</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">NODE_AFTER</span><span class="o">=</span><span class="nx">X</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">NODE_BEFORE_AND_AFTER</span><span class="o">=</span><span class="nx">Y</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">NODE_INSIDE</span><span class="o">=</span><span class="nx">R</span><span class="p">}</span><span class="kd">function</span> <span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">K</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">K</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">prototype</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">);</span></div><div class='line' id='LC44'><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">startOffset</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">commonAncestorContainer</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="k">new</span> <span class="nx">q</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="nx">c</span><span class="o">!==</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">getClosestAncestorIn</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">f</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">offset</span><span class="p">);</span><span class="nx">h</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">A</span><span class="p">);</span><span class="nx">j</span><span class="p">.</span><span class="nx">reset</span><span class="p">();</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">j</span><span class="p">);</span><span class="nx">j</span><span class="p">.</span><span class="nx">detach</span><span class="p">();</span><span class="nx">b</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">return</span> <span class="nx">e</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">I</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">o</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">z</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">L</span><span class="p">);</span><span class="nx">z</span><span class="p">(</span><span class="nx">M</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">G</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="o">?</span><span class="nx">e</span><span class="o">:</span><span class="nx">f</span><span class="p">)(</span><span class="nx">c</span><span class="p">);(</span><span class="nx">b</span><span class="o">?</span><span class="nx">i</span><span class="o">:</span><span class="nx">n</span><span class="p">)(</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">offset</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">i</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">endOffset</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">startContainer</span><span class="o">||</span><span class="nx">c</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">startOffset</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">!=</span><span class="nx">M</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">||</span><span class="mi">1</span><span class="o">==</span><span class="nx">l</span><span class="p">.</span><span class="nx">comparePoints</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">e</span><span class="p">))</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span></div><div class='line' id='LC45'><span class="nx">h</span><span class="p">,</span><span class="nx">e</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">startOffset</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">endContainer</span><span class="o">||</span><span class="nx">c</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">endOffset</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">!=</span><span class="nx">M</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">||-</span><span class="mi">1</span><span class="o">==</span><span class="nx">l</span><span class="p">.</span><span class="nx">comparePoints</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">e</span><span class="p">))</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)}}</span><span class="nx">a</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="k">new</span> <span class="nx">D</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,{</span><span class="nx">setStart</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">o</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">i</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)},</span><span class="nx">setEnd</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">o</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">n</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)},</span><span class="nx">setStartBefore</span><span class="o">:</span><span class="nx">g</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">setStartAfter</span><span class="o">:</span><span class="nx">g</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">setEndBefore</span><span class="o">:</span><span class="nx">g</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">setEndAfter</span><span class="o">:</span><span class="nx">g</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">collapse</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">a</span><span class="o">?</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">startOffset</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">,</span></div><div class='line' id='LC46'><span class="k">this</span><span class="p">.</span><span class="nx">startOffset</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">endOffset</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">endOffset</span><span class="p">)},</span><span class="nx">selectNodeContents</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">o</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">getNodeLength</span><span class="p">(</span><span class="nx">a</span><span class="p">))},</span><span class="nx">selectNode</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">o</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">L</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">offset</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">offset</span><span class="p">)},</span><span class="nx">extractContents</span><span class="o">:</span><span class="nx">E</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">deleteContents</span><span class="o">:</span><span class="nx">E</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">canSurroundContents</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">A</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">);</span><span class="nx">A</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">);</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">q</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">_first</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">_first</span><span class="p">,</span><span class="k">this</span><span class="p">)</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">_last</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">_last</span><span class="p">,</span><span class="k">this</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">detach</span><span class="p">();</span><span class="k">return</span><span class="o">!</span><span class="nx">b</span><span class="p">},</span></div><div class='line' id='LC47'><span class="nx">detach</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">h</span><span class="p">(</span><span class="k">this</span><span class="p">)},</span><span class="nx">splitBoundaries</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">startOffset</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">endOffset</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="o">===</span><span class="nx">c</span><span class="p">;</span><span class="nx">l</span><span class="p">.</span><span class="nx">isCharacterDataNode</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">splitDataNode</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">);</span><span class="nx">l</span><span class="p">.</span><span class="nx">isCharacterDataNode</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">splitDataNode</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">e</span><span class="o">?</span><span class="p">(</span><span class="nx">h</span><span class="o">-=</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="o">&gt;=</span><span class="nx">l</span><span class="p">.</span><span class="nx">getNodeIndex</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="o">++</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">);</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">)},</span><span class="nx">normalizeBoundaries</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">startOffset</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">endOffset</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span></div><div class='line' id='LC48'><span class="nx">a</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">appendData</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">b</span><span class="p">))},</span><span class="nx">j</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">previousSibling</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">insertData</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">data</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="nx">a</span><span class="o">==</span><span class="nx">c</span><span class="o">?</span><span class="p">(</span><span class="nx">h</span><span class="o">+=</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">getNodeIndex</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">h</span><span class="o">==</span><span class="nx">e</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">j</span><span class="p">)</span><span class="o">:</span><span class="nx">h</span><span class="o">&gt;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="o">--</span><span class="p">)}},</span><span class="nx">k</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">l</span><span class="p">.</span><span class="nx">isCharacterDataNode</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">==</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">[</span><span class="nx">h</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">isCharacterDataNode</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">(</span><span class="nx">k</span><span class="p">),</span><span class="nx">k</span><span class="o">=!</span><span class="k">this</span><span class="p">.</span><span class="nx">collapsed</span><span class="p">);</span><span class="nx">k</span><span class="o">?</span><span class="nx">l</span><span class="p">.</span><span class="nx">isCharacterDataNode</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="mi">0</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span></div><div class='line' id='LC49'><span class="nx">b</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">[</span><span class="nx">b</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">isCharacterDataNode</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">h</span><span class="p">);</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">)},</span><span class="nx">collapseToPoint</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">o</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);(</span><span class="nx">a</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">startContainer</span><span class="o">||</span><span class="nx">b</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">startOffset</span><span class="o">||</span><span class="nx">a</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">endContainer</span><span class="o">||</span><span class="nx">b</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">endOffset</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}});</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">N</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">collapsed</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">startContainer</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">endContainer</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">startOffset</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">endOffset</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">commonAncestorContainer</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">collapsed</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">startContainer</span><span class="o">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">getCommonAncestor</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">startContainer</span><span class="o">!==</span></div><div class='line' id='LC50'><span class="nx">b</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">startOffset</span><span class="o">!==</span><span class="nx">c</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">endContainer</span><span class="o">!==</span><span class="nx">h</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">endOffset</span><span class="o">!==</span><span class="nx">e</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">startContainer</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">startOffset</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">endContainer</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">endOffset</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="nx">N</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;boundarychange&quot;</span><span class="p">,{</span><span class="nx">startMoved</span><span class="o">:</span><span class="nx">j</span><span class="p">,</span><span class="nx">endMoved</span><span class="o">:</span><span class="nx">k</span><span class="p">})}</span><span class="kd">function</span> <span class="nx">C</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">startContainer</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">startOffset</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">endContainer</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">endOffset</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_listeners</span><span class="o">=</span><span class="p">{</span><span class="nx">boundarychange</span><span class="o">:</span><span class="p">[],</span><span class="nx">detach</span><span class="o">:</span><span class="p">[]};</span><span class="nx">N</span><span class="p">(</span><span class="k">this</span><span class="p">)}</span><span class="nx">b</span><span class="p">.</span><span class="nx">requireModules</span><span class="p">([</span><span class="s2">&quot;DomUtil&quot;</span><span class="p">]);</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">DomPosition</span><span class="p">,</span><span class="nx">B</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">DOMException</span><span class="p">;</span><span class="nx">q</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">_current</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">_next</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">_first</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">_last</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">isSingleCharacterDataNode</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">reset</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_current</span><span class="o">=</span></div><div class='line' id='LC51'><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_next</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_first</span><span class="p">},</span><span class="nx">hasNext</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!!</span><span class="k">this</span><span class="p">.</span><span class="nx">_next</span><span class="p">},</span><span class="nx">next</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_current</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_next</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_next</span><span class="o">=</span><span class="nx">a</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">_last</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">nextSibling</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">isCharacterDataNode</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">clonePartiallySelectedTextNodes</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">ec</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">cloneNode</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">)).</span><span class="nx">deleteData</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">eo</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">eo</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_current</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">sc</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">cloneNode</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">)).</span><span class="nx">deleteData</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">so</span><span class="p">)));</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">remove</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_current</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">;</span><span class="nx">l</span><span class="p">.</span><span class="nx">isCharacterDataNode</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">sc</span><span class="o">||</span><span class="nx">a</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">ec</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">sc</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">so</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="o">===</span></div><div class='line' id='LC52'><span class="k">this</span><span class="p">.</span><span class="nx">ec</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">eo</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">b</span><span class="o">!=</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">deleteData</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">-</span><span class="nx">b</span><span class="p">))</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">isPartiallySelectedSubtree</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_current</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">range</span><span class="p">)},</span><span class="nx">getSubtreeIterator</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">isSingleCharacterDataNode</span><span class="p">)</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">range</span><span class="p">.</span><span class="nx">cloneRange</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">collapse</span><span class="p">();</span><span class="k">else</span><span class="p">{</span><span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">C</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">range</span><span class="p">));</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_current</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">getNodeLength</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">l</span><span class="p">.</span><span class="nx">isAncestorOf</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">sc</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">sc</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">so</span><span class="p">);</span><span class="nx">l</span><span class="p">.</span><span class="nx">isAncestorOf</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">ec</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ec</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">eo</span><span class="p">);</span><span class="nx">J</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">j</span><span class="p">)}</span><span class="k">return</span> <span class="k">new</span> <span class="nx">q</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">clonePartiallySelectedTextNodes</span><span class="p">)},</span></div><div class='line' id='LC53'><span class="nx">detach</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">range</span><span class="p">.</span><span class="nx">detach</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">range</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_current</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_next</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_first</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_last</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">sc</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">so</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ec</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">eo</span><span class="o">=</span><span class="kc">null</span><span class="p">}};</span><span class="nx">r</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">BAD_BOUNDARYPOINTS_ERR</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">INVALID_NODE_TYPE_ERR</span><span class="o">:</span><span class="mi">2</span><span class="p">};</span><span class="nx">r</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">message</span><span class="p">};</span><span class="nx">m</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">_current</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">hasNext</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!!</span><span class="k">this</span><span class="p">.</span><span class="nx">_next</span><span class="p">},</span><span class="nx">next</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_current</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_next</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_next</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">nodes</span><span class="p">[</span><span class="o">++</span><span class="k">this</span><span class="p">.</span><span class="nx">_position</span><span class="p">];</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_current</span><span class="p">},</span><span class="nx">detach</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_current</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_next</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">nodes</span><span class="o">=</span><span class="kc">null</span><span class="p">}};</span><span class="kd">var</span> <span class="nx">L</span><span class="o">=</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span></div><div class='line' id='LC54'><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">10</span><span class="p">],</span><span class="nx">G</span><span class="o">=</span><span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">11</span><span class="p">],</span><span class="nx">P</span><span class="o">=</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">11</span><span class="p">],</span><span class="nx">H</span><span class="o">=</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">],</span><span class="nx">M</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">getRootContainer</span><span class="p">,</span><span class="nx">O</span><span class="o">=</span><span class="nx">s</span><span class="p">([</span><span class="mi">9</span><span class="p">,</span><span class="mi">11</span><span class="p">]),</span><span class="nx">aa</span><span class="o">=</span><span class="nx">s</span><span class="p">([</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">12</span><span class="p">]),</span><span class="nx">$</span><span class="o">=</span><span class="nx">s</span><span class="p">([</span><span class="mi">6</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">12</span><span class="p">]),</span><span class="nx">Z</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;style&quot;</span><span class="p">),</span><span class="nx">S</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">Z</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&lt;b&gt;x&lt;/b&gt;&quot;</span><span class="p">,</span><span class="nx">S</span><span class="o">=</span><span class="mi">3</span><span class="o">==</span><span class="nx">Z</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">ca</span><span class="p">){}</span><span class="nx">b</span><span class="p">.</span><span class="nx">features</span><span class="p">.</span><span class="nx">htmlParsingConforms</span><span class="o">=</span><span class="nx">S</span><span class="p">;</span><span class="kd">var</span> <span class="nx">T</span><span class="o">=</span><span class="s2">&quot;startContainer startOffset endContainer endOffset collapsed commonAncestorContainer&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">Q</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">U</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">ba</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span><span class="nx">V</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span><span class="nx">W</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">X</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">Y</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span><span class="nx">R</span><span class="o">=</span><span class="mi">3</span><span class="p">;</span><span class="nx">D</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">attachListener</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_listeners</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">)},</span><span class="nx">compareBoundaryPoints</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">);</span></div><div class='line' id='LC55'><span class="nx">y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="o">==</span><span class="nx">V</span><span class="o">||</span><span class="nx">a</span><span class="o">==</span><span class="nx">Q</span><span class="o">?</span><span class="s2">&quot;start&quot;</span><span class="o">:</span><span class="s2">&quot;end&quot;</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="o">==</span><span class="nx">U</span><span class="o">||</span><span class="nx">a</span><span class="o">==</span><span class="nx">Q</span><span class="o">?</span><span class="s2">&quot;start&quot;</span><span class="o">:</span><span class="s2">&quot;end&quot;</span><span class="p">;</span><span class="k">return</span> <span class="nx">l</span><span class="p">.</span><span class="nx">comparePoints</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;Container&quot;</span><span class="p">],</span><span class="k">this</span><span class="p">[</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;Offset&quot;</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot;Container&quot;</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot;Offset&quot;</span><span class="p">])},</span><span class="nx">insertNode</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">P</span><span class="p">);</span><span class="nx">A</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">isAncestorOf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">B</span><span class="p">(</span><span class="s2">&quot;HIERARCHY_REQUEST_ERR&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">setStartBefore</span><span class="p">(</span><span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">startOffset</span><span class="p">))},</span><span class="nx">cloneContents</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">collapsed</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">createDocumentFragment</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">startContainer</span><span class="o">===</span></div><div class='line' id='LC56'><span class="k">this</span><span class="p">.</span><span class="nx">endContainer</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">isCharacterDataNode</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">))</span><span class="k">return</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">.</span><span class="nx">cloneNode</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">startOffset</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">endOffset</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">createDocumentFragment</span><span class="p">(),</span><span class="nx">c</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">q</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">i</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">detach</span><span class="p">();</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="nx">canSurroundContents</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">A</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">);</span><span class="nx">A</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">);</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">q</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">_first</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">_first</span><span class="p">,</span><span class="k">this</span><span class="p">)</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">_last</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">_last</span><span class="p">,</span><span class="k">this</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">detach</span><span class="p">();</span><span class="k">return</span><span class="o">!</span><span class="nx">b</span><span class="p">},</span><span class="nx">surroundContents</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">H</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">canSurroundContents</span><span class="p">())</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">r</span><span class="p">(</span><span class="s2">&quot;BAD_BOUNDARYPOINTS_ERR&quot;</span><span class="p">);</span></div><div class='line' id='LC57'><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">extractContents</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasChildNodes</span><span class="p">())</span><span class="k">for</span><span class="p">(;</span><span class="nx">a</span><span class="p">.</span><span class="nx">lastChild</span><span class="p">;)</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">lastChild</span><span class="p">);</span><span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">startOffset</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">selectNode</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">cloneRange</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">C</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">)),</span><span class="nx">c</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">d</span><span class="p">;</span><span class="nx">c</span><span class="o">--</span><span class="p">;)</span><span class="nx">d</span><span class="o">=</span><span class="nx">T</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="nx">toString</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">endContainer</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">isCharacterDataNode</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span> <span class="mi">3</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">||</span><span class="mi">4</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">startOffset</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">endOffset</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[],</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">q</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){(</span><span class="mi">3</span><span class="o">==</span></div><div class='line' id='LC58'><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">||</span><span class="mi">4</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">)});</span><span class="nx">a</span><span class="p">.</span><span class="nx">detach</span><span class="p">();</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)},</span><span class="nx">compareNode</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">getNodeIndex</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">B</span><span class="p">(</span><span class="s2">&quot;NOT_FOUND_ERR&quot;</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">comparePoint</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">comparePoint</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span><span class="k">return</span> <span class="mi">0</span><span class="o">&gt;</span><span class="nx">a</span><span class="o">?</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">b</span><span class="o">?</span><span class="nx">Y</span><span class="o">:</span><span class="nx">W</span><span class="o">:</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">b</span><span class="o">?</span><span class="nx">X</span><span class="o">:</span><span class="nx">R</span><span class="p">},</span><span class="nx">comparePoint</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">t</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;HIERARCHY_REQUEST_ERR&quot;</span><span class="p">);</span><span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">);</span><span class="k">return</span> <span class="mi">0</span><span class="o">&gt;</span><span class="nx">l</span><span class="p">.</span><span class="nx">comparePoints</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">startOffset</span><span class="p">)</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">.</span><span class="nx">comparePoints</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">endOffset</span><span class="p">)</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">},</span><span class="nx">createContextualFragment</span><span class="o">:</span><span class="nx">S</span><span class="o">?</span></div><div class='line' id='LC59'><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">getDocument</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">B</span><span class="p">(</span><span class="s2">&quot;INVALID_STATE_ERR&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="mi">1</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">?</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="o">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">isCharacterDataNode</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">parentElement</span><span class="p">(</span><span class="nx">b</span><span class="p">));</span><span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="o">===</span><span class="nx">d</span><span class="o">||</span><span class="s2">&quot;HTML&quot;</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">isHtmlNamespace</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">getDocument</span><span class="p">(</span><span class="nx">d</span><span class="p">).</span><span class="nx">documentElement</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">isHtmlNamespace</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;body&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">cloneNode</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="nx">l</span><span class="p">.</span><span class="nx">fragmentFromNodeChildren</span><span class="p">(</span><span class="nx">d</span><span class="p">)}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">o</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;body&quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">return</span> <span class="nx">l</span><span class="p">.</span><span class="nx">fragmentFromNodeChildren</span><span class="p">(</span><span class="nx">c</span><span class="p">)},</span><span class="nx">toHtml</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">);</span></div><div class='line' id='LC60'><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">cloneContents</span><span class="p">());</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">innerHTML</span><span class="p">},</span><span class="nx">intersectsNode</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">t</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;NOT_FOUND_ERR&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">getDocument</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">!==</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">getNodeIndex</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">t</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;NOT_FOUND_ERR&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">comparePoints</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">endOffset</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">comparePoints</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">h</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">startOffset</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="o">?</span><span class="mi">0</span><span class="o">&gt;=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">d</span><span class="o">:</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">},</span><span class="nx">isPointInRange</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">t</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;HIERARCHY_REQUEST_ERR&quot;</span><span class="p">);</span><span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">);</span><span class="k">return</span> <span class="mi">0</span><span class="o">&lt;=</span></div><div class='line' id='LC61'><span class="nx">l</span><span class="p">.</span><span class="nx">comparePoints</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">startOffset</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&gt;=</span><span class="nx">l</span><span class="p">.</span><span class="nx">comparePoints</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">endOffset</span><span class="p">)},</span><span class="nx">intersectsRange</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">!=</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">B</span><span class="p">(</span><span class="s2">&quot;WRONG_DOCUMENT_ERR&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">comparePoints</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">startOffset</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">endOffset</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">comparePoints</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">endOffset</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">startOffset</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="o">?</span><span class="mi">0</span><span class="o">&gt;=</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">h</span><span class="o">:</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">},</span><span class="nx">intersection</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">intersectsRange</span><span class="p">(</span><span class="nx">a</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">comparePoints</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">,</span></div><div class='line' id='LC62'><span class="k">this</span><span class="p">.</span><span class="nx">startOffset</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">startOffset</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">comparePoints</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">endOffset</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">endOffset</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">cloneRange</span><span class="p">();</span><span class="o">-</span><span class="mi">1</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">setStart</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">startOffset</span><span class="p">);</span><span class="mi">1</span><span class="o">==</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">setEnd</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">endOffset</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="k">return</span> <span class="kc">null</span><span class="p">},</span><span class="nx">union</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">intersectsRange</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">cloneRange</span><span class="p">();</span><span class="o">-</span><span class="mi">1</span><span class="o">==</span><span class="nx">l</span><span class="p">.</span><span class="nx">comparePoints</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">startOffset</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">startOffset</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">setStart</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">startOffset</span><span class="p">);</span><span class="mi">1</span><span class="o">==</span><span class="nx">l</span><span class="p">.</span><span class="nx">comparePoints</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">,</span></div><div class='line' id='LC63'><span class="nx">a</span><span class="p">.</span><span class="nx">endOffset</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">endOffset</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">setEnd</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">endOffset</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">r</span><span class="p">(</span><span class="s2">&quot;Ranges do not intersect&quot;</span><span class="p">);},</span><span class="nx">containsNode</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">intersectsNode</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">compareNode</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">==</span><span class="nx">R</span><span class="p">},</span><span class="nx">containsNodeContents</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="mi">0</span><span class="o">&lt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">comparePoint</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&gt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">comparePoint</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">getNodeLength</span><span class="p">(</span><span class="nx">a</span><span class="p">))},</span><span class="nx">containsRange</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">intersection</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">equals</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">containsNodeText</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">cloneRange</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">selectNode</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">getNodes</span><span class="p">([</span><span class="mi">3</span><span class="p">]);</span><span class="k">return</span> <span class="mi">0</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span></div><div class='line' id='LC64'><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">setStart</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="mi">0</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">setEnd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">containsRange</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">detach</span><span class="p">(),</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">containsNodeContents</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">createNodeIterator</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">return</span> <span class="k">new</span> <span class="nx">m</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)},</span><span class="nx">getNodes</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">return</span> <span class="nx">n</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)},</span><span class="nx">getDocument</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">)},</span><span class="nx">collapseBefore</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">o</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">setEndBefore</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">collapse</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">)},</span><span class="nx">collapseAfter</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">o</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">setStartAfter</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">collapse</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">)},</span><span class="nx">getName</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;DomRange&quot;</span><span class="p">},</span><span class="nx">equals</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">C</span><span class="p">.</span><span class="nx">rangesEqual</span><span class="p">(</span><span class="k">this</span><span class="p">,</span></div><div class='line' id='LC65'><span class="nx">a</span><span class="p">)},</span><span class="nx">inspect</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">p</span><span class="p">(</span><span class="k">this</span><span class="p">)}};</span><span class="nx">I</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="nx">J</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">startContainer</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">startOffset</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">endContainer</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">endOffset</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">collapsed</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">commonAncestorContainer</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;detach&quot;</span><span class="p">,</span><span class="kc">null</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">_listeners</span><span class="o">=</span><span class="kc">null</span><span class="p">});</span><span class="nx">b</span><span class="p">.</span><span class="nx">rangePrototype</span><span class="o">=</span><span class="nx">D</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">C</span><span class="p">.</span><span class="nx">rangeProperties</span><span class="o">=</span><span class="nx">T</span><span class="p">;</span><span class="nx">C</span><span class="p">.</span><span class="nx">RangeIterator</span><span class="o">=</span><span class="nx">q</span><span class="p">;</span><span class="nx">C</span><span class="p">.</span><span class="nx">copyComparisonConstants</span><span class="o">=</span><span class="nx">F</span><span class="p">;</span><span class="nx">C</span><span class="p">.</span><span class="nx">createPrototypeRange</span><span class="o">=</span><span class="nx">I</span><span class="p">;</span><span class="nx">C</span><span class="p">.</span><span class="nx">inspect</span><span class="o">=</span><span class="nx">p</span><span class="p">;</span><span class="nx">C</span><span class="p">.</span><span class="nx">getRangeDocument</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">C</span><span class="p">.</span><span class="nx">rangesEqual</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">startContainer</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">startContainer</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">startOffset</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">startOffset</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">endContainer</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">endContainer</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">endOffset</span><span class="o">===</span></div><div class='line' id='LC66'><span class="nx">b</span><span class="p">.</span><span class="nx">endOffset</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">DomRange</span><span class="o">=</span><span class="nx">C</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">RangeException</span><span class="o">=</span><span class="nx">r</span><span class="p">});</span></div><div class='line' id='LC67'><span class="nx">rangy</span><span class="p">.</span><span class="nx">createModule</span><span class="p">(</span><span class="s2">&quot;WrappedRange&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">duplicate</span><span class="p">();</span><span class="nx">g</span><span class="p">.</span><span class="nx">collapse</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">parentElement</span><span class="p">();</span><span class="nx">e</span><span class="p">.</span><span class="nx">isAncestorOf</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">i</span><span class="p">.</span><span class="nx">canHaveHTML</span><span class="p">)</span><span class="k">return</span> <span class="k">new</span> <span class="nx">f</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">getNodeIndex</span><span class="p">(</span><span class="nx">i</span><span class="p">));</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">getDocument</span><span class="p">(</span><span class="nx">i</span><span class="p">).</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;span&quot;</span><span class="p">),</span><span class="nx">r</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">c</span><span class="o">?</span><span class="s2">&quot;StartToStart&quot;</span><span class="o">:</span><span class="s2">&quot;StartToEnd&quot;</span><span class="p">;</span><span class="k">do</span> <span class="nx">i</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">previousSibling</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">moveToElementText</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">while</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">compareEndPoints</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">a</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">previousSibling</span><span class="p">);</span><span class="nx">m</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="o">==</span><span class="nx">r</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">isCharacterDataNode</span><span class="p">(</span><span class="nx">m</span><span class="p">)){</span><span class="nx">g</span><span class="p">.</span><span class="nx">setEndPoint</span><span class="p">(</span><span class="nx">c</span><span class="o">?</span><span class="s2">&quot;EndToStart&quot;</span><span class="o">:</span><span class="s2">&quot;EndToEnd&quot;</span><span class="p">,</span></div><div class='line' id='LC68'><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="sr">/[\r\n]/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">data</span><span class="p">)){</span><span class="nx">i</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">duplicate</span><span class="p">();</span><span class="nx">c</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">text</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\r\n/g</span><span class="p">,</span><span class="s2">&quot;\r&quot;</span><span class="p">).</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">moveStart</span><span class="p">(</span><span class="s2">&quot;character&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="o">-</span><span class="mi">1</span><span class="o">==</span><span class="nx">i</span><span class="p">.</span><span class="nx">compareEndPoints</span><span class="p">(</span><span class="s2">&quot;StartToEnd&quot;</span><span class="p">,</span><span class="nx">i</span><span class="p">);)</span><span class="nx">c</span><span class="o">++</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">moveStart</span><span class="p">(</span><span class="s2">&quot;character&quot;</span><span class="p">,</span><span class="mi">1</span><span class="p">)}</span><span class="k">else</span> <span class="nx">c</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">text</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">=</span><span class="k">new</span> <span class="nx">f</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="k">else</span> <span class="nx">m</span><span class="o">=</span><span class="p">(</span><span class="nx">d</span><span class="o">||!</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">previousSibling</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="p">(</span><span class="nx">d</span><span class="o">||</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">isCharacterDataNode</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">?</span><span class="k">new</span> <span class="nx">f</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">isCharacterDataNode</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span><span class="o">?</span><span class="k">new</span> <span class="nx">f</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">:</span><span class="k">new</span> <span class="nx">f</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">getNodeIndex</span><span class="p">(</span><span class="nx">b</span><span class="p">));</span><span class="nx">b</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="nx">i</span><span class="p">}</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">offset</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">getDocument</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">createTextRange</span><span class="p">(),</span></div><div class='line' id='LC69'><span class="nx">m</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">isCharacterDataNode</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">);</span><span class="nx">m</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">);</span><span class="nx">g</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;span&quot;</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&amp;#feff;&quot;</span><span class="p">;</span><span class="nx">c</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">g</span><span class="p">);</span><span class="nx">i</span><span class="p">.</span><span class="nx">moveToElementText</span><span class="p">(</span><span class="nx">g</span><span class="p">);</span><span class="nx">i</span><span class="p">.</span><span class="nx">collapse</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">g</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span><span class="nx">i</span><span class="p">[</span><span class="nx">b</span><span class="o">?</span><span class="s2">&quot;moveStart&quot;</span><span class="o">:</span><span class="s2">&quot;moveEnd&quot;</span><span class="p">](</span><span class="s2">&quot;character&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="k">return</span> <span class="nx">i</span><span class="p">}</span><span class="nx">b</span><span class="p">.</span><span class="nx">requireModules</span><span class="p">([</span><span class="s2">&quot;DomUtil&quot;</span><span class="p">,</span><span class="s2">&quot;DomRange&quot;</span><span class="p">]);</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">DomPosition</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">DomRange</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">features</span><span class="p">.</span><span class="nx">implementsDomRange</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">.</span><span class="nx">features</span><span class="p">.</span><span class="nx">implementsTextRange</span><span class="o">||!</span><span class="nx">b</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">preferTextRange</span><span class="p">))(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span></div><div class='line' id='LC70'><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">d</span><span class="p">;</span><span class="nx">c</span><span class="o">--</span><span class="p">;)</span><span class="nx">d</span><span class="o">=</span><span class="nx">j</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">nativeRange</span><span class="p">[</span><span class="nx">d</span><span class="p">]}</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">rangeProperties</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">)</span><span class="k">throw</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Range must be specified&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">nativeRange</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">)};</span><span class="nx">g</span><span class="p">.</span><span class="nx">createPrototypeRange</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">endContainer</span><span class="o">!==</span><span class="nx">d</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">endOffset</span><span class="o">!=</span><span class="nx">h</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">startContainer</span><span class="o">!==</span><span class="nx">b</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">startOffset</span><span class="o">!=</span><span class="nx">c</span><span class="o">||</span><span class="nx">e</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">setEnd</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">h</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">setStart</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">nativeRange</span><span class="p">.</span><span class="nx">detach</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">detached</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">c</span><span class="p">;</span><span class="nx">b</span><span class="o">--</span><span class="p">;)</span><span class="nx">c</span><span class="o">=</span><span class="nx">j</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="kc">null</span><span class="p">});</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">selectNode</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">nativeRange</span><span class="p">.</span><span class="nx">selectNode</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">)};</span><span class="nx">c</span><span class="p">.</span><span class="nx">deleteContents</span><span class="o">=</span></div><div class='line' id='LC71'><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">nativeRange</span><span class="p">.</span><span class="nx">deleteContents</span><span class="p">();</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">)};</span><span class="nx">c</span><span class="p">.</span><span class="nx">extractContents</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">nativeRange</span><span class="p">.</span><span class="nx">extractContents</span><span class="p">();</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">cloneContents</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">nativeRange</span><span class="p">.</span><span class="nx">cloneContents</span><span class="p">()};</span><span class="nx">c</span><span class="p">.</span><span class="nx">surroundContents</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">nativeRange</span><span class="p">.</span><span class="nx">surroundContents</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">)};</span><span class="nx">c</span><span class="p">.</span><span class="nx">collapse</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">nativeRange</span><span class="p">.</span><span class="nx">collapse</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">)};</span><span class="nx">c</span><span class="p">.</span><span class="nx">cloneRange</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">nativeRange</span><span class="p">.</span><span class="nx">cloneRange</span><span class="p">())};</span><span class="nx">c</span><span class="p">.</span><span class="nx">refresh</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">)};</span><span class="nx">c</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">nativeRange</span><span class="p">.</span><span class="nx">toString</span><span class="p">()};</span></div><div class='line' id='LC72'><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="s2">&quot;test&quot;</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">getBody</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createRange</span><span class="p">();</span><span class="nx">q</span><span class="p">.</span><span class="nx">setStart</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="nx">q</span><span class="p">.</span><span class="nx">setEnd</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="k">try</span><span class="p">{</span><span class="nx">q</span><span class="p">.</span><span class="nx">setStart</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">setStart</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">nativeRange</span><span class="p">.</span><span class="nx">setStart</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">)},</span><span class="nx">c</span><span class="p">.</span><span class="nx">setEnd</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">nativeRange</span><span class="p">.</span><span class="nx">setEnd</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">)},</span><span class="nx">f</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">nativeRange</span><span class="p">[</span><span class="nx">b</span><span class="p">](</span><span class="nx">c</span><span class="p">);</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">)}}}</span><span class="k">catch</span><span class="p">(</span><span class="nx">r</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">setStart</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">nativeRange</span><span class="p">.</span><span class="nx">setStart</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">nativeRange</span><span class="p">.</span><span class="nx">setEnd</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">nativeRange</span><span class="p">.</span><span class="nx">setStart</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">)},</span><span class="nx">c</span><span class="p">.</span><span class="nx">setEnd</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span></div><div class='line' id='LC73'><span class="nx">c</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">nativeRange</span><span class="p">.</span><span class="nx">setEnd</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">nativeRange</span><span class="p">.</span><span class="nx">setStart</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">nativeRange</span><span class="p">.</span><span class="nx">setEnd</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">)},</span><span class="nx">f</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">nativeRange</span><span class="p">[</span><span class="nx">b</span><span class="p">](</span><span class="nx">d</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">nativeRange</span><span class="p">[</span><span class="nx">c</span><span class="p">](</span><span class="nx">d</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">nativeRange</span><span class="p">[</span><span class="nx">b</span><span class="p">](</span><span class="nx">d</span><span class="p">)}</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">)}}}</span><span class="nx">c</span><span class="p">.</span><span class="nx">setStartBefore</span><span class="o">=</span><span class="nx">f</span><span class="p">(</span><span class="s2">&quot;setStartBefore&quot;</span><span class="p">,</span><span class="s2">&quot;setEndBefore&quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">setStartAfter</span><span class="o">=</span><span class="nx">f</span><span class="p">(</span><span class="s2">&quot;setStartAfter&quot;</span><span class="p">,</span><span class="s2">&quot;setEndAfter&quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">setEndBefore</span><span class="o">=</span><span class="nx">f</span><span class="p">(</span><span class="s2">&quot;setEndBefore&quot;</span><span class="p">,</span><span class="s2">&quot;setStartBefore&quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">setEndAfter</span><span class="o">=</span><span class="nx">f</span><span class="p">(</span><span class="s2">&quot;setEndAfter&quot;</span><span class="p">,</span><span class="s2">&quot;setStartAfter&quot;</span><span class="p">);</span><span class="nx">q</span><span class="p">.</span><span class="nx">selectNodeContents</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">selectNodeContents</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">startContainer</span><span class="o">==</span></div><div class='line' id='LC74'><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="p">.</span><span class="nx">endContainer</span><span class="o">==</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">==</span><span class="nx">q</span><span class="p">.</span><span class="nx">startOffset</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="p">.</span><span class="nx">endOffset</span><span class="o">==</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">nativeRange</span><span class="p">.</span><span class="nx">selectNodeContents</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">)}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">setStart</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">setEnd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">getEndOffset</span><span class="p">(</span><span class="nx">a</span><span class="p">))};</span><span class="nx">q</span><span class="p">.</span><span class="nx">selectNodeContents</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="nx">q</span><span class="p">.</span><span class="nx">setEnd</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="mi">3</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createRange</span><span class="p">();</span><span class="nx">f</span><span class="p">.</span><span class="nx">selectNodeContents</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">setEnd</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="mi">4</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">setStart</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">compareBoundaryPoints</span><span class="o">=-</span><span class="mi">1</span><span class="o">==</span><span class="nx">q</span><span class="p">.</span><span class="nx">compareBoundaryPoints</span><span class="p">(</span><span class="nx">q</span><span class="p">.</span><span class="nx">START_TO_END</span><span class="p">,</span><span class="nx">f</span><span class="p">)</span><span class="o">&amp;</span><span class="mi">1</span><span class="o">==</span><span class="nx">q</span><span class="p">.</span><span class="nx">compareBoundaryPoints</span><span class="p">(</span><span class="nx">q</span><span class="p">.</span><span class="nx">END_TO_START</span><span class="p">,</span><span class="nx">f</span><span class="p">)</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">nativeRange</span><span class="o">||</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">START_TO_END</span><span class="o">?</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">END_TO_START</span><span class="o">:</span><span class="nx">a</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">END_TO_START</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC75'><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">START_TO_END</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">nativeRange</span><span class="p">.</span><span class="nx">compareBoundaryPoints</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">nativeRange</span><span class="p">.</span><span class="nx">compareBoundaryPoints</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">nativeRange</span><span class="o">||</span><span class="nx">b</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">isHostMethod</span><span class="p">(</span><span class="nx">q</span><span class="p">,</span><span class="s2">&quot;createContextualFragment&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">createContextualFragment</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">nativeRange</span><span class="p">.</span><span class="nx">createContextualFragment</span><span class="p">(</span><span class="nx">a</span><span class="p">)});</span><span class="nx">e</span><span class="p">.</span><span class="nx">getBody</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="nx">q</span><span class="p">.</span><span class="nx">detach</span><span class="p">();</span><span class="nx">f</span><span class="p">.</span><span class="nx">detach</span><span class="p">()})(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">createNativeRange</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="nb">document</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">createRange</span><span class="p">()};</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">features</span><span class="p">.</span><span class="nx">implementsTextRange</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">textRange</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">refresh</span><span class="p">()};</span></div><div class='line' id='LC76'><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="k">new</span> <span class="nx">g</span><span class="p">(</span><span class="nb">document</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">refresh</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">textRange</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">parentElement</span><span class="p">();</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">duplicate</span><span class="p">();</span><span class="nx">f</span><span class="p">.</span><span class="nx">collapse</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">parentElement</span><span class="p">();</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">duplicate</span><span class="p">();</span><span class="nx">f</span><span class="p">.</span><span class="nx">collapse</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">parentElement</span><span class="p">();</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">==</span><span class="nx">d</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">getCommonAncestor</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">==</span><span class="nx">a</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">getCommonAncestor</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="mi">0</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">textRange</span><span class="p">.</span><span class="nx">compareEndPoints</span><span class="p">(</span><span class="s2">&quot;StartToEnd&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">textRange</span><span class="p">)</span><span class="o">?</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textRange</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textRange</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textRange</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">setStart</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">offset</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">setEnd</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">offset</span><span class="p">)};</span><span class="nx">g</span><span class="p">.</span><span class="nx">copyComparisonConstants</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span></div><div class='line' id='LC77'><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">}();</span><span class="s2">&quot;undefined&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">i</span><span class="p">.</span><span class="nx">Range</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">Range</span><span class="o">=</span><span class="nx">d</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">createNativeRange</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="nb">document</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">createTextRange</span><span class="p">()}}</span><span class="nx">b</span><span class="p">.</span><span class="nx">features</span><span class="p">.</span><span class="nx">implementsTextRange</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">rangeToTextRange</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">collapsed</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">(</span><span class="k">new</span> <span class="nx">f</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">startOffset</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="k">new</span> <span class="nx">f</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">startOffset</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="k">new</span> <span class="nx">f</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">endOffset</span><span class="p">),</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">getDocument</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">).</span><span class="nx">body</span><span class="p">.</span><span class="nx">createTextRange</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">setEndPoint</span><span class="p">(</span><span class="s2">&quot;StartToStart&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">setEndPoint</span><span class="p">(</span><span class="s2">&quot;EndToEnd&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">});</span></div><div class='line' id='LC78'><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getName</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;WrappedRange&quot;</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">WrappedRange</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">createRange</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="nb">document</span><span class="p">;</span><span class="k">return</span> <span class="k">new</span> <span class="nx">d</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">createNativeRange</span><span class="p">(</span><span class="nx">a</span><span class="p">))};</span><span class="nx">b</span><span class="p">.</span><span class="nx">createRangyRange</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="nb">document</span><span class="p">;</span><span class="k">return</span> <span class="k">new</span> <span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">createIframeRange</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">createRange</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">getIframeDocument</span><span class="p">(</span><span class="nx">a</span><span class="p">))};</span><span class="nx">b</span><span class="p">.</span><span class="nx">createIframeRangyRange</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">createRangyRange</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">getIframeDocument</span><span class="p">(</span><span class="nx">a</span><span class="p">))};</span><span class="nx">b</span><span class="p">.</span><span class="nx">addCreateMissingNativeApiListener</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nb">document</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">createRange</span><span class="o">==</span><span class="s2">&quot;undefined&quot;</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">createRange</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">createRange</span><span class="p">(</span><span class="k">this</span><span class="p">)};</span></div><div class='line' id='LC79'><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="p">})});</span></div><div class='line' id='LC80'><span class="nx">rangy</span><span class="p">.</span><span class="nx">createModule</span><span class="p">(</span><span class="s2">&quot;WrappedSelection&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">a</span><span class="o">||</span><span class="nb">window</span><span class="p">).</span><span class="nx">getSelection</span><span class="p">()}</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">a</span><span class="o">||</span><span class="nb">window</span><span class="p">).</span><span class="nb">document</span><span class="p">.</span><span class="nx">selection</span><span class="p">}</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="o">?</span><span class="s2">&quot;end&quot;</span><span class="o">:</span><span class="s2">&quot;start&quot;</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">?</span><span class="s2">&quot;start&quot;</span><span class="o">:</span><span class="s2">&quot;end&quot;</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">anchorNode</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot;Container&quot;</span><span class="p">];</span><span class="nx">a</span><span class="p">.</span><span class="nx">anchorOffset</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot;Offset&quot;</span><span class="p">];</span><span class="nx">a</span><span class="p">.</span><span class="nx">focusNode</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;Container&quot;</span><span class="p">];</span><span class="nx">a</span><span class="p">.</span><span class="nx">focusOffset</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;Offset&quot;</span><span class="p">]}</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">anchorNode</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">focusNode</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">anchorOffset</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">focusOffset</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">rangeCount</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">isCollapsed</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">_ranges</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">}</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">;</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">x</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">_selectionNativeRange</span><span class="p">,</span></div><div class='line' id='LC81'><span class="nx">c</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createNativeRange</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">getDocument</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">)),</span><span class="nx">c</span><span class="p">.</span><span class="nx">setEnd</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">endOffset</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">setStart</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">startOffset</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">_selectionNativeRange</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">attachListener</span><span class="p">(</span><span class="s2">&quot;detach&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_selectionNativeRange</span><span class="o">=</span><span class="kc">null</span><span class="p">})))</span><span class="o">:</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">o</span><span class="o">?</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nativeRange</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">features</span><span class="p">.</span><span class="nx">implementsDomRange</span><span class="o">&amp;&amp;</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">m</span><span class="p">.</span><span class="nx">getWindow</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">).</span><span class="nx">Range</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="kd">function</span> <span class="nx">i</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getNodes</span><span class="p">(),</span><span class="nx">c</span><span class="p">;</span><span class="nx">a</span><span class="o">:</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="mi">1</span><span class="o">!=</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">nodeType</span><span class="p">)</span><span class="nx">c</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="nx">c</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="o">++</span><span class="nx">c</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">m</span><span class="p">.</span><span class="nx">isAncestorOf</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">])){</span><span class="nx">c</span><span class="o">=</span></div><div class='line' id='LC82'><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">break</span> <span class="nx">a</span><span class="p">}</span><span class="nx">c</span><span class="o">=!</span><span class="mi">0</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">)</span><span class="k">throw</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;getSingleElementFromRange: range &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">inspect</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot; did not consist of a single element&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]}</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">o</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">_ranges</span><span class="o">=</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">rangeCount</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">isCollapsed</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">collapsed</span><span class="p">}</span><span class="kd">function</span> <span class="nx">k</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">_ranges</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;None&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">docSelection</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">docSelection</span><span class="p">.</span><span class="nx">createRange</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">c</span><span class="p">.</span><span class="nx">text</span><span class="p">)</span><span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="nx">a</span><span class="p">.</span><span class="nx">rangeCount</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">getDocument</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">item</span><span class="p">(</span><span class="mi">0</span><span class="p">)),</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">rangeCount</span><span class="p">;</span><span class="o">++</span><span class="nx">k</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createRange</span><span class="p">(</span><span class="nx">j</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">selectNode</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">item</span><span class="p">(</span><span class="nx">k</span><span class="p">)),</span></div><div class='line' id='LC83'><span class="nx">a</span><span class="p">.</span><span class="nx">_ranges</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">isCollapsed</span><span class="o">=</span><span class="mi">1</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">rangeCount</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">_ranges</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">collapsed</span><span class="p">;</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">_ranges</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">rangeCount</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span><span class="o">!</span><span class="mi">1</span><span class="p">)}}}</span><span class="kd">function</span> <span class="nx">j</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">docSelection</span><span class="p">.</span><span class="nx">createRange</span><span class="p">(),</span><span class="nx">d</span><span class="o">=</span><span class="nx">i</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">getDocument</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">item</span><span class="p">(</span><span class="mi">0</span><span class="p">)),</span><span class="nx">e</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">getBody</span><span class="p">(</span><span class="nx">e</span><span class="p">).</span><span class="nx">createControlRange</span><span class="p">(),</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">j</span><span class="p">;</span><span class="o">++</span><span class="nx">h</span><span class="p">)</span><span class="nx">e</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">item</span><span class="p">(</span><span class="nx">h</span><span class="p">));</span><span class="k">try</span><span class="p">{</span><span class="nx">e</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">d</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">f</span><span class="p">){</span><span class="k">throw</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;addRange(): Element within the specified Range could not be added to control selection (does it have layout?)&quot;</span><span class="p">);}</span><span class="nx">e</span><span class="p">.</span><span class="nx">select</span><span class="p">();</span><span class="nx">k</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">nativeSelection</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">docSelection</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_ranges</span><span class="o">=</span></div><div class='line' id='LC84'><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">win</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">refresh</span><span class="p">()}</span><span class="kd">function</span> <span class="nx">p</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">getDocument</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">startContainer</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">getBody</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">createControlRange</span><span class="p">(),</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">rangeCount</span><span class="p">;</span><span class="o">++</span><span class="nx">d</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">i</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]);</span><span class="k">try</span><span class="p">{</span><span class="nx">c</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">e</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">h</span><span class="p">){</span><span class="k">throw</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;setRanges(): Element within the one of the specified Ranges could not be added to control selection (does it have layout?)&quot;</span><span class="p">);}}</span><span class="nx">c</span><span class="p">.</span><span class="nx">select</span><span class="p">();</span><span class="nx">k</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">q</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">anchorNode</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="p">.</span><span class="nx">getDocument</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">anchorNode</span><span class="p">)</span><span class="o">!==</span><span class="nx">m</span><span class="p">.</span><span class="nx">getDocument</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">z</span><span class="p">(</span><span class="s2">&quot;WRONG_DOCUMENT_ERR&quot;</span><span class="p">);}</span><span class="kd">function</span> <span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">anchorNode</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">anchorOffset</span><span class="p">),</span></div><div class='line' id='LC85'><span class="nx">d</span><span class="o">=</span><span class="k">new</span> <span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">focusNode</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">focusOffset</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">getName</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span><span class="o">:</span><span class="s2">&quot;Selection&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">rangeCount</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">rangeCount</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">j</span><span class="p">;</span><span class="o">++</span><span class="nx">h</span><span class="p">)</span><span class="nx">b</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">inspect</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">getRangeAt</span><span class="p">(</span><span class="nx">h</span><span class="p">));</span><span class="k">return</span><span class="s2">&quot;[&quot;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;(Ranges: &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;, &quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;)(anchor: &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">inspect</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;, focus: &quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">inspect</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="p">}</span><span class="nx">b</span><span class="p">.</span><span class="nx">requireModules</span><span class="p">([</span><span class="s2">&quot;DomUtil&quot;</span><span class="p">,</span><span class="s2">&quot;DomRange&quot;</span><span class="p">,</span><span class="s2">&quot;WrappedRange&quot;</span><span class="p">]);</span><span class="nx">b</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">checkSelectionRanges</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">,</span><span class="nx">x</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">DomRange</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">WrappedRange</span><span class="p">,</span><span class="nx">z</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">DOMException</span><span class="p">,</span><span class="nx">w</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">DomPosition</span><span class="p">,</span><span class="nx">y</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">isHostMethod</span><span class="p">(</span><span class="nb">window</span><span class="p">,</span><span class="s2">&quot;getSelection&quot;</span><span class="p">),</span></div><div class='line' id='LC86'><span class="nx">v</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">isHostObject</span><span class="p">(</span><span class="nb">document</span><span class="p">,</span><span class="s2">&quot;selection&quot;</span><span class="p">),</span><span class="nx">D</span><span class="o">=</span><span class="nx">v</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="nx">t</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">preferTextRange</span><span class="p">);</span><span class="nx">D</span><span class="o">?</span><span class="p">(</span><span class="nx">y</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">isSelectionValid</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="o">||</span><span class="nb">window</span><span class="p">).</span><span class="nb">document</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">selection</span><span class="p">;</span><span class="k">return</span><span class="s2">&quot;None&quot;</span><span class="o">!=</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="nx">m</span><span class="p">.</span><span class="nx">getDocument</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">createRange</span><span class="p">().</span><span class="nx">parentElement</span><span class="p">())</span><span class="o">==</span><span class="nx">a</span><span class="p">})</span><span class="o">:</span><span class="nx">t</span><span class="o">?</span><span class="p">(</span><span class="nx">y</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">isSelectionValid</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">})</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">fail</span><span class="p">(</span><span class="s2">&quot;Neither document.selection or window.getSelection() detected.&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">getNativeSelection</span><span class="o">=</span><span class="nx">y</span><span class="p">;</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">y</span><span class="p">(),</span><span class="nx">K</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createNativeRange</span><span class="p">(</span><span class="nb">document</span><span class="p">),</span><span class="nx">F</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">getBody</span><span class="p">(</span><span class="nb">document</span><span class="p">),</span><span class="nx">E</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">areHostObjects</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">s</span><span class="p">.</span><span class="nx">areHostProperties</span><span class="p">(</span><span class="nx">t</span><span class="p">,[</span><span class="s2">&quot;anchorOffset&quot;</span><span class="p">,</span><span class="s2">&quot;focusOffset&quot;</span><span class="p">]));</span></div><div class='line' id='LC87'><span class="nx">b</span><span class="p">.</span><span class="nx">features</span><span class="p">.</span><span class="nx">selectionHasAnchorAndFocus</span><span class="o">=</span><span class="nx">E</span><span class="p">;</span><span class="kd">var</span> <span class="nx">I</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">isHostMethod</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="s2">&quot;extend&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">features</span><span class="p">.</span><span class="nx">selectionHasExtend</span><span class="o">=</span><span class="nx">I</span><span class="p">;</span><span class="kd">var</span> <span class="nx">N</span><span class="o">=</span><span class="s2">&quot;number&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">t</span><span class="p">.</span><span class="nx">rangeCount</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">features</span><span class="p">.</span><span class="nx">selectionHasRangeCount</span><span class="o">=</span><span class="nx">N</span><span class="p">;</span><span class="kd">var</span> <span class="nx">J</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">C</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">s</span><span class="p">.</span><span class="nx">areHostMethods</span><span class="p">(</span><span class="nx">t</span><span class="p">,[</span><span class="s2">&quot;addRange&quot;</span><span class="p">,</span><span class="s2">&quot;getRangeAt&quot;</span><span class="p">,</span><span class="s2">&quot;removeAllRanges&quot;</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s2">&quot;number&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">t</span><span class="p">.</span><span class="nx">rangeCount</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">features</span><span class="p">.</span><span class="nx">implementsDomRange</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;iframe&quot;</span><span class="p">);</span><span class="nx">F</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">getIframeDocument</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">open</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="s2">&quot;&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;12&lt;/body&gt;&lt;/html&gt;&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">close</span><span class="p">();</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">getIframeWindow</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">getSelection</span><span class="p">(),</span></div><div class='line' id='LC88'><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">lastChild</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createRange</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">setStart</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">collapse</span><span class="p">(</span><span class="kc">true</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">addRange</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">C</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">rangeCount</span><span class="o">==</span><span class="mi">1</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeAllRanges</span><span class="p">();</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">cloneRange</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">setStart</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">setEnd</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">addRange</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">addRange</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="nx">J</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">rangeCount</span><span class="o">==</span><span class="mi">2</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">detach</span><span class="p">();</span><span class="nx">e</span><span class="p">.</span><span class="nx">detach</span><span class="p">();</span><span class="nx">F</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">a</span><span class="p">)}();</span><span class="nx">b</span><span class="p">.</span><span class="nx">features</span><span class="p">.</span><span class="nx">selectionSupportsMultipleRanges</span><span class="o">=</span><span class="nx">J</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">features</span><span class="p">.</span><span class="nx">collapsedNonEditableSelectionsSupported</span><span class="o">=</span><span class="nx">C</span><span class="p">;</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">u</span><span class="p">;</span><span class="nx">F</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">isHostMethod</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="s2">&quot;createControlRange&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">u</span><span class="o">=</span><span class="nx">F</span><span class="p">.</span><span class="nx">createControlRange</span><span class="p">(),</span><span class="nx">s</span><span class="p">.</span><span class="nx">areHostProperties</span><span class="p">(</span><span class="nx">u</span><span class="p">,[</span><span class="s2">&quot;item&quot;</span><span class="p">,</span><span class="s2">&quot;add&quot;</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span></div><div class='line' id='LC89'><span class="o">!</span><span class="mi">0</span><span class="p">));</span><span class="nx">b</span><span class="p">.</span><span class="nx">features</span><span class="p">.</span><span class="nx">implementsControlRange</span><span class="o">=</span><span class="nx">l</span><span class="p">;</span><span class="nx">A</span><span class="o">=</span><span class="nx">E</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">anchorNode</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">focusNode</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">anchorOffset</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">focusOffset</span><span class="p">}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">rangeCount</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">getRangeAt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">rangeCount</span><span class="o">-</span><span class="mi">1</span><span class="p">).</span><span class="nx">collapsed</span><span class="o">:</span><span class="kc">false</span><span class="p">};</span><span class="kd">var</span> <span class="nx">B</span><span class="p">;</span><span class="nx">s</span><span class="p">.</span><span class="nx">isHostMethod</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="s2">&quot;getRangeAt&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">B</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">getRangeAt</span><span class="p">(</span><span class="nx">b</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="p">}}</span><span class="o">:</span><span class="nx">E</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">B</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">getDocument</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">anchorNode</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createRange</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">setStart</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">anchorNode</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">anchorOffset</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">setEnd</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">focusNode</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">focusOffset</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">collapsed</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">isCollapsed</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">setStart</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">focusNode</span><span class="p">,</span></div><div class='line' id='LC90'><span class="nx">a</span><span class="p">.</span><span class="nx">focusOffset</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">setEnd</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">anchorNode</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">anchorOffset</span><span class="p">)}</span><span class="k">return</span> <span class="nx">c</span><span class="p">});</span><span class="nx">b</span><span class="p">.</span><span class="nx">getSelection</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="nb">window</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">_rangySelection</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">v</span><span class="o">?</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">nativeSelection</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">docSelection</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">refresh</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">n</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">_rangySelection</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="k">return</span> <span class="nx">b</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">getIframeSelection</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">getSelection</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">getIframeWindow</span><span class="p">(</span><span class="nx">a</span><span class="p">))};</span><span class="nx">u</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">D</span><span class="o">&amp;&amp;</span><span class="nx">E</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">areHostMethods</span><span class="p">(</span><span class="nx">t</span><span class="p">,[</span><span class="s2">&quot;removeAllRanges&quot;</span><span class="p">,</span><span class="s2">&quot;addRange&quot;</span><span class="p">])){</span><span class="nx">u</span><span class="p">.</span><span class="nx">removeAllRanges</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">nativeSelection</span><span class="p">.</span><span class="nx">removeAllRanges</span><span class="p">();</span><span class="nx">f</span><span class="p">(</span><span class="k">this</span><span class="p">)};</span><span class="kd">var</span> <span class="nx">L</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></div><div class='line' id='LC91'><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">getRangeDocument</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createRange</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">collapseToPoint</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">endOffset</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">nativeSelection</span><span class="p">.</span><span class="nx">addRange</span><span class="p">(</span><span class="nx">g</span><span class="p">(</span><span class="nx">d</span><span class="p">));</span><span class="nx">a</span><span class="p">.</span><span class="nx">nativeSelection</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">startOffset</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">refresh</span><span class="p">()};</span><span class="nx">u</span><span class="p">.</span><span class="nx">addRange</span><span class="o">=</span><span class="nx">N</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">docSelection</span><span class="p">.</span><span class="nx">type</span><span class="o">==</span><span class="s2">&quot;Control&quot;</span><span class="p">)</span><span class="nx">j</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">I</span><span class="p">)</span><span class="nx">L</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">J</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">rangeCount</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">removeAllRanges</span><span class="p">();</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">}</span><span class="k">this</span><span class="p">.</span><span class="nx">nativeSelection</span><span class="p">.</span><span class="nx">addRange</span><span class="p">(</span><span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">rangeCount</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">nativeSelection</span><span class="p">.</span><span class="nx">rangeCount</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">rangeCount</span><span class="o">==</span><span class="nx">d</span><span class="o">+</span><span class="mi">1</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">checkSelectionRanges</span><span class="p">)(</span><span class="nx">d</span><span class="o">=</span></div><div class='line' id='LC92'><span class="nx">B</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">nativeSelection</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">rangeCount</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span><span class="o">&amp;&amp;!</span><span class="nx">x</span><span class="p">.</span><span class="nx">rangesEqual</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">o</span><span class="p">(</span><span class="nx">d</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">_ranges</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">rangeCount</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">e</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">nativeSelection</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">isCollapsed</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="k">this</span><span class="p">)}</span><span class="k">else</span> <span class="k">this</span><span class="p">.</span><span class="nx">refresh</span><span class="p">()}}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">I</span><span class="p">)</span><span class="nx">L</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">nativeSelection</span><span class="p">.</span><span class="nx">addRange</span><span class="p">(</span><span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">refresh</span><span class="p">()}};</span><span class="nx">u</span><span class="p">.</span><span class="nx">setRanges</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">)</span><span class="nx">p</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">removeAllRanges</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="o">++</span><span class="nx">b</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">addRange</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">])}}}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">isHostMethod</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="s2">&quot;empty&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">isHostMethod</span><span class="p">(</span><span class="nx">K</span><span class="p">,</span><span class="s2">&quot;select&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">D</span><span class="p">)</span><span class="nx">u</span><span class="p">.</span><span class="nx">removeAllRanges</span><span class="o">=</span></div><div class='line' id='LC93'><span class="kd">function</span><span class="p">(){</span><span class="k">try</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">docSelection</span><span class="p">.</span><span class="nx">empty</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">docSelection</span><span class="p">.</span><span class="nx">type</span><span class="o">!=</span><span class="s2">&quot;None&quot;</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">anchorNode</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">getDocument</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">anchorNode</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">docSelection</span><span class="p">.</span><span class="nx">type</span><span class="o">==</span><span class="s2">&quot;Control&quot;</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">docSelection</span><span class="p">.</span><span class="nx">createRange</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">getDocument</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">item</span><span class="p">(</span><span class="mi">0</span><span class="p">)).</span><span class="nx">body</span><span class="p">.</span><span class="nx">createTextRange</span><span class="p">())}</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">createTextRange</span><span class="p">().</span><span class="nx">select</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">docSelection</span><span class="p">.</span><span class="nx">empty</span><span class="p">()}}}</span><span class="k">catch</span><span class="p">(</span><span class="nx">c</span><span class="p">){}</span><span class="nx">f</span><span class="p">(</span><span class="k">this</span><span class="p">)},</span><span class="nx">u</span><span class="p">.</span><span class="nx">addRange</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">docSelection</span><span class="p">.</span><span class="nx">type</span><span class="o">==</span><span class="s2">&quot;Control&quot;</span><span class="p">)</span><span class="nx">j</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="nx">o</span><span class="p">.</span><span class="nx">rangeToTextRange</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">select</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">_ranges</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">rangeCount</span><span class="o">=</span></div><div class='line' id='LC94'><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">isCollapsed</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_ranges</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">collapsed</span><span class="p">;</span><span class="nx">e</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="kc">false</span><span class="p">)}},</span><span class="nx">u</span><span class="p">.</span><span class="nx">setRanges</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">removeAllRanges</span><span class="p">();</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">?</span><span class="nx">p</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">addRange</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">])};</span><span class="k">else</span> <span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">fail</span><span class="p">(</span><span class="s2">&quot;No means of selecting a Range or TextRange was found&quot;</span><span class="p">),</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">u</span><span class="p">.</span><span class="nx">getRangeAt</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">||</span><span class="nx">a</span><span class="o">&gt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">rangeCount</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">z</span><span class="p">(</span><span class="s2">&quot;INDEX_SIZE_ERR&quot;</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_ranges</span><span class="p">[</span><span class="nx">a</span><span class="p">]};</span><span class="kd">var</span> <span class="nx">G</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">D</span><span class="p">)</span><span class="nx">G</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">isSelectionValid</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">win</span><span class="p">))</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">docSelection</span><span class="p">.</span><span class="nx">createRange</span><span class="p">();</span><span class="k">else</span><span class="p">{</span><span class="nx">c</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">getBody</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">win</span><span class="p">.</span><span class="nb">document</span><span class="p">).</span><span class="nx">createTextRange</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">collapse</span><span class="p">(</span><span class="kc">true</span><span class="p">)}</span><span class="nx">a</span><span class="p">.</span><span class="nx">docSelection</span><span class="p">.</span><span class="nx">type</span><span class="o">==</span></div><div class='line' id='LC95'><span class="s2">&quot;Control&quot;</span><span class="o">?</span><span class="nx">k</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">c</span><span class="p">.</span><span class="nx">text</span><span class="o">!=</span><span class="s2">&quot;undefined&quot;</span><span class="o">?</span><span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">)};</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">isHostMethod</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="s2">&quot;getRangeAt&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;number&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">t</span><span class="p">.</span><span class="nx">rangeCount</span><span class="p">)</span><span class="nx">G</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">docSelection</span><span class="p">.</span><span class="nx">type</span><span class="o">==</span><span class="s2">&quot;Control&quot;</span><span class="p">)</span><span class="nx">k</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="nx">a</span><span class="p">.</span><span class="nx">_ranges</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">rangeCount</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nativeSelection</span><span class="p">.</span><span class="nx">rangeCount</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">rangeCount</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">rangeCount</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="o">++</span><span class="nx">c</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">_ranges</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="k">new</span> <span class="nx">b</span><span class="p">.</span><span class="nx">WrappedRange</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">nativeSelection</span><span class="p">.</span><span class="nx">getRangeAt</span><span class="p">(</span><span class="nx">c</span><span class="p">));</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">_ranges</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">rangeCount</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">nativeSelection</span><span class="p">));</span><span class="nx">a</span><span class="p">.</span><span class="nx">isCollapsed</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="k">else</span> <span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">)}};</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="o">&amp;&amp;</span><span class="s2">&quot;boolean&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">t</span><span class="p">.</span><span class="nx">isCollapsed</span><span class="o">&amp;&amp;</span><span class="s2">&quot;boolean&quot;</span><span class="o">==</span></div><div class='line' id='LC96'><span class="k">typeof</span> <span class="nx">K</span><span class="p">.</span><span class="nx">collapsed</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">features</span><span class="p">.</span><span class="nx">implementsDomRange</span><span class="p">)</span><span class="nx">G</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nativeSelection</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">anchorNode</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">_ranges</span><span class="o">=</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="nx">a</span><span class="p">.</span><span class="nx">rangeCount</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nativeSelection</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">anchorNode</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">anchorNode</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">anchorOffset</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">anchorOffset</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">focusNode</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">focusNode</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">focusOffset</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">focusOffset</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">isCollapsed</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="k">else</span> <span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">)};</span><span class="k">else</span> <span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">fail</span><span class="p">(</span><span class="s2">&quot;No means of obtaining a Range or TextRange from the user&#39;s selection was found&quot;</span><span class="p">),</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">u</span><span class="p">.</span><span class="nx">refresh</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_ranges</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">;</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">_ranges</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span> <span class="kc">false</span><span class="p">;</span></div><div class='line' id='LC97'><span class="k">for</span><span class="p">(;</span><span class="nx">a</span><span class="o">--</span><span class="p">;)</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">x</span><span class="p">.</span><span class="nx">rangesEqual</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">_ranges</span><span class="p">[</span><span class="nx">a</span><span class="p">]))</span><span class="k">return</span> <span class="kc">false</span><span class="p">;</span><span class="k">return</span> <span class="kc">true</span><span class="p">}};</span><span class="kd">var</span> <span class="nx">P</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getAllRanges</span><span class="p">(),</span><span class="nx">d</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeAllRanges</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="o">++</span><span class="nx">e</span><span class="p">)</span><span class="nx">d</span><span class="o">||</span><span class="nx">b</span><span class="o">!==</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">addRange</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">])</span><span class="o">:</span><span class="nx">d</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">rangeCount</span><span class="o">||</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">)};</span><span class="nx">u</span><span class="p">.</span><span class="nx">removeRange</span><span class="o">=</span><span class="nx">l</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">docSelection</span><span class="p">.</span><span class="nx">type</span><span class="o">==</span><span class="s2">&quot;Control&quot;</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">docSelection</span><span class="p">.</span><span class="nx">createRange</span><span class="p">(),</span><span class="nx">a</span><span class="o">=</span><span class="nx">i</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">getDocument</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">item</span><span class="p">(</span><span class="mi">0</span><span class="p">)),</span><span class="nx">c</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">getBody</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">createControlRange</span><span class="p">(),</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="kc">false</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">j</span><span class="p">;</span><span class="o">++</span><span class="nx">h</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">item</span><span class="p">(</span><span class="nx">h</span><span class="p">);</span><span class="nx">d</span><span class="o">!==</span><span class="nx">a</span><span class="o">||</span><span class="nx">e</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">item</span><span class="p">(</span><span class="nx">h</span><span class="p">))</span><span class="o">:</span><span class="nx">e</span><span class="o">=</span><span class="kc">true</span><span class="p">}</span><span class="nx">c</span><span class="p">.</span><span class="nx">select</span><span class="p">();</span></div><div class='line' id='LC98'><span class="nx">k</span><span class="p">(</span><span class="k">this</span><span class="p">)}</span><span class="k">else</span> <span class="nx">P</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">)}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">P</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">)};</span><span class="kd">var</span> <span class="nx">H</span><span class="p">;</span><span class="o">!</span><span class="nx">D</span><span class="o">&amp;&amp;</span><span class="nx">E</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">features</span><span class="p">.</span><span class="nx">implementsDomRange</span><span class="o">?</span><span class="p">(</span><span class="nx">H</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">anchorNode</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">comparePoints</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">anchorNode</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">anchorOffset</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">focusNode</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">focusOffset</span><span class="p">)</span><span class="o">==</span><span class="mi">1</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="nx">u</span><span class="p">.</span><span class="nx">isBackwards</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">)})</span><span class="o">:</span><span class="nx">H</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">isBackwards</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="kc">false</span><span class="p">};</span><span class="nx">u</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">[],</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">rangeCount</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="o">++</span><span class="nx">b</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">_ranges</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)};</span><span class="nx">u</span><span class="p">.</span><span class="nx">collapse</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">q</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createRange</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">getDocument</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="nx">d</span><span class="p">.</span><span class="nx">collapseToPoint</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></div><div class='line' id='LC99'><span class="nx">c</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">removeAllRanges</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">addRange</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">isCollapsed</span><span class="o">=</span><span class="kc">true</span><span class="p">};</span><span class="nx">u</span><span class="p">.</span><span class="nx">collapseToStart</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">rangeCount</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_ranges</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">collapse</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">startOffset</span><span class="p">)}</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">z</span><span class="p">(</span><span class="s2">&quot;INVALID_STATE_ERR&quot;</span><span class="p">);};</span><span class="nx">u</span><span class="p">.</span><span class="nx">collapseToEnd</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">rangeCount</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_ranges</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">rangeCount</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">collapse</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">endOffset</span><span class="p">)}</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">z</span><span class="p">(</span><span class="s2">&quot;INVALID_STATE_ERR&quot;</span><span class="p">);};</span><span class="nx">u</span><span class="p">.</span><span class="nx">selectAllChildren</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">q</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createRange</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">getDocument</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="nx">c</span><span class="p">.</span><span class="nx">selectNodeContents</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">removeAllRanges</span><span class="p">();</span></div><div class='line' id='LC100'><span class="k">this</span><span class="p">.</span><span class="nx">addRange</span><span class="p">(</span><span class="nx">c</span><span class="p">)};</span><span class="nx">u</span><span class="p">.</span><span class="nx">deleteFromDocument</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">docSelection</span><span class="p">.</span><span class="nx">type</span><span class="o">==</span><span class="s2">&quot;Control&quot;</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">docSelection</span><span class="p">.</span><span class="nx">createRange</span><span class="p">(),</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;){</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">item</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">b</span><span class="p">)}</span><span class="k">this</span><span class="p">.</span><span class="nx">refresh</span><span class="p">()}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">rangeCount</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getAllRanges</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">removeAllRanges</span><span class="p">();</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="o">++</span><span class="nx">b</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">deleteContents</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">addRange</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">-</span><span class="mi">1</span><span class="p">])}};</span><span class="nx">u</span><span class="p">.</span><span class="nx">getAllRanges</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_ranges</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">)};</span><span class="nx">u</span><span class="p">.</span><span class="nx">setSingleRange</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">setRanges</span><span class="p">([</span><span class="nx">a</span><span class="p">])};</span><span class="nx">u</span><span class="p">.</span><span class="nx">containsNode</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span></div><div class='line' id='LC101'><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_ranges</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="o">++</span><span class="nx">c</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_ranges</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">containsNode</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span> <span class="kc">true</span><span class="p">;</span><span class="k">return</span> <span class="kc">false</span><span class="p">};</span><span class="nx">u</span><span class="p">.</span><span class="nx">toHtml</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">rangeCount</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">getRangeDocument</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_ranges</span><span class="p">[</span><span class="mi">0</span><span class="p">]).</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_ranges</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="o">++</span><span class="nx">b</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_ranges</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">cloneContents</span><span class="p">());</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">innerHTML</span><span class="p">}</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="nx">u</span><span class="p">.</span><span class="nx">getName</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;WrappedSelection&quot;</span><span class="p">};</span><span class="nx">u</span><span class="p">.</span><span class="nx">inspect</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">r</span><span class="p">(</span><span class="k">this</span><span class="p">)};</span><span class="nx">u</span><span class="p">.</span><span class="nx">detach</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">win</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">anchorNode</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">focusNode</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">win</span><span class="p">.</span><span class="nx">_rangySelection</span><span class="o">=</span><span class="kc">null</span><span class="p">};</span><span class="nx">n</span><span class="p">.</span><span class="nx">inspect</span><span class="o">=</span></div><div class='line' id='LC102'><span class="nx">r</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">Selection</span><span class="o">=</span><span class="nx">n</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">selectionPrototype</span><span class="o">=</span><span class="nx">u</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">addCreateMissingNativeApiListener</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">getSelection</span><span class="o">==</span><span class="s2">&quot;undefined&quot;</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">getSelection</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">getSelection</span><span class="p">(</span><span class="k">this</span><span class="p">)};</span><span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="p">})});</span><span class="kd">var</span> <span class="nx">Base</span><span class="o">=</span><span class="kd">function</span><span class="p">(){};</span></div><div class='line' id='LC103'><span class="nx">Base</span><span class="p">.</span><span class="nx">extend</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">Base</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">extend</span><span class="p">;</span><span class="nx">Base</span><span class="p">.</span><span class="nx">_prototyping</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">new</span> <span class="k">this</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">base</span><span class="o">=</span><span class="kd">function</span><span class="p">(){};</span><span class="k">delete</span> <span class="nx">Base</span><span class="p">.</span><span class="nx">_prototyping</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">constructor</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">constructor</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">Base</span><span class="p">.</span><span class="nx">_prototyping</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_constructing</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">constructor</span><span class="o">==</span><span class="nx">f</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">_constructing</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">),</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">_constructing</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="k">return</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">extend</span><span class="o">||</span><span class="nx">a</span><span class="p">).</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">d</span><span class="p">)};</span><span class="nx">f</span><span class="p">.</span><span class="nx">ancestor</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">extend</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">extend</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">forEach</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">forEach</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">implement</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">implement</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span></div><div class='line' id='LC104'><span class="nx">d</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">toString</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">valueOf</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="nx">a</span><span class="o">?</span><span class="nx">f</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">valueOf</span><span class="p">()};</span><span class="nx">a</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">f</span><span class="p">.</span><span class="nx">init</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">init</span><span class="p">();</span><span class="k">return</span> <span class="nx">f</span><span class="p">};</span></div><div class='line' id='LC105'><span class="nx">Base</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">extend</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">valueOf</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">valueOf</span><span class="p">()</span><span class="o">!=</span><span class="nx">c</span><span class="p">.</span><span class="nx">valueOf</span><span class="p">())</span><span class="o">&amp;&amp;</span><span class="sr">/\bbase\b/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">valueOf</span><span class="p">(),</span><span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="o">||</span><span class="nx">Base</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">base</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">return</span> <span class="nx">c</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">valueOf</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="nx">a</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="nx">d</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="nx">Base</span><span class="p">.</span><span class="nx">toString</span><span class="p">}</span><span class="k">this</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">Base</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">extend</span><span class="p">;</span><span class="o">!</span><span class="nx">Base</span><span class="p">.</span><span class="nx">_prototyping</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="k">this</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">extend</span><span class="o">||</span><span class="nx">e</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="p">{</span><span class="nx">toSource</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span></div><div class='line' id='LC106'><span class="nx">g</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;constructor&quot;</span><span class="p">,</span><span class="s2">&quot;toString&quot;</span><span class="p">,</span><span class="s2">&quot;valueOf&quot;</span><span class="p">],</span><span class="nx">i</span><span class="o">=</span><span class="nx">Base</span><span class="p">.</span><span class="nx">_prototyping</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="mi">1</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">i</span><span class="o">++</span><span class="p">];)</span><span class="nx">b</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">!=</span><span class="nx">f</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="nx">h</span><span class="p">]);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">h</span> <span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="nx">f</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="nx">h</span><span class="p">])}</span><span class="k">return</span> <span class="k">this</span><span class="p">}};</span></div><div class='line' id='LC107'><span class="nx">Base</span><span class="o">=</span><span class="nx">Base</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">constructor</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">b</span><span class="p">)}},{</span><span class="nx">ancestor</span><span class="o">:</span><span class="nb">Object</span><span class="p">,</span><span class="nx">version</span><span class="o">:</span><span class="s2">&quot;1.1&quot;</span><span class="p">,</span><span class="nx">forEach</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span> <span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="k">void</span> <span class="mi">0</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">prototype</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">)},</span><span class="nx">implement</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">arguments</span><span class="p">[</span><span class="nx">b</span><span class="p">])</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">b</span><span class="p">](</span><span class="k">this</span><span class="p">.</span><span class="nx">prototype</span><span class="p">);</span><span class="k">else</span> <span class="k">this</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">b</span><span class="p">]);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">toString</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">valueOf</span><span class="p">()}});</span></div><div class='line' id='LC108'><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">browser</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">userAgent</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">),</span><span class="nx">a</span><span class="o">=-</span><span class="mi">1</span><span class="o">!==</span><span class="nx">b</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;MSIE&quot;</span><span class="p">)</span><span class="o">&amp;&amp;-</span><span class="mi">1</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;Opera&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">=-</span><span class="mi">1</span><span class="o">!==</span><span class="nx">b</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;Gecko&quot;</span><span class="p">)</span><span class="o">&amp;&amp;-</span><span class="mi">1</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;KHTML&quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">=-</span><span class="mi">1</span><span class="o">!==</span><span class="nx">b</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;AppleWebKit/&quot;</span><span class="p">),</span><span class="nx">f</span><span class="o">=-</span><span class="mi">1</span><span class="o">!==</span><span class="nx">b</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;Chrome/&quot;</span><span class="p">),</span><span class="nx">g</span><span class="o">=-</span><span class="mi">1</span><span class="o">!==</span><span class="nx">b</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;Opera/&quot;</span><span class="p">);</span><span class="k">return</span><span class="p">{</span><span class="nx">USER_AGENT</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">supported</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">USER_AGENT</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">(),</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;contentEditable&quot;</span><span class="k">in</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">execCommand</span><span class="o">&amp;&amp;</span><span class="nb">document</span><span class="p">.</span><span class="nx">queryCommandSupported</span><span class="o">&amp;&amp;</span><span class="nb">document</span><span class="p">.</span><span class="nx">queryCommandState</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="o">&amp;&amp;</span><span class="nb">document</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">,</span></div><div class='line' id='LC109'><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">isIos</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="mi">5</span><span class="o">&gt;</span><span class="p">(</span><span class="sr">/ipad|iphone|ipod/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/ os (\d+).+? like mac os x/</span><span class="p">)</span><span class="o">||</span><span class="p">[,</span><span class="mi">0</span><span class="p">])[</span><span class="mi">1</span><span class="p">]</span><span class="o">||-</span><span class="mi">1</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;opera mobi&quot;</span><span class="p">)</span><span class="o">||-</span><span class="mi">1</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;hpwos/&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">},</span><span class="nx">isTouchDevice</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">supportsEvent</span><span class="p">(</span><span class="s2">&quot;touchmove&quot;</span><span class="p">)},</span><span class="nx">isIos</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">USER_AGENT</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;webkit&quot;</span><span class="p">)</span><span class="o">&amp;&amp;-</span><span class="mi">1</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;mobile&quot;</span><span class="p">)},</span><span class="nx">supportsSandboxedIframes</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">throwsMixedContentWarningWhenIframeSrcIsEmpty</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="p">(</span><span class="s2">&quot;querySelector&quot;</span><span class="k">in</span> <span class="nb">document</span><span class="p">)},</span><span class="nx">displaysCaretInEmptyContentEditableCorrectly</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="nx">d</span><span class="p">},</span></div><div class='line' id='LC110'><span class="nx">hasCurrentStyleProperty</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;currentStyle&quot;</span><span class="k">in</span> <span class="nx">c</span><span class="p">},</span><span class="nx">insertsLineBreaksOnReturn</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">d</span><span class="p">},</span><span class="nx">supportsPlaceholderAttributeOn</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;placeholder&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="p">},</span><span class="nx">supportsEvent</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">a</span> <span class="k">in</span> <span class="nx">c</span><span class="p">))</span><span class="nx">c</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;return;&quot;</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;function&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">c</span><span class="p">[</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">];</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="nx">supportsEventsInIframeCorrectly</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="nx">g</span><span class="p">},</span><span class="nx">firesOnDropOnlyWhenOnDragOverIsCancelled</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">e</span><span class="o">||</span><span class="nx">d</span><span class="p">},</span><span class="nx">supportsDataTransfer</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">Clipboard</span><span class="o">||</span><span class="nb">window</span><span class="p">.</span><span class="nx">DataTransfer</span><span class="p">).</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getData</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}},</span></div><div class='line' id='LC111'><span class="nx">supportsHTML5Tags</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&lt;article&gt;foo&lt;/article&gt;&quot;</span><span class="p">;</span><span class="k">return</span><span class="s2">&quot;&lt;article&gt;foo&lt;/article&gt;&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">innerHTML</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()},</span><span class="nx">supportsCommand</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">{</span><span class="nx">formatBlock</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">insertUnorderedList</span><span class="o">:</span><span class="nx">a</span><span class="o">||</span><span class="nx">g</span><span class="o">||</span><span class="nx">e</span><span class="p">,</span><span class="nx">insertOrderedList</span><span class="o">:</span><span class="nx">a</span><span class="o">||</span><span class="nx">g</span><span class="o">||</span><span class="nx">e</span><span class="p">},</span><span class="nx">c</span><span class="o">=</span><span class="p">{</span><span class="nx">insertHTML</span><span class="o">:</span><span class="nx">d</span><span class="p">};</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]){</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">queryCommandSupported</span><span class="p">(</span><span class="nx">d</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){}</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">queryCommandEnabled</span><span class="p">(</span><span class="nx">d</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">f</span><span class="p">){</span><span class="k">return</span><span class="o">!!</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]}}</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}}(),</span><span class="nx">doesAutoLinkingInContentEditable</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">canDisableAutoLinking</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">supportsCommand</span><span class="p">(</span><span class="nb">document</span><span class="p">,</span></div><div class='line' id='LC112'><span class="s2">&quot;AutoUrlDetect&quot;</span><span class="p">)},</span><span class="nx">clearsContentEditableCorrectly</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">d</span><span class="o">||</span><span class="nx">g</span><span class="o">||</span><span class="nx">e</span><span class="p">},</span><span class="nx">supportsGetAttributeCorrectly</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;1&quot;</span><span class="o">!=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;td&quot;</span><span class="p">).</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;rowspan&quot;</span><span class="p">)},</span><span class="nx">canSelectImagesInContentEditable</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">d</span><span class="o">||</span><span class="nx">a</span><span class="o">||</span><span class="nx">g</span><span class="p">},</span><span class="nx">clearsListsInContentEditableCorrectly</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">d</span><span class="o">||</span><span class="nx">a</span><span class="o">||</span><span class="nx">e</span><span class="p">},</span><span class="nx">autoScrollsToCaret</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="nx">e</span><span class="p">},</span><span class="nx">autoClosesUnclosedTags</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">cloneNode</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&lt;p&gt;&lt;div&gt;&lt;/div&gt;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">innerHTML</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;&lt;p&gt;&lt;/p&gt;&lt;div&gt;&lt;/div&gt;&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;&lt;p&gt;&lt;div&gt;&lt;/div&gt;&lt;/p&gt;&quot;</span><span class="o">===</span></div><div class='line' id='LC113'><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">autoClosesUnclosedTags</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">b</span><span class="p">};</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="nx">supportsNativeGetElementsByClassName</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="o">!==</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByClassName</span><span class="p">).</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;[native code]&quot;</span><span class="p">)},</span><span class="nx">supportsSelectionModify</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;getSelection&quot;</span><span class="k">in</span> <span class="nb">window</span><span class="o">&amp;&amp;</span><span class="s2">&quot;modify&quot;</span><span class="k">in</span> <span class="nb">window</span><span class="p">.</span><span class="nx">getSelection</span><span class="p">()},</span><span class="nx">supportsClassList</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;classList&quot;</span><span class="k">in</span> <span class="nx">c</span><span class="p">},</span><span class="nx">needsSpaceAfterLineBreak</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">g</span><span class="p">},</span><span class="nx">supportsSpeechApiOn</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="mi">11</span><span class="o">&lt;=</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/Chrome\/(\d+)/</span><span class="p">)</span><span class="o">||</span><span class="p">[,</span><span class="mi">0</span><span class="p">])[</span><span class="mi">1</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s2">&quot;onwebkitspeechchange&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">||</span><span class="s2">&quot;speech&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="p">)},</span></div><div class='line' id='LC114'><span class="nx">crashesWhenDefineProperty</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s2">&quot;XMLHttpRequest&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;XDomainRequest&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">)},</span><span class="nx">doesAsyncFocus</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">hasProblemsSettingCaretAfterImg</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">hasUndoInContextMenu</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">d</span><span class="o">||</span><span class="nx">f</span><span class="o">||</span><span class="nx">g</span><span class="p">}}}();</span></div><div class='line' id='LC115'><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">array</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">contains</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">)</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="o">!==</span><span class="nx">b</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">===</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">},</span><span class="nx">without</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">array</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="p">[],</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">])</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]);</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">get</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="p">[];</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]);</span><span class="k">return</span> <span class="nx">d</span><span class="p">}}};</span></div><div class='line' id='LC116'><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">Dispatcher</span><span class="o">=</span><span class="nx">Base</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">observe</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="o">||</span><span class="p">{};</span><span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">||</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">on</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">observe</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">array</span><span class="p">(</span><span class="nx">arguments</span><span class="p">).</span><span class="nx">get</span><span class="p">())},</span><span class="nx">fire</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="o">||</span><span class="p">{};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">||</span><span class="p">[],</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">stopObserving</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="o">||</span><span class="p">{};</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">||</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="p">[];</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">!==</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC117'><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">a</span><span class="p">]);</span><span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">}</span><span class="k">else</span> <span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="o">=</span><span class="p">{};</span><span class="k">return</span> <span class="k">this</span><span class="p">}});</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">object</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">merge</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span> <span class="k">in</span> <span class="nx">c</span><span class="p">)</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">get</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="nx">clone</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">{},</span><span class="nx">a</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span> <span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span><span class="nx">isArray</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;[object Array]&quot;</span><span class="o">===</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">b</span><span class="p">)}}};</span></div><div class='line' id='LC118'><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="sr">/^\s+/</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="sr">/\s+$/</span><span class="p">;</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">string</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span><span class="p">{</span><span class="nx">trim</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)},</span><span class="nx">interpolate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span> <span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;#{&quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;}&quot;</span><span class="p">).</span><span class="nx">by</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]);</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">replace</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">by</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="nx">c</span><span class="p">)}}}}}})();</span></div><div class='line' id='LC119'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">||</span><span class="p">[])[</span><span class="mi">1</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="nx">d</span><span class="p">).</span><span class="nx">length</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">+=</span><span class="nx">c</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;...&quot;</span><span class="p">);</span><span class="s2">&quot;www.&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;http://&quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">);</span><span class="k">return</span><span class="s1">&#39;&lt;a href=&quot;&#39;</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="s1">&#39;&quot;&gt;&#39;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;&lt;/a&gt;&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">})}</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(</span><span class="nx">h</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">TEXT_NODE</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">e</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">,</span><span class="nx">j</span><span class="p">;</span><span class="nx">j</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">;</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">_wysihtml5_tempElement</span><span class="p">;</span><span class="nx">g</span><span class="o">||</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">_wysihtml5_tempElement</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">));</span><span class="nx">j</span><span class="o">=</span></div><div class='line' id='LC120'><span class="nx">g</span><span class="p">;</span><span class="nx">j</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&lt;span&gt;&lt;/span&gt;&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">data</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">);</span><span class="nx">j</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;)</span><span class="nx">f</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">,</span><span class="nx">h</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">h</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">array</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">).</span><span class="nx">get</span><span class="p">();</span><span class="nx">j</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">j</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">g</span><span class="p">]);</span><span class="k">return</span> <span class="nx">h</span><span class="p">}}</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">array</span><span class="p">(</span><span class="s2">&quot;CODE PRE A SCRIPT HEAD TITLE STYLE&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)),</span><span class="nx">e</span><span class="o">=</span><span class="sr">/((https?:\/\/|www\.)[^\s&lt;]{3,})/gi</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="sr">/([^\w\/\-](,?))$/i</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mi">100</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="p">{</span><span class="s2">&quot;)&quot;</span><span class="o">:</span><span class="s2">&quot;(&quot;</span><span class="p">,</span><span class="s2">&quot;]&quot;</span><span class="o">:</span><span class="s2">&quot;[&quot;</span><span class="p">,</span><span class="s2">&quot;}&quot;</span><span class="o">:</span><span class="s2">&quot;{&quot;</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">autoLink</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">;</span><span class="nx">a</span><span class="o">:</span><span class="p">{</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;){</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">e</span><span class="p">)){</span><span class="nx">c</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">break</span> <span class="nx">a</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;body&quot;</span><span class="o">===</span></div><div class='line' id='LC121'><span class="nx">e</span><span class="p">)</span><span class="k">break</span><span class="p">}</span><span class="nx">c</span><span class="o">=!</span><span class="mi">1</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span> <span class="nx">b</span><span class="p">;</span><span class="nx">b</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">.</span><span class="nx">documentElement</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">.</span><span class="nx">body</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">autoLink</span><span class="p">.</span><span class="nx">URL_REG_EXP</span><span class="o">=</span><span class="nx">e</span><span class="p">})(</span><span class="nx">wysihtml5</span><span class="p">);</span></div><div class='line' id='LC122'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">browser</span><span class="p">.</span><span class="nx">supportsClassList</span><span class="p">(),</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">addClass</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">classList</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">className</span><span class="o">+=</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">)};</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeClass</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">classList</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;(^|\\s+)&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;(\\s+|$)&quot;</span><span class="p">),</span><span class="s2">&quot; &quot;</span><span class="p">)};</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasClass</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">classList</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="p">;</span><span class="k">return</span> <span class="mi">0</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">==</span><span class="nx">b</span><span class="o">||</span><span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;(^|\\s)&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;(\\s|$)&quot;</span><span class="p">).</span><span class="nx">test</span><span class="p">(</span><span class="nx">f</span><span class="p">))}})(</span><span class="nx">wysihtml5</span><span class="p">);</span></div><div class='line' id='LC123'><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">contains</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">contains</span><span class="p">)</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">!==</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">ELEMENT_NODE</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="o">!==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">a</span><span class="p">)};</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">compareDocumentPosition</span><span class="p">)</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="o">!!</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">compareDocumentPosition</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;</span><span class="mi">16</span><span class="p">)}}();</span></div><div class='line' id='LC124'><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">convertToList</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;li&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;UL&quot;</span><span class="o">===</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">||</span><span class="s2">&quot;OL&quot;</span><span class="o">===</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">||</span><span class="s2">&quot;MENU&quot;</span><span class="o">===</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">)</span><span class="k">return</span> <span class="nx">c</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="s2">&quot;br&quot;</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">n</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">n</span><span class="o">++</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">n</span><span class="p">];(</span><span class="nx">h</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="o">!==</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">lastChild</span><span class="o">===</span><span class="nx">i</span><span class="p">;){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;block&quot;</span><span class="o">===</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">getStyle</span><span class="p">(</span><span class="s2">&quot;display&quot;</span><span class="p">).</span><span class="nx">from</span><span class="p">(</span><span class="nx">h</span><span class="p">)){</span><span class="nx">h</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="k">break</span><span class="p">}</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">insert</span><span class="p">(</span><span class="nx">i</span><span class="p">).</span><span class="nx">after</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">)}</span><span class="nx">f</span><span class="o">=</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">array</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">).</span><span class="nx">get</span><span class="p">();</span></div><div class='line' id='LC125'><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">n</span><span class="o">++</span><span class="p">)</span><span class="nx">j</span><span class="o">=</span><span class="nx">j</span><span class="o">||</span><span class="nx">b</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">n</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="s2">&quot;block&quot;</span><span class="o">===</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">getStyle</span><span class="p">(</span><span class="s2">&quot;display&quot;</span><span class="p">).</span><span class="nx">from</span><span class="p">(</span><span class="nx">i</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="s2">&quot;BR&quot;</span><span class="o">===</span><span class="nx">i</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">,</span><span class="nx">h</span><span class="o">?</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">firstChild</span><span class="o">?</span><span class="nx">b</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="nx">j</span><span class="p">,</span><span class="nx">j</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">i</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="kc">null</span><span class="p">)</span><span class="o">:</span><span class="nx">k</span><span class="o">?</span><span class="nx">j</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">firstChild</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="nx">j</span><span class="o">:</span><span class="nx">j</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">replaceChild</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span> <span class="nx">e</span><span class="p">}}();</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">copyAttributes</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">from</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">to</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="s2">&quot;undefined&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="s2">&quot;&quot;</span><span class="o">!==</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]);</span><span class="k">return</span><span class="p">{</span><span class="nx">andTo</span><span class="o">:</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">callee</span><span class="p">}}}}}};</span></div><div class='line' id='LC126'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;-webkit-box-sizing&quot;</span><span class="p">,</span><span class="s2">&quot;-moz-box-sizing&quot;</span><span class="p">,</span><span class="s2">&quot;-ms-box-sizing&quot;</span><span class="p">,</span><span class="s2">&quot;box-sizing&quot;</span><span class="p">],</span><span class="nx">a</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">;</span><span class="nx">a</span><span class="o">:</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;border-box&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">getStyle</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">]).</span><span class="nx">from</span><span class="p">(</span><span class="nx">a</span><span class="p">)){</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="k">break</span> <span class="nx">a</span><span class="p">}</span><span class="k">return</span> <span class="nx">e</span><span class="o">?</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">getStyle</span><span class="p">(</span><span class="s2">&quot;width&quot;</span><span class="p">).</span><span class="nx">from</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="mi">10</span><span class="p">)</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="o">:!</span><span class="mi">1</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">copyStyles</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">from</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">a</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">array</span><span class="p">(</span><span class="nx">d</span><span class="p">).</span><span class="nx">without</span><span class="p">(</span><span class="nx">c</span><span class="p">));</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span><span class="nx">f</span><span class="o">+=</span><span class="nx">h</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">getStyle</span><span class="p">(</span><span class="nx">h</span><span class="p">).</span><span class="nx">from</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;;&quot;</span><span class="p">;</span><span class="k">return</span><span class="p">{</span><span class="nx">to</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">setStyles</span><span class="p">(</span><span class="nx">f</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span><span class="p">{</span><span class="nx">andTo</span><span class="o">:</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">callee</span><span class="p">}}}}}}})(</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">dom</span><span class="p">);</span></div><div class='line' id='LC127'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">delegate</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">target</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">array</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="o">!==</span><span class="nx">c</span><span class="p">;){</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">g</span><span class="p">)){</span><span class="nx">e</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">break</span><span class="p">}</span><span class="nx">g</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">}})}})(</span><span class="nx">wysihtml5</span><span class="p">);</span></div><div class='line' id='LC128'><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">getAsDom</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="s2">&quot;abbr article aside audio bdi canvas command datalist details figcaption figure footer header hgroup keygen mark meter nav output progress rp rt ruby svg section source summary time track video wbr&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="nb">document</span><span class="p">,</span><span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;object&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">browser</span><span class="p">.</span><span class="nx">supportsHTML5Tags</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">.</span><span class="nx">_wysihtml5_supportsHTML5Tags</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span></div><div class='line' id='LC129'><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">]);</span><span class="nx">d</span><span class="p">.</span><span class="nx">_wysihtml5_supportsHTML5Tags</span><span class="o">=!</span><span class="mi">0</span><span class="p">}</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">try</span><span class="p">{</span><span class="nx">e</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">c</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">g</span><span class="p">){}</span><span class="nx">d</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">}</span><span class="k">return</span> <span class="nx">d</span><span class="p">}}();</span></div><div class='line' id='LC130'><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">getParentElement</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="o">!</span><span class="nx">a</span><span class="o">||!</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">?!</span><span class="mi">0</span><span class="o">:</span><span class="s2">&quot;string&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">?</span><span class="nx">b</span><span class="o">===</span><span class="nx">a</span><span class="o">:</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">array</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">contains</span><span class="p">(</span><span class="nx">b</span><span class="p">)}</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="o">||</span><span class="mi">50</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">classRegExp</span><span class="p">){</span><span class="nx">a</span><span class="o">:</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">classRegExp</span><span class="p">;</span><span class="nx">d</span><span class="o">--&amp;&amp;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="s2">&quot;BODY&quot;</span><span class="o">!==</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">;){</span><span class="kd">var</span> <span class="nx">g</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">ELEMENT_NODE</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">,</span><span class="nx">e</span><span class="p">)){</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">className</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">match</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="p">[];</span><span class="nx">g</span><span class="o">=!</span><span class="nx">g</span><span class="o">?!!</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="o">:</span><span class="nx">i</span><span class="p">[</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">===</span><span class="nx">g</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="k">break</span> <span class="nx">a</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">}</span><span class="nx">c</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="nx">a</span><span class="o">:</span><span class="p">{</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">f</span><span class="o">--&amp;&amp;</span></div><div class='line' id='LC131'><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="s2">&quot;BODY&quot;</span><span class="o">!==</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">;){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">,</span><span class="nx">e</span><span class="p">))</span><span class="k">break</span> <span class="nx">a</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">}</span><span class="nx">c</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="k">return</span> <span class="nx">c</span><span class="p">}}();</span></div><div class='line' id='LC132'><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">getStyle</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">1</span><span class="p">).</span><span class="nx">toUpperCase</span><span class="p">()})}</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">{</span><span class="s2">&quot;float&quot;</span><span class="o">:</span><span class="s2">&quot;styleFloat&quot;</span><span class="k">in</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">).</span><span class="nx">style</span><span class="o">?</span><span class="s2">&quot;styleFloat&quot;</span><span class="o">:</span><span class="s2">&quot;cssFloat&quot;</span><span class="p">},</span><span class="nx">a</span><span class="o">=</span><span class="sr">/\-[a-z]/g</span><span class="p">;</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">from</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">ELEMENT_NODE</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">||</span><span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">style</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="nx">g</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span><span class="k">return</span> <span class="nx">k</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="nx">h</span><span class="p">[</span><span class="nx">g</span><span class="p">]}</span><span class="k">catch</span><span class="p">(</span><span class="nx">j</span><span class="p">){}</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">defaultView</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">parentWindow</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">(</span><span class="s2">&quot;height&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;width&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;TEXTAREA&quot;</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">,</span></div><div class='line' id='LC133'><span class="nx">n</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="p">)</span><span class="k">return</span> <span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">overflow</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">overflow</span><span class="o">=</span><span class="s2">&quot;hidden&quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kc">null</span><span class="p">).</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">overflow</span><span class="o">=</span><span class="nx">n</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">e</span><span class="p">}}}}}();</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">hasElementWithTagName</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">{},</span><span class="nx">c</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">_wysihtml5_identifier</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">_wysihtml5_identifier</span><span class="o">=</span><span class="nx">c</span><span class="o">++</span><span class="p">))</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="nx">f</span><span class="o">||</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="nx">d</span><span class="p">));</span><span class="k">return</span> <span class="mi">0</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">}}();</span></div><div class='line' id='LC134'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">{},</span><span class="nx">a</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">hasElementWithClassName</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">.</span><span class="nx">browser</span><span class="p">.</span><span class="nx">supportsNativeGetElementsByClassName</span><span class="p">())</span><span class="k">return</span><span class="o">!!</span><span class="nx">d</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">);</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">_wysihtml5_identifier</span><span class="o">||</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">_wysihtml5_identifier</span><span class="o">=</span><span class="nx">a</span><span class="o">++</span><span class="p">))</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="nx">g</span><span class="o">||</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">getElementsByClassName</span><span class="p">(</span><span class="nx">e</span><span class="p">));</span><span class="k">return</span> <span class="mi">0</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">}})(</span><span class="nx">wysihtml5</span><span class="p">);</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">insert</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">after</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">)},</span><span class="nx">before</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">into</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">b</span><span class="p">)}}};</span></div><div class='line' id='LC135'><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">insertCSS</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;\n&quot;</span><span class="p">);</span><span class="k">return</span><span class="p">{</span><span class="nx">into</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">head</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;head&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;style&quot;</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/css&quot;</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">styleSheet</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">styleSheet</span><span class="p">.</span><span class="nx">cssText</span><span class="o">=</span><span class="nx">b</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="nx">b</span><span class="p">));</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">d</span><span class="p">)}}};</span></div><div class='line' id='LC136'><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">observe</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="s2">&quot;string&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">c</span><span class="o">?</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">b</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="s2">&quot;target&quot;</span><span class="k">in</span> <span class="nx">c</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">target</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">srcElement</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">preventDefault</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">preventDefault</span><span class="o">||</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">returnValue</span><span class="o">=</span><span class="kc">false</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="o">||</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">cancelBubble</span><span class="o">=</span><span class="kc">true</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">));</span><span class="k">return</span><span class="p">{</span><span class="nx">stop</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">h</span><span class="p">],</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span></div><div class='line' id='LC137'><span class="nx">b</span><span class="p">.</span><span class="nx">detachEvent</span><span class="p">(</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">)}}};</span></div><div class='line' id='LC138'><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">parse</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">g</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">];</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">g</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">k</span><span class="o">++</span><span class="p">)(</span><span class="nx">newChild</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="nx">k</span><span class="p">],</span><span class="nx">e</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">newChild</span><span class="p">);</span><span class="k">return</span> <span class="nx">e</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">&gt;=</span><span class="nx">g</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">===</span><span class="nx">d</span><span class="o">&amp;&amp;!</span><span class="nx">g</span><span class="p">.</span><span class="nx">attributes</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">g</span><span class="p">.</span><span class="nx">firstChild</span><span class="o">:</span><span class="nx">g</span><span class="p">}</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">(),</span><span class="nx">c</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;IMG&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;src&quot;</span><span class="o">==</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">complete</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">mozMatchesSelector</span><span class="p">(</span><span class="s2">&quot;:-moz-broken&quot;</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">complete</span><span class="o">&amp;&amp;</span><span class="s2">&quot;complete&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">readyState</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=!</span><span class="mi">0</span><span class="p">)}</span><span class="nx">c</span><span class="o">=!</span><span class="mi">0</span><span class="o">===</span><span class="nx">d</span><span class="p">}</span><span class="k">return</span> <span class="nx">c</span><span class="o">?</span></div><div class='line' id='LC139'><span class="nx">a</span><span class="p">.</span><span class="nx">src</span><span class="o">:</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="s2">&quot;outerHTML&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">?-</span><span class="mi">1</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">outerHTML</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">().</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;=&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">b</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="mi">1</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">tags</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">scopeName</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">_wysihtml5</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">_wysihtml5</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;wysihtml5-temp&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="s2">&quot;HTML&quot;</span><span class="o">!=</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">);</span><span class="s2">&quot;outerHTML&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;!</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">browser</span><span class="p">.</span><span class="nx">autoClosesUnclosedTags</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s2">&quot;P&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">&amp;&amp;</span><span class="s2">&quot;&lt;/p&gt;&quot;</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">outerHTML</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">4</span><span class="p">).</span><span class="nx">toLowerCase</span><span class="p">())</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span> <span class="k">in</span> <span class="nx">i</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">remove</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;string&quot;</span><span class="o">===</span></div><div class='line' id='LC140'><span class="k">typeof</span> <span class="nx">b</span><span class="o">?</span><span class="p">{</span><span class="nx">rename_tag</span><span class="o">:</span><span class="nx">b</span><span class="p">}</span><span class="o">:</span><span class="nx">b</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">)</span><span class="nx">b</span><span class="o">=</span><span class="p">{</span><span class="nx">rename_tag</span><span class="o">:</span><span class="nx">d</span><span class="p">};</span><span class="k">else</span> <span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">rename_tag</span><span class="o">||</span><span class="nx">f</span><span class="p">);</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="p">{},</span><span class="nx">r</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">set_class</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">add_class</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">set_attributes</span><span class="p">,</span><span class="nx">x</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">check_attributes</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">classes</span><span class="p">,</span><span class="nx">z</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">w</span><span class="o">=</span><span class="p">[];</span><span class="nx">b</span><span class="o">=</span><span class="p">[];</span><span class="kd">var</span> <span class="nx">y</span><span class="o">=</span><span class="p">[],</span><span class="nx">A</span><span class="o">=</span><span class="p">[],</span><span class="nx">t</span><span class="p">;</span><span class="nx">s</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">object</span><span class="p">(</span><span class="nx">s</span><span class="p">).</span><span class="nx">clone</span><span class="p">());</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">t</span> <span class="k">in</span> <span class="nx">x</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">x</span><span class="p">[</span><span class="nx">t</span><span class="p">]])</span><span class="nx">s</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">t</span><span class="p">)),</span><span class="s2">&quot;string&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">s</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">=</span><span class="nx">s</span><span class="p">);</span><span class="nx">r</span><span class="o">&amp;&amp;</span><span class="nx">w</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">r</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">t</span> <span class="k">in</span> <span class="nx">m</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">m</span><span class="p">[</span><span class="nx">t</span><span class="p">]])</span><span class="nx">r</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">t</span><span class="p">)),</span><span class="s2">&quot;string&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">r</span><span class="o">&amp;&amp;</span><span class="nx">w</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">r</span><span class="p">);</span><span class="nx">o</span><span class="p">[</span><span class="s2">&quot;_wysihtml5-temp-placeholder&quot;</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;(</span><span class="nx">A</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;class&quot;</span><span class="p">))</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC141'><span class="p">(</span><span class="nx">w</span><span class="o">=</span><span class="nx">w</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">A</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="nx">e</span><span class="p">)));</span><span class="k">for</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="nx">w</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">z</span><span class="o">&lt;</span><span class="nx">m</span><span class="p">;</span><span class="nx">z</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="nx">w</span><span class="p">[</span><span class="nx">z</span><span class="p">],</span><span class="nx">o</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">o</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">o</span><span class="o">--</span><span class="p">;)</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">o</span><span class="p">],</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">array</span><span class="p">(</span><span class="nx">y</span><span class="p">).</span><span class="nx">contains</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="nx">y</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">y</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="s2">&quot;class&quot;</span><span class="p">]</span><span class="o">=</span><span class="nx">y</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">));</span><span class="k">for</span><span class="p">(</span><span class="nx">t</span> <span class="k">in</span> <span class="nx">i</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="nx">f</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">[</span><span class="nx">t</span><span class="p">])}</span><span class="k">catch</span><span class="p">(</span><span class="nx">v</span><span class="p">){}</span><span class="nx">i</span><span class="p">.</span><span class="nx">src</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s2">&quot;undefined&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="nx">i</span><span class="p">.</span><span class="nx">width</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;width&quot;</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">width</span><span class="p">),</span><span class="s2">&quot;undefined&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="nx">i</span><span class="p">.</span><span class="nx">height</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;height&quot;</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">height</span><span class="p">));</span><span class="k">return</span> <span class="nx">f</span><span class="p">},</span><span class="mi">3</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">)}},</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;span&quot;</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="sr">/\s+/</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">{</span><span class="nx">tags</span><span class="o">:</span><span class="p">{},</span><span class="nx">classes</span><span class="o">:</span><span class="p">{}},</span><span class="nx">g</span><span class="o">=</span><span class="p">{},</span><span class="nx">i</span><span class="o">=!</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">browser</span><span class="p">.</span><span class="nx">supportsGetAttributeCorrectly</span><span class="p">(),</span></div><div class='line' id='LC142'><span class="nx">h</span><span class="o">=</span><span class="p">{</span><span class="nx">url</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="sr">/^https?:\/\//i</span><span class="p">;</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="o">!</span><span class="nx">b</span><span class="o">||!</span><span class="nx">b</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()})}}(),</span><span class="nx">alt</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="sr">/[^ a-z0-9_\-]/gi</span><span class="p">;</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="o">!</span><span class="nx">b</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)}}(),</span><span class="nx">numbers</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="sr">/\D/g</span><span class="p">;</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="p">(</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">))</span><span class="o">||</span><span class="kc">null</span><span class="p">}}()},</span><span class="nx">k</span><span class="o">=</span><span class="p">{</span><span class="nx">align_img</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="nx">left</span><span class="o">:</span><span class="s2">&quot;wysiwyg-float-left&quot;</span><span class="p">,</span><span class="nx">right</span><span class="o">:</span><span class="s2">&quot;wysiwyg-float-right&quot;</span><span class="p">};</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">[(</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">).</span><span class="nx">toLowerCase</span><span class="p">()]}}(),</span><span class="nx">align_text</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="nx">left</span><span class="o">:</span><span class="s2">&quot;wysiwyg-text-align-left&quot;</span><span class="p">,</span></div><div class='line' id='LC143'><span class="nx">right</span><span class="o">:</span><span class="s2">&quot;wysiwyg-text-align-right&quot;</span><span class="p">,</span><span class="nx">center</span><span class="o">:</span><span class="s2">&quot;wysiwyg-text-align-center&quot;</span><span class="p">,</span><span class="nx">justify</span><span class="o">:</span><span class="s2">&quot;wysiwyg-text-align-justify&quot;</span><span class="p">};</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">[(</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">).</span><span class="nx">toLowerCase</span><span class="p">()]}}(),</span><span class="nx">clear_br</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="nx">left</span><span class="o">:</span><span class="s2">&quot;wysiwyg-clear-left&quot;</span><span class="p">,</span><span class="nx">right</span><span class="o">:</span><span class="s2">&quot;wysiwyg-clear-right&quot;</span><span class="p">,</span><span class="nx">both</span><span class="o">:</span><span class="s2">&quot;wysiwyg-clear-both&quot;</span><span class="p">,</span><span class="nx">all</span><span class="o">:</span><span class="s2">&quot;wysiwyg-clear-both&quot;</span><span class="p">};</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">[(</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">).</span><span class="nx">toLowerCase</span><span class="p">()]}}(),</span><span class="nx">size_font</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="mi">1</span><span class="o">:</span><span class="s2">&quot;wysiwyg-font-size-xx-small&quot;</span><span class="p">,</span><span class="mi">2</span><span class="o">:</span><span class="s2">&quot;wysiwyg-font-size-small&quot;</span><span class="p">,</span><span class="mi">3</span><span class="o">:</span><span class="s2">&quot;wysiwyg-font-size-medium&quot;</span><span class="p">,</span><span class="mi">4</span><span class="o">:</span><span class="s2">&quot;wysiwyg-font-size-large&quot;</span><span class="p">,</span><span class="mi">5</span><span class="o">:</span><span class="s2">&quot;wysiwyg-font-size-x-large&quot;</span><span class="p">,</span></div><div class='line' id='LC144'><span class="mi">6</span><span class="o">:</span><span class="s2">&quot;wysiwyg-font-size-xx-large&quot;</span><span class="p">,</span><span class="mi">7</span><span class="o">:</span><span class="s2">&quot;wysiwyg-font-size-xx-large&quot;</span><span class="p">,</span><span class="s2">&quot;-&quot;</span><span class="o">:</span><span class="s2">&quot;wysiwyg-font-size-smaller&quot;</span><span class="p">,</span><span class="s2">&quot;+&quot;</span><span class="o">:</span><span class="s2">&quot;wysiwyg-font-size-larger&quot;</span><span class="p">};</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">[(</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">).</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)]}}()};</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">object</span><span class="p">(</span><span class="nx">g</span><span class="p">).</span><span class="nx">merge</span><span class="p">(</span><span class="nx">f</span><span class="p">).</span><span class="nx">merge</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">get</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="o">||</span><span class="nb">document</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">createDocumentFragment</span><span class="p">(),</span><span class="nx">h</span><span class="o">=</span><span class="s2">&quot;string&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">h</span><span class="o">?</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">getAsDom</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;)</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">d</span><span class="p">),(</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span> <span class="nx">h</span><span class="o">?</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">quirks</span><span class="p">.</span><span class="nx">getCorrectInnerHTML</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span></div><div class='line' id='LC145'><span class="nx">a</span><span class="p">}}();</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">removeEmptyTextNodes</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">array</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">).</span><span class="nx">get</span><span class="p">(),</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">b</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">TEXT_NODE</span><span class="o">&amp;&amp;</span><span class="s2">&quot;&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">b</span><span class="p">)};</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">renameElement</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;)</span><span class="nx">a</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">copyAttributes</span><span class="p">([</span><span class="s2">&quot;align&quot;</span><span class="p">,</span><span class="s2">&quot;className&quot;</span><span class="p">]).</span><span class="nx">from</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">to</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">replaceChild</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span></div><div class='line' id='LC146'><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">replaceWithChildNodes</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">.</span><span class="nx">createDocumentFragment</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;)</span><span class="nx">c</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">replaceChild</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="k">else</span> <span class="nx">b</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">b</span><span class="p">)};</span></div><div class='line' id='LC147'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;br&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">b</span><span class="p">)}</span><span class="nx">b</span><span class="p">.</span><span class="nx">resolveList</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="s2">&quot;MENU&quot;</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">&amp;&amp;</span><span class="s2">&quot;UL&quot;</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">&amp;&amp;</span><span class="s2">&quot;OL&quot;</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">.</span><span class="nx">createDocumentFragment</span><span class="p">(),</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">previousElementSibling</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">previousSibling</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="s2">&quot;block&quot;</span><span class="o">!==</span><span class="nx">b</span><span class="p">.</span><span class="nx">getStyle</span><span class="p">(</span><span class="s2">&quot;display&quot;</span><span class="p">).</span><span class="nx">from</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;){</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">lastChild</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;)</span><span class="nx">g</span><span class="o">=</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="o">===</span><span class="nx">f</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;block&quot;</span><span class="o">!==</span><span class="nx">b</span><span class="p">.</span><span class="nx">getStyle</span><span class="p">(</span><span class="s2">&quot;display&quot;</span><span class="p">).</span><span class="nx">from</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;BR&quot;</span><span class="o">!==</span><span class="nx">e</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="nx">i</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">i</span><span class="p">)}</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">replaceChild</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span></div><div class='line' id='LC148'><span class="nx">a</span><span class="p">)}}})(</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">dom</span><span class="p">);</span></div><div class='line' id='LC149'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">document</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;parent top opener frameElement frames localStorage globalStorage sessionStorage indexedDB&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;open close openDialog showModalDialog alert confirm prompt openDatabase postMessage XMLHttpRequest XDomainRequest&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;referrer&quot;</span><span class="p">,</span><span class="s2">&quot;write&quot;</span><span class="p">,</span><span class="s2">&quot;open&quot;</span><span class="p">,</span><span class="s2">&quot;close&quot;</span><span class="p">];</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">Sandbox</span><span class="o">=</span><span class="nx">Base</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">constructor</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">callback</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">EMPTY_FUNCTION</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">config</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">object</span><span class="p">({}).</span><span class="nx">merge</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">get</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">iframe</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_createIframe</span><span class="p">()},</span><span class="nx">insertInto</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="s2">&quot;string&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC150'><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="nx">a</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">iframe</span><span class="p">)},</span><span class="nx">getIframe</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">iframe</span><span class="p">},</span><span class="nx">getWindow</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_readyError</span><span class="p">()},</span><span class="nx">getDocument</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_readyError</span><span class="p">()},</span><span class="nx">destroy</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getIframe</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">_readyError</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">throw</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;wysihtml5.Sandbox: Sandbox iframe isn&#39;t loaded yet&quot;</span><span class="p">);},</span><span class="nx">_createIframe</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;iframe&quot;</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="s2">&quot;wysihtml5-sandbox&quot;</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">setAttributes</span><span class="p">({</span><span class="nx">security</span><span class="o">:</span><span class="s2">&quot;restricted&quot;</span><span class="p">,</span><span class="nx">allowtransparency</span><span class="o">:</span><span class="s2">&quot;true&quot;</span><span class="p">,</span></div><div class='line' id='LC151'><span class="nx">frameborder</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">marginwidth</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">marginheight</span><span class="o">:</span><span class="mi">0</span><span class="p">}).</span><span class="nx">on</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">browser</span><span class="p">.</span><span class="nx">throwsMixedContentWarningWhenIframeSrcIsEmpty</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="s2">&quot;javascript:&#39;&lt;html&gt;&lt;/html&gt;&#39;&quot;</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">_onLoadIframe</span><span class="p">(</span><span class="nx">d</span><span class="p">)};</span><span class="nx">d</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="sr">/loaded|complete/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">readyState</span><span class="p">)){</span><span class="nx">d</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">_onLoadIframe</span><span class="p">(</span><span class="nx">d</span><span class="p">)}};</span><span class="k">return</span> <span class="nx">d</span><span class="p">},</span><span class="nx">_onLoadIframe</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">f</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">,</span><span class="nx">f</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">contentWindow</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">contentWindow</span><span class="p">.</span><span class="nb">document</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span></div><div class='line' id='LC152'><span class="k">this</span><span class="p">.</span><span class="nx">_getHtml</span><span class="p">({</span><span class="nx">charset</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">characterSet</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">charset</span><span class="o">||</span><span class="s2">&quot;utf-8&quot;</span><span class="p">,</span><span class="nx">stylesheets</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">stylesheets</span><span class="p">});</span><span class="nx">h</span><span class="p">.</span><span class="nx">open</span><span class="p">(</span><span class="s2">&quot;text/html&quot;</span><span class="p">,</span><span class="s2">&quot;replace&quot;</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="nx">k</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">close</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">getWindow</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">f</span><span class="p">.</span><span class="nx">contentWindow</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">getDocument</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">f</span><span class="p">.</span><span class="nx">contentWindow</span><span class="p">.</span><span class="nb">document</span><span class="p">};</span><span class="nx">i</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">throw</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;wysihtml5.Sandbox: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">);};</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">.</span><span class="nx">browser</span><span class="p">.</span><span class="nx">supportsSandboxedIframes</span><span class="p">()){</span><span class="kd">var</span> <span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">j</span><span class="p">;</span><span class="nx">k</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">_unset</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">k</span><span class="p">]);</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">j</span><span class="p">;</span><span class="nx">k</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">_unset</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="nx">k</span><span class="p">],</span><span class="nx">b</span><span class="p">.</span><span class="nx">EMPTY_FUNCTION</span><span class="p">);</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">k</span><span class="o">&lt;</span></div><div class='line' id='LC153'><span class="nx">j</span><span class="p">;</span><span class="nx">k</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">_unset</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="nx">k</span><span class="p">]);</span><span class="k">this</span><span class="p">.</span><span class="nx">_unset</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="s2">&quot;cookie&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)}</span><span class="k">this</span><span class="p">.</span><span class="nx">loaded</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">g</span><span class="p">.</span><span class="nx">callback</span><span class="p">(</span><span class="nx">g</span><span class="p">)},</span><span class="mi">0</span><span class="p">)}},</span><span class="nx">_getHtml</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">stylesheets</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;string&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">c</span><span class="o">?</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">:</span><span class="nx">c</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">k</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="o">+=</span><span class="s1">&#39;&lt;link rel=&quot;stylesheet&quot; href=&quot;&#39;</span><span class="o">+</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">+</span><span class="s1">&#39;&quot;&gt;&#39;</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">stylesheets</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">string</span><span class="p">(</span><span class="s1">&#39;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;#{charset}&quot;&gt;#{stylesheets}&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;&#39;</span><span class="p">).</span><span class="nx">interpolate</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">_unset</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">k</span><span class="p">){}</span><span class="k">try</span><span class="p">{</span><span class="nx">a</span><span class="p">.</span><span class="nx">__defineGetter__</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">d</span><span class="p">})}</span><span class="k">catch</span><span class="p">(</span><span class="nx">j</span><span class="p">){}</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="nx">a</span><span class="p">.</span><span class="nx">__defineSetter__</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span></div><div class='line' id='LC154'><span class="kd">function</span><span class="p">(){})}</span><span class="k">catch</span><span class="p">(</span><span class="nx">n</span><span class="p">){}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">.</span><span class="nx">browser</span><span class="p">.</span><span class="nx">crashesWhenDefineProperty</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="k">try</span><span class="p">{</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="p">{</span><span class="nx">get</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">d</span><span class="p">}};</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">set</span><span class="o">=</span><span class="kd">function</span><span class="p">(){});</span><span class="nb">Object</span><span class="p">.</span><span class="nx">defineProperty</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">p</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">q</span><span class="p">){}}})})(</span><span class="nx">wysihtml5</span><span class="p">);(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">{</span><span class="nx">className</span><span class="o">:</span><span class="s2">&quot;class&quot;</span><span class="p">};</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">setAttributes</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">on</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span> <span class="k">in</span> <span class="nx">c</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">||</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">])}}}})();</span></div><div class='line' id='LC155'><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">setStyles</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">on</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">style</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">cssText</span><span class="o">+=</span><span class="s2">&quot;;&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">;</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span> <span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="s2">&quot;float&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">cssFloat</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">c</span><span class="p">.</span><span class="nx">styleFloat</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">])</span><span class="o">:</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">]}}};</span></div><div class='line' id='LC156'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">simulatePlaceholder</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasPlaceholderSet</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">clear</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="s2">&quot;placeholder&quot;</span><span class="p">)},</span><span class="nx">f</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">isEmpty</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">setValue</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="s2">&quot;placeholder&quot;</span><span class="p">))};</span><span class="nx">c</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="s2">&quot;set_placeholder&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">).</span><span class="nx">observe</span><span class="p">(</span><span class="s2">&quot;unset_placeholder&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">).</span><span class="nx">observe</span><span class="p">(</span><span class="s2">&quot;focus:composer&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">).</span><span class="nx">observe</span><span class="p">(</span><span class="s2">&quot;paste:composer&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">).</span><span class="nx">observe</span><span class="p">(</span><span class="s2">&quot;blur:composer&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="nx">f</span><span class="p">()}})(</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">dom</span><span class="p">);</span></div><div class='line' id='LC157'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">;</span><span class="s2">&quot;textContent&quot;</span><span class="k">in</span> <span class="nx">c</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">setTextContent</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">textContent</span><span class="o">=</span><span class="nx">b</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">getTextContent</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">textContent</span><span class="p">})</span><span class="o">:</span><span class="s2">&quot;innerText&quot;</span><span class="k">in</span> <span class="nx">c</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">setTextContent</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">innerText</span><span class="o">=</span><span class="nx">b</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">getTextContent</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">innerText</span><span class="p">})</span><span class="o">:</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">setTextContent</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeValue</span><span class="o">=</span><span class="nx">b</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">getTextContent</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">nodeValue</span><span class="p">})})(</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">dom</span><span class="p">);</span></div><div class='line' id='LC158'><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">quirks</span><span class="p">.</span><span class="nx">cleanPastedHTML</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">{</span><span class="s2">&quot;a u&quot;</span><span class="o">:</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">replaceWithChildNodes</span><span class="p">};</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="o">||</span><span class="nb">document</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;string&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="o">?</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">getAsDom</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span> <span class="k">in</span> <span class="nx">a</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">h</span><span class="p">])}</span><span class="k">return</span> <span class="nx">e</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">:</span><span class="nx">c</span><span class="p">}}();</span></div><div class='line' id='LC159'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">quirks</span><span class="p">.</span><span class="nx">ensureProperClearing</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">innerHTML</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&quot;</span><span class="o">==</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&quot;</span><span class="o">==</span><span class="nx">b</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">},</span><span class="mi">0</span><span class="p">)};</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">element</span><span class="p">,[</span><span class="s2">&quot;cut&quot;</span><span class="p">,</span><span class="s2">&quot;keydown&quot;</span><span class="p">],</span><span class="nx">a</span><span class="p">)}}();</span><span class="nx">b</span><span class="p">.</span><span class="nx">quirks</span><span class="p">.</span><span class="nx">ensureProperClearingOfLists</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;OL&quot;</span><span class="p">,</span><span class="s2">&quot;UL&quot;</span><span class="p">,</span><span class="s2">&quot;MENU&quot;</span><span class="p">];</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="s2">&quot;keydown&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">keyCode</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">BACKSPACE_KEY</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">getSelectedNode</span><span class="p">(),</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">element</span><span class="p">;</span></div><div class='line' id='LC160'><span class="nx">e</span><span class="p">.</span><span class="nx">firstChild</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">array</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">contains</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">getParentElement</span><span class="p">(</span><span class="nx">f</span><span class="p">,{</span><span class="nx">nodeName</span><span class="o">:</span><span class="nx">a</span><span class="p">}))</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="o">==</span><span class="nx">e</span><span class="p">.</span><span class="nx">firstChild</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">&gt;=</span><span class="nx">f</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">firstChild</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">===</span><span class="nx">f</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">:</span><span class="mi">1</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">f</span><span class="p">)}})}}()})(</span><span class="nx">wysihtml5</span><span class="p">);</span></div><div class='line' id='LC161'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">quirks</span><span class="p">.</span><span class="nx">getCorrectInnerHTML</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">innerHTML</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;%7E&quot;</span><span class="p">))</span><span class="k">return</span> <span class="nx">a</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="s2">&quot;[href*=&#39;~&#39;], [src*=&#39;~&#39;]&quot;</span><span class="p">),</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">href</span><span class="o">||</span><span class="nx">c</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">src</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">string</span><span class="p">(</span><span class="nx">d</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;~&quot;</span><span class="p">).</span><span class="nx">by</span><span class="p">(</span><span class="s2">&quot;%7E&quot;</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">string</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">e</span><span class="p">).</span><span class="nx">by</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">}})(</span><span class="nx">wysihtml5</span><span class="p">);</span></div><div class='line' id='LC162'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;LI P H1 H2 H3 H4 H5 H6&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;UL&quot;</span><span class="p">,</span><span class="s2">&quot;OL&quot;</span><span class="p">,</span><span class="s2">&quot;MENU&quot;</span><span class="p">];</span><span class="nx">b</span><span class="p">.</span><span class="nx">quirks</span><span class="p">.</span><span class="nx">insertLineBreakOnReturn</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">getParentElement</span><span class="p">(</span><span class="nx">a</span><span class="p">,{</span><span class="nx">nodeName</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;P&quot;</span><span class="p">,</span><span class="s2">&quot;DIV&quot;</span><span class="p">]},</span><span class="mi">2</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">INVISIBLE_SPACE</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">insert</span><span class="p">(</span><span class="nx">d</span><span class="p">).</span><span class="nx">before</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">replaceWithChildNodes</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">selectNode</span><span class="p">(</span><span class="nx">d</span><span class="p">)}}</span><span class="nx">c</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">,</span><span class="s2">&quot;keydown&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">keyCode</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">shiftKey</span><span class="o">||</span><span class="nx">i</span><span class="o">!==</span><span class="nx">b</span><span class="p">.</span><span class="nx">ENTER_KEY</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="o">!==</span><span class="nx">b</span><span class="p">.</span><span class="nx">BACKSPACE_KEY</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">getSelectedNode</span><span class="p">();(</span><span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">getParentElement</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span></div><div class='line' id='LC163'><span class="p">{</span><span class="nx">nodeName</span><span class="o">:</span><span class="nx">a</span><span class="p">},</span><span class="mi">4</span><span class="p">))</span><span class="o">?</span><span class="s2">&quot;LI&quot;</span><span class="o">===</span><span class="nx">h</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">ENTER_KEY</span><span class="o">||</span><span class="nx">i</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">BACKSPACE_KEY</span><span class="p">)</span><span class="o">?</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">getSelectedNode</span><span class="p">(),</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">((</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">getParentElement</span><span class="p">(</span><span class="nx">a</span><span class="p">,{</span><span class="nx">nodeName</span><span class="o">:</span><span class="nx">d</span><span class="p">},</span><span class="mi">2</span><span class="p">))</span><span class="o">||</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">))},</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/H[1-6]/</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">ENTER_KEY</span><span class="o">&amp;&amp;</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">f</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">getSelectedNode</span><span class="p">())},</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="nx">i</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">ENTER_KEY</span><span class="o">&amp;&amp;!</span><span class="nx">b</span><span class="p">.</span><span class="nx">browser</span><span class="p">.</span><span class="nx">insertsLineBreaksOnReturn</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="s2">&quot;insertLineBreak&quot;</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">())}})}})(</span><span class="nx">wysihtml5</span><span class="p">);</span></div><div class='line' id='LC164'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">quirks</span><span class="p">.</span><span class="nx">redraw</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;wysihtml5-quirks-redraw&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;wysihtml5-quirks-redraw&quot;</span><span class="p">);</span><span class="k">try</span><span class="p">{</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">execCommand</span><span class="p">(</span><span class="s2">&quot;italic&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="kc">null</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">execCommand</span><span class="p">(</span><span class="s2">&quot;italic&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="kc">null</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">d</span><span class="p">){}}})(</span><span class="nx">wysihtml5</span><span class="p">);</span></div><div class='line' id='LC165'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">Selection</span><span class="o">=</span><span class="nx">Base</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">constructor</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nb">window</span><span class="p">.</span><span class="nx">rangy</span><span class="p">.</span><span class="nx">init</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">editor</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">composer</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">composer</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">composer</span><span class="p">.</span><span class="nx">doc</span><span class="p">},</span><span class="nx">getBookmark</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getRange</span><span class="p">();</span><span class="k">return</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">cloneRange</span><span class="p">()},</span><span class="nx">setBookmark</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">setSelection</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">setBefore</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">rangy</span><span class="p">.</span><span class="nx">createRange</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">setStartBefore</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">setEndBefore</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">setSelection</span><span class="p">(</span><span class="nx">b</span><span class="p">)},</span><span class="nx">setAfter</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">rangy</span><span class="p">.</span><span class="nx">createRange</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">setStartAfter</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">setEndAfter</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">setSelection</span><span class="p">(</span><span class="nx">b</span><span class="p">)},</span></div><div class='line' id='LC166'><span class="nx">selectNode</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">rangy</span><span class="p">.</span><span class="nx">createRange</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">ELEMENT_NODE</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="s2">&quot;canHaveHTML&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">canHaveHTML</span><span class="o">:</span><span class="s2">&quot;IMG&quot;</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="o">===</span><span class="nx">g</span><span class="o">||</span><span class="nx">g</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">INVISIBLE_SPACE</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">getStyle</span><span class="p">(</span><span class="s2">&quot;display&quot;</span><span class="p">).</span><span class="nx">from</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="s2">&quot;block&quot;</span><span class="o">===</span><span class="nx">i</span><span class="o">||</span><span class="s2">&quot;list-item&quot;</span><span class="o">===</span><span class="nx">i</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="nx">a</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">INVISIBLE_SPACE</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">h</span><span class="p">){}</span><span class="nx">f</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">selectNodeContents</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">selectNode</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">collapse</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">setStartAfter</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">setEndAfter</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">setSelection</span><span class="p">(</span><span class="nx">d</span><span class="p">)},</span><span class="nx">getSelectedNode</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">selection</span><span class="o">&amp;&amp;</span><span class="s2">&quot;Control&quot;</span><span class="o">===</span></div><div class='line' id='LC167'><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">createRange</span><span class="p">())</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">item</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getSelection</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">focusNode</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">anchorNode</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">focusNode</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getRange</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">))</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">commonAncestorContainer</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">body</span><span class="p">},</span><span class="nx">executeAndRestore</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">body</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="s1">&#39;&lt;span class=&quot;_wysihtml5-temp-placeholder&quot;&gt;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">INVISIBLE_SPACE</span><span class="o">+</span><span class="s2">&quot;&lt;/span&gt;&quot;</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getRange</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">){</span><span class="nx">i</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">createContextualFragment</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">insertNode</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="k">try</span><span class="p">{</span><span class="nx">a</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">k</span><span class="p">){</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">throw</span> <span class="nx">k</span><span class="p">;</span></div><div class='line' id='LC168'><span class="p">},</span><span class="mi">0</span><span class="p">)}(</span><span class="nx">caretPlaceholder</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="s2">&quot;._wysihtml5-temp-placeholder&quot;</span><span class="p">))</span><span class="o">?</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">rangy</span><span class="p">.</span><span class="nx">createRange</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">selectNode</span><span class="p">(</span><span class="nx">caretPlaceholder</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">deleteContents</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">setSelection</span><span class="p">(</span><span class="nx">h</span><span class="p">))</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">focus</span><span class="p">();</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">scrollTop</span><span class="o">=</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="o">=</span><span class="nx">g</span><span class="p">);</span><span class="k">try</span><span class="p">{</span><span class="nx">caretPlaceholder</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">caretPlaceholder</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">j</span><span class="p">){}}</span><span class="k">else</span> <span class="nx">a</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">e</span><span class="p">)},</span><span class="nx">executeAndRestoreSimple</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getRange</span><span class="p">(),</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">body</span><span class="p">,</span><span class="nx">i</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">getNodes</span><span class="p">([</span><span class="mi">3</span><span class="p">]);</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">;</span><span class="nx">i</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">g</span><span class="o">===</span><span class="nx">f</span><span class="p">.</span><span class="nx">startContainer</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">startOffset</span><span class="o">:</span></div><div class='line' id='LC169'><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">i</span><span class="o">===</span><span class="nx">f</span><span class="p">.</span><span class="nx">endContainer</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">endOffset</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">a</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">h</span><span class="p">){</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">throw</span> <span class="nx">h</span><span class="p">;},</span><span class="mi">0</span><span class="p">)}</span><span class="nx">a</span><span class="o">=</span><span class="nx">rangy</span><span class="p">.</span><span class="nx">createRange</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">);</span><span class="k">try</span><span class="p">{</span><span class="nx">a</span><span class="p">.</span><span class="nx">setStart</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">k</span><span class="p">){}</span><span class="k">try</span><span class="p">{</span><span class="nx">a</span><span class="p">.</span><span class="nx">setEnd</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">j</span><span class="p">){}</span><span class="k">try</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">setSelection</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">n</span><span class="p">){}}</span><span class="k">else</span> <span class="nx">a</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">g</span><span class="p">)},</span><span class="nx">insertHTML</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">rangy</span><span class="p">.</span><span class="nx">createRange</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">).</span><span class="nx">createContextualFragment</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">lastChild</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">insertNode</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">setAfter</span><span class="p">(</span><span class="nx">b</span><span class="p">)},</span><span class="nx">insertNode</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getRange</span><span class="p">();</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">insertNode</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">surround</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getRange</span><span class="p">();</span></div><div class='line' id='LC170'><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="nx">b</span><span class="p">.</span><span class="nx">surroundContents</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">selectNode</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">extractContents</span><span class="p">()),</span><span class="nx">b</span><span class="p">.</span><span class="nx">insertNode</span><span class="p">(</span><span class="nx">a</span><span class="p">)}},</span><span class="nx">scrollIntoView</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">scrollHeight</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">_wysihtml5ScrollIntoViewElement</span><span class="p">))</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;span&quot;</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">INVISIBLE_SPACE</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">_wysihtml5ScrollIntoViewElement</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">insertNode</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">){</span><span class="k">do</span> <span class="nx">f</span><span class="o">+=</span><span class="nx">c</span><span class="p">.</span><span class="nx">offsetTop</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">offsetParent</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="nx">c</span><span class="p">)}</span><span class="nx">c</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="nx">c</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">scrollTop</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC171'><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">scrollTop</span><span class="o">=</span><span class="nx">c</span><span class="p">)}},</span><span class="nx">selectLine</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">browser</span><span class="p">.</span><span class="nx">supportsSelectionModify</span><span class="p">()</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_selectLine_W3C</span><span class="p">()</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">selection</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_selectLine_MSIE</span><span class="p">()},</span><span class="nx">_selectLine_W3C</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">defaultView</span><span class="p">.</span><span class="nx">getSelection</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">modify</span><span class="p">(</span><span class="s2">&quot;extend&quot;</span><span class="p">,</span><span class="s2">&quot;left&quot;</span><span class="p">,</span><span class="s2">&quot;lineboundary&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">modify</span><span class="p">(</span><span class="s2">&quot;extend&quot;</span><span class="p">,</span><span class="s2">&quot;right&quot;</span><span class="p">,</span><span class="s2">&quot;lineboundary&quot;</span><span class="p">)},</span><span class="nx">_selectLine_MSIE</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">createRange</span><span class="p">(),</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">boundingTop</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">scrollWidth</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">moveToPoint</span><span class="p">){</span><span class="mi">0</span><span class="o">===</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;span&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">insertNode</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">offsetTop</span><span class="p">,</span></div><div class='line' id='LC172'><span class="nx">f</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">f</span><span class="p">));</span><span class="nx">b</span><span class="o">+=</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=-</span><span class="mi">10</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">f</span><span class="o">+=</span><span class="mi">2</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="nx">a</span><span class="p">.</span><span class="nx">moveToPoint</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">break</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">g</span><span class="p">){}</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">createRange</span><span class="p">();</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">--</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="nx">f</span><span class="p">.</span><span class="nx">moveToPoint</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">break</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">i</span><span class="p">){}</span><span class="nx">a</span><span class="p">.</span><span class="nx">setEndPoint</span><span class="p">(</span><span class="s2">&quot;EndToEnd&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">select</span><span class="p">()}},</span><span class="nx">getText</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getSelection</span><span class="p">();</span><span class="k">return</span> <span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">toString</span><span class="p">()</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">},</span><span class="nx">getNodes</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getRange</span><span class="p">();</span><span class="k">return</span> <span class="nx">c</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">getNodes</span><span class="p">([</span><span class="nx">a</span><span class="p">],</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="p">[]},</span><span class="nx">getRange</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getSelection</span><span class="p">();</span><span class="k">return</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">rangeCount</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">getRangeAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)},</span><span class="nx">getSelection</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">rangy</span><span class="p">.</span><span class="nx">getSelection</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">defaultView</span><span class="o">||</span></div><div class='line' id='LC173'><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">parentWindow</span><span class="p">)},</span><span class="nx">setSelection</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">rangy</span><span class="p">.</span><span class="nx">getSelection</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">defaultView</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">parentWindow</span><span class="p">).</span><span class="nx">setSingleRange</span><span class="p">(</span><span class="nx">a</span><span class="p">)}})})(</span><span class="nx">wysihtml5</span><span class="p">);</span></div><div class='line' id='LC174'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">isCharacterDataNode</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="mi">0</span><span class="o">==</span><span class="nx">b</span><span class="o">?!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">previousSibling</span><span class="o">:</span><span class="nx">b</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">?!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">nextSibling</span><span class="o">:!</span><span class="mi">0</span><span class="o">:</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">.</span><span class="nx">length</span><span class="p">}</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">isCharacterDataNode</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">e</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">getNodeIndex</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">getNodeIndex</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">splitDataNode</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">f</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">cloneNode</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">id</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">removeAttribute</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">[</span><span class="nx">e</span><span class="p">];)</span><span class="nx">f</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">g</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">insertAfter</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="k">return</span> <span class="nx">b</span><span class="o">==</span><span class="nx">a</span><span class="o">?</span><span class="nx">f</span><span class="o">:</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">getNodeIndex</span><span class="p">(</span><span class="nx">f</span><span class="p">))}</span></div><div class='line' id='LC175'><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">firstTextNode</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">isElementMerge</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">ELEMENT_NODE</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">lastChild</span><span class="o">:</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">textNodes</span><span class="o">=</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">firstTextNode</span><span class="p">]}</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">tagNames</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="p">[</span><span class="nx">g</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">cssClass</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">similarClassRegExp</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">normalize</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">applyToAnyTagName</span><span class="o">=!</span><span class="mi">1</span><span class="p">}</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="s2">&quot;span&quot;</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="sr">/\s+/g</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">doMerge</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">[],</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">textNodes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="o">++</span><span class="nx">d</span><span class="p">)</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">textNodes</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">hasChildNodes</span><span class="p">()</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">c</span><span class="p">));</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">firstTextNode</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span></div><div class='line' id='LC176'><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)},</span><span class="nx">getLength</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">textNodes</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">--</span><span class="p">;)</span><span class="nx">b</span><span class="o">+=</span><span class="k">this</span><span class="p">.</span><span class="nx">textNodes</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">length</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="nx">toString</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">[],</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">textNodes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="o">++</span><span class="nx">b</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;&#39;&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">textNodes</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">data</span><span class="o">+</span><span class="s2">&quot;&#39;&quot;</span><span class="p">;</span><span class="k">return</span><span class="s2">&quot;[Merge(&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;)]&quot;</span><span class="p">}};</span><span class="nx">f</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">getAncestorWithClass</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="p">;</span><span class="nx">a</span><span class="p">;){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">cssClass</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">cssClass</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">similarClassRegExp</span><span class="p">)</span><span class="o">||</span><span class="p">[];</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">===</span><span class="nx">d</span><span class="p">}</span><span class="k">else</span> <span class="nx">d</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">else</span> <span class="nx">d</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">ELEMENT_NODE</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">arrayContains</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">tagNames</span><span class="p">,</span></div><div class='line' id='LC177'><span class="nx">a</span><span class="p">.</span><span class="nx">tagName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">())</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">}</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">},</span><span class="nx">postApply</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="p">[],</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">x</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">z</span><span class="p">,</span><span class="nx">w</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">y</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">w</span><span class="o">&lt;</span><span class="nx">y</span><span class="p">;</span><span class="o">++</span><span class="nx">w</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">w</span><span class="p">],</span><span class="nx">z</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getAdjacentMergeableTextNode</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">||</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="k">new</span> <span class="nx">e</span><span class="p">(</span><span class="nx">z</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">g</span><span class="p">)),</span><span class="nx">g</span><span class="p">.</span><span class="nx">textNodes</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">o</span><span class="p">),</span><span class="nx">o</span><span class="o">===</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">firstTextNode</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="p">),</span><span class="nx">o</span><span class="o">===</span><span class="nx">d</span><span class="p">)</span><span class="nx">m</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">firstTextNode</span><span class="p">,</span><span class="nx">x</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">getLength</span><span class="p">()}</span><span class="k">else</span> <span class="nx">g</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getAdjacentMergeableTextNode</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">))</span><span class="nx">g</span><span class="o">||</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="k">new</span> <span class="nx">e</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">g</span><span class="p">)),</span><span class="nx">g</span><span class="p">.</span><span class="nx">textNodes</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">w</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">y</span><span class="o">=</span></div><div class='line' id='LC178'><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">w</span><span class="o">&lt;</span><span class="nx">y</span><span class="p">;</span><span class="o">++</span><span class="nx">w</span><span class="p">)</span><span class="nx">f</span><span class="p">[</span><span class="nx">w</span><span class="p">].</span><span class="nx">doMerge</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">setStart</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">setEnd</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">x</span><span class="p">)}},</span><span class="nx">getAdjacentMergeableTextNode</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">TEXT_NODE</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="o">?</span><span class="s2">&quot;nextSibling&quot;</span><span class="o">:</span><span class="s2">&quot;previousSibling&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">((</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">TEXT_NODE</span><span class="p">)</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">((</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">areElementsMergeable</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">))</span><span class="k">return</span> <span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="o">?</span><span class="s2">&quot;firstChild&quot;</span><span class="o">:</span><span class="s2">&quot;lastChild&quot;</span><span class="p">];</span><span class="k">return</span> <span class="kc">null</span><span class="p">},</span><span class="nx">areElementsMergeable</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">arrayContains</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">tagNames</span><span class="p">,(</span><span class="nx">a</span><span class="p">.</span><span class="nx">tagName</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">toLowerCase</span><span class="p">()))</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">arrayContains</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">tagNames</span><span class="p">,(</span><span class="nx">b</span><span class="p">.</span><span class="nx">tagName</span><span class="o">||</span></div><div class='line' id='LC179'><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">toLowerCase</span><span class="p">()))</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="s2">&quot; &quot;</span><span class="p">)</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">className</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="s2">&quot; &quot;</span><span class="p">))</span><span class="nx">a</span><span class="o">:</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">attributes</span><span class="p">.</span><span class="nx">length</span><span class="o">!=</span><span class="nx">b</span><span class="p">.</span><span class="nx">attributes</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="nx">d</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">attributes</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="o">++</span><span class="nx">d</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">attributes</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="s2">&quot;class&quot;</span><span class="o">!=</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">attributes</span><span class="p">.</span><span class="nx">getNamedItem</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">specified</span><span class="o">!=</span><span class="nx">g</span><span class="p">.</span><span class="nx">specified</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">specified</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">nodeValue</span><span class="o">!==</span><span class="nx">g</span><span class="p">.</span><span class="nx">nodeValue</span><span class="p">)){</span><span class="nx">d</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">break</span> <span class="nx">a</span><span class="p">}</span><span class="nx">d</span><span class="o">=!</span><span class="mi">0</span><span class="p">}</span><span class="k">return</span> <span class="nx">d</span><span class="p">},</span><span class="nx">createContainer</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">tagNames</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="k">this</span><span class="p">.</span><span class="nx">cssClass</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">cssClass</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">applyToTextNode</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span></div><div class='line' id='LC180'><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="mi">1</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">arrayContains</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">tagNames</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">tagName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">())</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">cssClass</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">cssClass</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">className</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">className</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">className</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">similarClassRegExp</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)),</span><span class="nx">b</span><span class="p">.</span><span class="nx">className</span><span class="o">+=</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createContainer</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">getDocument</span><span class="p">(</span><span class="nx">a</span><span class="p">)),</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">a</span><span class="p">))},</span><span class="nx">isRemovable</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">arrayContains</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">tagNames</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">tagName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">())</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">string</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="p">).</span><span class="nx">trim</span><span class="p">()</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">cssClass</span><span class="p">},</span><span class="nx">undoToTextNode</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span></div><div class='line' id='LC181'><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">containsNode</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">cloneRange</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">selectNode</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">isPointInRange</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">endOffset</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">endOffset</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">endOffset</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">setEndAfter</span><span class="p">(</span><span class="nx">e</span><span class="p">)),</span><span class="nx">b</span><span class="p">.</span><span class="nx">isPointInRange</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">startOffset</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">startOffset</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">startOffset</span><span class="p">)));</span><span class="k">this</span><span class="p">.</span><span class="nx">similarClassRegExp</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">className</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">className</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">similarClassRegExp</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">isRemovable</span><span class="p">(</span><span class="nx">e</span><span class="p">)){</span><span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;)</span><span class="nx">e</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">,</span></div><div class='line' id='LC182'><span class="nx">c</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">c</span><span class="p">)}},</span><span class="nx">applyToRange</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getNodes</span><span class="p">([</span><span class="nx">b</span><span class="p">.</span><span class="nx">TEXT_NODE</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createContainer</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">surroundContents</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">selectNode</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">return</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){}</span><span class="nx">a</span><span class="p">.</span><span class="nx">splitBoundaries</span><span class="p">();</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getNodes</span><span class="p">([</span><span class="nx">b</span><span class="p">.</span><span class="nx">TEXT_NODE</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="o">++</span><span class="nx">f</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">getAncestorWithClass</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">applyToTextNode</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">setStart</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="mi">0</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span><span class="nx">a</span><span class="p">.</span><span class="nx">setEnd</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">normalize</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">postApply</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">)}},</span><span class="nx">undoToRange</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getNodes</span><span class="p">([</span><span class="nx">b</span><span class="p">.</span><span class="nx">TEXT_NODE</span><span class="p">]),</span></div><div class='line' id='LC183'><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">splitBoundaries</span><span class="p">(),</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getNodes</span><span class="p">([</span><span class="nx">b</span><span class="p">.</span><span class="nx">TEXT_NODE</span><span class="p">]))</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">endContainer</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">INVISIBLE_SPACE</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">insertNode</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">selectNode</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="nx">c</span><span class="p">]);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="o">++</span><span class="nx">f</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">],(</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getAncestorWithClass</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">undoToTextNode</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="mi">1</span><span class="o">==</span><span class="nx">g</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">selectNode</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">setStart</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="mi">0</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span><span class="nx">a</span><span class="p">.</span><span class="nx">setEnd</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">normalize</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">postApply</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">))},</span><span class="nx">selectNode</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">ELEMENT_NODE</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;canHaveHTML&quot;</span><span class="k">in</span> <span class="nx">c</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">canHaveHTML</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">:</span></div><div class='line' id='LC184'><span class="nx">c</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span><span class="k">if</span><span class="p">((</span><span class="nx">f</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="o">===</span><span class="nx">f</span><span class="o">||</span><span class="nx">f</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">INVISIBLE_SPACE</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="nx">c</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">INVISIBLE_SPACE</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">g</span><span class="p">){}</span><span class="nx">a</span><span class="p">.</span><span class="nx">selectNodeContents</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">collapse</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">setStartAfter</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">setEndAfter</span><span class="p">(</span><span class="nx">c</span><span class="p">))},</span><span class="nx">getTextSelectedByRange</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">cloneRange</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">selectNodeContents</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">intersection</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">toString</span><span class="p">()</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">detach</span><span class="p">();</span><span class="k">return</span> <span class="nx">d</span><span class="p">},</span><span class="nx">isAppliedToRange</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[],</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getNodes</span><span class="p">([</span><span class="nx">b</span><span class="p">.</span><span class="nx">TEXT_NODE</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getAncestorWithClass</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">startContainer</span><span class="p">))</span><span class="o">?</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">:!</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">i</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="o">++</span><span class="nx">f</span><span class="p">){</span><span class="nx">i</span><span class="o">=</span></div><div class='line' id='LC185'><span class="k">this</span><span class="p">.</span><span class="nx">getTextSelectedByRange</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">a</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getAncestorWithClass</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">!=</span><span class="nx">i</span><span class="o">&amp;&amp;!</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">)}</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span><span class="nx">toggleRange</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">isAppliedToRange</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">undoToRange</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">applyToRange</span><span class="p">(</span><span class="nx">a</span><span class="p">)}};</span><span class="nx">b</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">HTMLApplier</span><span class="o">=</span><span class="nx">f</span><span class="p">})(</span><span class="nx">wysihtml5</span><span class="p">,</span><span class="nx">rangy</span><span class="p">);</span></div><div class='line' id='LC186'><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">Commands</span><span class="o">=</span><span class="nx">Base</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">constructor</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">editor</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">composer</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">composer</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">composer</span><span class="p">.</span><span class="nx">doc</span><span class="p">},</span><span class="nx">support</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">browser</span><span class="p">.</span><span class="nx">supportsCommand</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">,</span><span class="nx">b</span><span class="p">)},</span><span class="nx">exec</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">commands</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">array</span><span class="p">(</span><span class="nx">arguments</span><span class="p">).</span><span class="nx">get</span><span class="p">(),</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">exec</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">editor</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;beforecommand:composer&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">composer</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">else</span> <span class="k">try</span><span class="p">{</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">execCommand</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">g</span><span class="p">){}</span><span class="k">this</span><span class="p">.</span><span class="nx">editor</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;aftercommand:composer&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">f</span><span class="p">},</span><span class="nx">state</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span></div><div class='line' id='LC187'><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">commands</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">array</span><span class="p">(</span><span class="nx">arguments</span><span class="p">).</span><span class="nx">get</span><span class="p">(),</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">state</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">composer</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">queryCommandState</span><span class="p">(</span><span class="nx">b</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">f</span><span class="p">){</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}},</span><span class="nx">value</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">commands</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">composer</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">queryCommandValue</span><span class="p">(</span><span class="nx">b</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="p">}}});</span></div><div class='line' id='LC188'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">bold</span><span class="o">=</span><span class="p">{</span><span class="nx">exec</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">formatInline</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;b&quot;</span><span class="p">)},</span><span class="nx">state</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">formatInline</span><span class="p">.</span><span class="nx">state</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;b&quot;</span><span class="p">)},</span><span class="nx">value</span><span class="o">:</span><span class="kd">function</span><span class="p">(){}}})(</span><span class="nx">wysihtml5</span><span class="p">);</span></div><div class='line' id='LC189'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">doc</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="s2">&quot;_wysihtml5-temp-&quot;</span><span class="o">+</span> <span class="o">+</span><span class="k">new</span> <span class="nb">Date</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">p</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">formatInline</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="sr">/non-matching-class/g</span><span class="p">);</span><span class="nx">j</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">k</span><span class="o">++</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">p</span> <span class="k">in</span> <span class="nx">n</span><span class="o">=</span><span class="nx">j</span><span class="p">[</span><span class="nx">k</span><span class="p">],</span><span class="nx">n</span><span class="p">.</span><span class="nx">removeAttribute</span><span class="p">(</span><span class="s2">&quot;class&quot;</span><span class="p">),</span><span class="nx">g</span><span class="p">)</span><span class="nx">n</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">g</span><span class="p">[</span><span class="nx">p</span><span class="p">]);</span><span class="nx">k</span><span class="o">=</span><span class="nx">n</span><span class="p">;</span><span class="mi">1</span><span class="o">===</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">getTextContent</span><span class="p">(</span><span class="nx">n</span><span class="p">),</span><span class="nx">h</span><span class="o">=!!</span><span class="nx">n</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="s2">&quot;*&quot;</span><span class="p">),</span><span class="nx">p</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="o">===</span><span class="nx">p</span><span class="o">||</span><span class="nx">p</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">INVISIBLE_SPACE</span><span class="p">,</span><span class="o">!</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">setTextContent</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">text</span><span class="o">||</span><span class="nx">n</span><span class="p">.</span><span class="nx">href</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">setAfter</span><span class="p">(</span><span class="nx">n</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">insertNode</span><span class="p">(</span><span class="nx">i</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="nx">i</span><span class="p">));</span><span class="nx">c</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">setAfter</span><span class="p">(</span><span class="nx">k</span><span class="p">)}</span></div><div class='line' id='LC190'><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;A&quot;</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">createLink</span><span class="o">=</span><span class="p">{</span><span class="nx">exec</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">h</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">executeAndRestore</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">getParentElement</span><span class="p">(</span><span class="nx">c</span><span class="p">,{</span><span class="nx">nodeName</span><span class="o">:</span><span class="s2">&quot;code&quot;</span><span class="p">}),</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">getTextContent</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">autoLink</span><span class="p">.</span><span class="nx">URL_REG_EXP</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">d</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">renameElement</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;code&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">replaceWithChildNodes</span><span class="p">(</span><span class="nx">c</span><span class="p">)})</span><span class="o">:</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;object&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">d</span><span class="o">?</span><span class="nx">d</span><span class="o">:</span><span class="p">{</span><span class="nx">href</span><span class="o">:</span><span class="nx">d</span><span class="p">},</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">))},</span><span class="nx">state</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">formatInline</span><span class="p">.</span><span class="nx">state</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;A&quot;</span><span class="p">)},</span><span class="nx">value</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">a</span><span class="p">}}})(</span><span class="nx">wysihtml5</span><span class="p">);</span></div><div class='line' id='LC191'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="sr">/wysiwyg-font-size-[a-z\-]+/g</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">fontSize</span><span class="o">=</span><span class="p">{</span><span class="nx">exec</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">formatInline</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;span&quot;</span><span class="p">,</span><span class="s2">&quot;wysiwyg-font-size-&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">state</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">formatInline</span><span class="p">.</span><span class="nx">state</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;span&quot;</span><span class="p">,</span><span class="s2">&quot;wysiwyg-font-size-&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">value</span><span class="o">:</span><span class="kd">function</span><span class="p">(){}}})(</span><span class="nx">wysihtml5</span><span class="p">);</span></div><div class='line' id='LC192'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="sr">/wysiwyg-color-[a-z]+/g</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">foreColor</span><span class="o">=</span><span class="p">{</span><span class="nx">exec</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">formatInline</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;span&quot;</span><span class="p">,</span><span class="s2">&quot;wysiwyg-color-&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">state</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">formatInline</span><span class="p">.</span><span class="nx">state</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;span&quot;</span><span class="p">,</span><span class="s2">&quot;wysiwyg-color-&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">value</span><span class="o">:</span><span class="kd">function</span><span class="p">(){}}})(</span><span class="nx">wysihtml5</span><span class="p">);</span></div><div class='line' id='LC193'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">previousSibling</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">TEXT_NODE</span><span class="o">&amp;&amp;!</span><span class="nx">b</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">string</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">).</span><span class="nx">trim</span><span class="p">();)</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">previousSibling</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">TEXT_NODE</span><span class="o">&amp;&amp;!</span><span class="nx">b</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">string</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">).</span><span class="nx">trim</span><span class="p">();)</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;BR&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">||</span><span class="s2">&quot;block&quot;</span><span class="o">===</span><span class="nx">g</span><span class="p">.</span><span class="nx">getStyle</span><span class="p">(</span><span class="s2">&quot;display&quot;</span><span class="p">).</span><span class="nx">from</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?!</span><span class="mi">0</span><span class="o">:!</span><span class="mi">1</span><span class="p">}</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;DOMNodeInserted&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">,</span><span class="nx">c</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">ELEMENT_NODE</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">getStyle</span><span class="p">(</span><span class="s2">&quot;display&quot;</span><span class="p">).</span><span class="nx">from</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="s2">&quot;inline&quot;</span><span class="o">!==</span></div><div class='line' id='LC194'><span class="nx">c</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="o">+=</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">))});</span><span class="nx">a</span><span class="p">.</span><span class="nx">execCommand</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">stop</span><span class="p">()}</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">selectLine</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">surround</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="s2">&quot;BR&quot;</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="s2">&quot;BR&quot;</span><span class="o">===</span><span class="nx">f</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">f</span><span class="p">);(</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">lastChild</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;BR&quot;</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">selectNode</span><span class="p">(</span><span class="nx">d</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="s2">&quot;H1 H2 H3 H4 H5 H6 P BLOCKQUOTE DIV&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">formatBlock</span><span class="o">=</span><span class="p">{</span><span class="nx">exec</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">p</span><span class="p">){</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">doc</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">p</span><span class="p">),</span><span class="nx">m</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="s2">&quot;string&quot;</span><span class="o">===</span></div><div class='line' id='LC195'><span class="k">typeof</span> <span class="nx">j</span><span class="o">?</span><span class="nx">j</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()</span><span class="o">:</span><span class="nx">j</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="p">)</span><span class="nx">h</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">executeAndRestoreSimple</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">className</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">));</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=!!</span><span class="nx">b</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">string</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">className</span><span class="p">).</span><span class="nx">trim</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">===</span><span class="p">(</span><span class="nx">j</span><span class="o">||</span><span class="s2">&quot;DIV&quot;</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">r</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="nx">h</span><span class="o">&amp;&amp;!</span><span class="nx">d</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;br&quot;</span><span class="p">),</span><span class="nx">h</span><span class="p">);</span><span class="nx">i</span><span class="o">&amp;&amp;!</span><span class="nx">d</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;br&quot;</span><span class="p">),</span><span class="nx">e</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">replaceWithChildNodes</span><span class="p">(</span><span class="nx">r</span><span class="p">)}</span><span class="k">else</span> <span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">renameElement</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="s2">&quot;DIV&quot;</span><span class="p">)});</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">===</span><span class="nx">j</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">array</span><span class="p">(</span><span class="nx">i</span><span class="p">).</span><span class="nx">contains</span><span class="p">(</span><span class="nx">j</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">getSelectedNode</span><span class="p">(),</span></div><div class='line' id='LC196'><span class="nx">r</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">getParentElement</span><span class="p">(</span><span class="nx">m</span><span class="p">,{</span><span class="nx">nodeName</span><span class="o">:</span><span class="nx">i</span><span class="p">})){</span><span class="nx">h</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">executeAndRestoreSimple</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">renameElement</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">j</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">r</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="o">+=</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">n</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">n</span><span class="p">}});</span><span class="k">return</span><span class="p">}</span><span class="nx">h</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">support</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span><span class="o">?</span><span class="nx">e</span><span class="p">(</span><span class="nx">q</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">j</span><span class="o">||</span><span class="s2">&quot;DIV&quot;</span><span class="p">,</span><span class="nx">n</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="nx">j</span><span class="o">||</span><span class="s2">&quot;DIV&quot;</span><span class="p">),</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">n</span><span class="p">),</span><span class="nx">f</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">r</span><span class="p">))}},</span><span class="nx">state</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;string&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">c</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()</span><span class="o">:</span><span class="nx">c</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">getSelectedNode</span><span class="p">();</span><span class="k">return</span> <span class="nx">g</span><span class="p">.</span><span class="nx">getParentElement</span><span class="p">(</span><span class="nx">a</span><span class="p">,{</span><span class="nx">nodeName</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">className</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">classRegExp</span><span class="o">:</span><span class="nx">e</span><span class="p">})},</span><span class="nx">value</span><span class="o">:</span><span class="kd">function</span><span class="p">(){}}})(</span><span class="nx">wysihtml5</span><span class="p">);</span></div><div class='line' id='LC197'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">[</span><span class="nx">i</span><span class="p">]){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">HTMLApplier</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">c</span><span class="o">=</span><span class="nx">j</span><span class="o">?</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">(),</span><span class="nx">j</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()]</span><span class="o">:</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()];</span><span class="nx">h</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="k">new</span> <span class="nx">k</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)}</span><span class="k">return</span> <span class="nx">d</span><span class="p">[</span><span class="nx">i</span><span class="p">]}</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="nx">strong</span><span class="o">:</span><span class="s2">&quot;b&quot;</span><span class="p">,</span><span class="nx">em</span><span class="o">:</span><span class="s2">&quot;i&quot;</span><span class="p">,</span><span class="nx">b</span><span class="o">:</span><span class="s2">&quot;strong&quot;</span><span class="p">,</span><span class="nx">i</span><span class="o">:</span><span class="s2">&quot;em&quot;</span><span class="p">},</span><span class="nx">d</span><span class="o">=</span><span class="p">{};</span><span class="nx">b</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">formatInline</span><span class="o">=</span><span class="p">{</span><span class="nx">exec</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">getRange</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">c</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">h</span><span class="p">).</span><span class="nx">toggleRange</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">setSelection</span><span class="p">(</span><span class="nx">b</span><span class="p">)},</span><span class="nx">state</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">doc</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">||</span><span class="nx">g</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">hasElementWithTagName</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">hasElementWithTagName</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">k</span><span class="p">)</span><span class="o">||</span><span class="nx">i</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC198'><span class="o">!</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">hasElementWithClassName</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">i</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">getRange</span><span class="p">();</span><span class="k">return</span><span class="o">!</span><span class="nx">d</span><span class="o">?!</span><span class="mi">1</span><span class="o">:</span><span class="nx">c</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">h</span><span class="p">).</span><span class="nx">isAppliedToRange</span><span class="p">(</span><span class="nx">d</span><span class="p">)},</span><span class="nx">value</span><span class="o">:</span><span class="kd">function</span><span class="p">(){}}})(</span><span class="nx">wysihtml5</span><span class="p">);(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">insertHTML</span><span class="o">=</span><span class="p">{</span><span class="nx">exec</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">support</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">execCommand</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">insertHTML</span><span class="p">(</span><span class="nx">d</span><span class="p">)},</span><span class="nx">state</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">},</span><span class="nx">value</span><span class="o">:</span><span class="kd">function</span><span class="p">(){}}})(</span><span class="nx">wysihtml5</span><span class="p">);</span></div><div class='line' id='LC199'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">insertImage</span><span class="o">=</span><span class="p">{</span><span class="nx">exec</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="s2">&quot;object&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">d</span><span class="o">?</span><span class="nx">d</span><span class="o">:</span><span class="p">{</span><span class="nx">src</span><span class="o">:</span><span class="nx">d</span><span class="p">},</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">doc</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">f</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">setBefore</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">removeEmptyTextNodes</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="s2">&quot;A&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">&amp;&amp;!</span><span class="nx">d</span><span class="p">.</span><span class="nx">firstChild</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">setAfter</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">d</span><span class="p">)),</span><span class="nx">b</span><span class="p">.</span><span class="nx">quirks</span><span class="p">.</span><span class="nx">redraw</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">element</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;IMG&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span> <span class="k">in</span> <span class="nx">d</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="nx">c</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">insertNode</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">browser</span><span class="p">.</span><span class="nx">hasProblemsSettingCaretAfterImg</span><span class="p">()</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">INVISIBLE_SPACE</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">insertNode</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span></div><div class='line' id='LC200'><span class="nx">c</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">setAfter</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">setAfter</span><span class="p">(</span><span class="nx">a</span><span class="p">)}},</span><span class="nx">state</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">hasElementWithTagName</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">doc</span><span class="p">,</span><span class="s2">&quot;IMG&quot;</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">getSelectedNode</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;IMG&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">!==</span><span class="nx">b</span><span class="p">.</span><span class="nx">ELEMENT_NODE</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">getText</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">string</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">trim</span><span class="p">())</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">getNodes</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">ELEMENT_NODE</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;IMG&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">});</span><span class="k">return</span> <span class="mi">1</span><span class="o">!==</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">?!</span><span class="mi">1</span><span class="o">:</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]},</span><span class="nx">value</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">src</span><span class="p">}}})(</span><span class="nx">wysihtml5</span><span class="p">);</span></div><div class='line' id='LC201'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="s2">&quot;&lt;br&gt;&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">browser</span><span class="p">.</span><span class="nx">needsSpaceAfterLineBreak</span><span class="p">()</span><span class="o">?</span><span class="s2">&quot; &quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">insertLineBreak</span><span class="o">=</span><span class="p">{</span><span class="nx">exec</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">support</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">execCommand</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="kc">null</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">browser</span><span class="p">.</span><span class="nx">autoScrollsToCaret</span><span class="p">()</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">scrollIntoView</span><span class="p">())</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="s2">&quot;insertHTML&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">state</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">},</span><span class="nx">value</span><span class="o">:</span><span class="kd">function</span><span class="p">(){}}})(</span><span class="nx">wysihtml5</span><span class="p">);</span></div><div class='line' id='LC202'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">insertOrderedList</span><span class="o">=</span><span class="p">{</span><span class="nx">exec</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">doc</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">getSelectedNode</span><span class="p">(),</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">getParentElement</span><span class="p">(</span><span class="nx">e</span><span class="p">,{</span><span class="nx">nodeName</span><span class="o">:</span><span class="s2">&quot;OL&quot;</span><span class="p">}),</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">getParentElement</span><span class="p">(</span><span class="nx">e</span><span class="p">,{</span><span class="nx">nodeName</span><span class="o">:</span><span class="s2">&quot;UL&quot;</span><span class="p">}),</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;_wysihtml5-temp-&quot;</span><span class="o">+</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">).</span><span class="nx">getTime</span><span class="p">(),</span><span class="nx">i</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">support</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">execCommand</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="kc">null</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">executeAndRestoreSimple</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">resolveList</span><span class="p">(</span><span class="nx">f</span><span class="p">)})</span><span class="o">:</span><span class="nx">g</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">executeAndRestoreSimple</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">renameElement</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="s2">&quot;ol&quot;</span><span class="p">)})</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="s2">&quot;formatBlock&quot;</span><span class="p">,</span><span class="s2">&quot;div&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">),</span></div><div class='line' id='LC203'><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="o">===</span><span class="nx">i</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">||</span><span class="nx">i</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">INVISIBLE_SPACE</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">executeAndRestoreSimple</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">convertToList</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="s2">&quot;ol&quot;</span><span class="p">)}),</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">selectNode</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="s2">&quot;li&quot;</span><span class="p">)))},</span><span class="nx">state</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">getSelectedNode</span><span class="p">();</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">getParentElement</span><span class="p">(</span><span class="nx">c</span><span class="p">,{</span><span class="nx">nodeName</span><span class="o">:</span><span class="s2">&quot;OL&quot;</span><span class="p">})},</span><span class="nx">value</span><span class="o">:</span><span class="kd">function</span><span class="p">(){}}})(</span><span class="nx">wysihtml5</span><span class="p">);</span></div><div class='line' id='LC204'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">insertUnorderedList</span><span class="o">=</span><span class="p">{</span><span class="nx">exec</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">doc</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">getSelectedNode</span><span class="p">(),</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">getParentElement</span><span class="p">(</span><span class="nx">e</span><span class="p">,{</span><span class="nx">nodeName</span><span class="o">:</span><span class="s2">&quot;UL&quot;</span><span class="p">}),</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">getParentElement</span><span class="p">(</span><span class="nx">e</span><span class="p">,{</span><span class="nx">nodeName</span><span class="o">:</span><span class="s2">&quot;OL&quot;</span><span class="p">}),</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;_wysihtml5-temp-&quot;</span><span class="o">+</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">).</span><span class="nx">getTime</span><span class="p">(),</span><span class="nx">i</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">support</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">execCommand</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="kc">null</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">executeAndRestoreSimple</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">resolveList</span><span class="p">(</span><span class="nx">f</span><span class="p">)})</span><span class="o">:</span><span class="nx">g</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">executeAndRestoreSimple</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">renameElement</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="s2">&quot;ul&quot;</span><span class="p">)})</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="s2">&quot;formatBlock&quot;</span><span class="p">,</span><span class="s2">&quot;div&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">),</span></div><div class='line' id='LC205'><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="o">===</span><span class="nx">i</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">||</span><span class="nx">i</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">INVISIBLE_SPACE</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">executeAndRestoreSimple</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">convertToList</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="s2">&quot;ul&quot;</span><span class="p">)}),</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">selectNode</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="s2">&quot;li&quot;</span><span class="p">)))},</span><span class="nx">state</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">getSelectedNode</span><span class="p">();</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">getParentElement</span><span class="p">(</span><span class="nx">c</span><span class="p">,{</span><span class="nx">nodeName</span><span class="o">:</span><span class="s2">&quot;UL&quot;</span><span class="p">})},</span><span class="nx">value</span><span class="o">:</span><span class="kd">function</span><span class="p">(){}}})(</span><span class="nx">wysihtml5</span><span class="p">);(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">italic</span><span class="o">=</span><span class="p">{</span><span class="nx">exec</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">formatInline</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;i&quot;</span><span class="p">)},</span><span class="nx">state</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">formatInline</span><span class="p">.</span><span class="nx">state</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;i&quot;</span><span class="p">)},</span><span class="nx">value</span><span class="o">:</span><span class="kd">function</span><span class="p">(){}}})(</span><span class="nx">wysihtml5</span><span class="p">);</span></div><div class='line' id='LC206'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="sr">/wysiwyg-text-align-[a-z]+/g</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">justifyCenter</span><span class="o">=</span><span class="p">{</span><span class="nx">exec</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">formatBlock</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;formatBlock&quot;</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="s2">&quot;wysiwyg-text-align-center&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">state</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">formatBlock</span><span class="p">.</span><span class="nx">state</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;formatBlock&quot;</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="s2">&quot;wysiwyg-text-align-center&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">value</span><span class="o">:</span><span class="kd">function</span><span class="p">(){}}})(</span><span class="nx">wysihtml5</span><span class="p">);</span></div><div class='line' id='LC207'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="sr">/wysiwyg-text-align-[a-z]+/g</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">justifyLeft</span><span class="o">=</span><span class="p">{</span><span class="nx">exec</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">formatBlock</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;formatBlock&quot;</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="s2">&quot;wysiwyg-text-align-left&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">state</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">formatBlock</span><span class="p">.</span><span class="nx">state</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;formatBlock&quot;</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="s2">&quot;wysiwyg-text-align-left&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">value</span><span class="o">:</span><span class="kd">function</span><span class="p">(){}}})(</span><span class="nx">wysihtml5</span><span class="p">);</span></div><div class='line' id='LC208'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="sr">/wysiwyg-text-align-[a-z]+/g</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">justifyRight</span><span class="o">=</span><span class="p">{</span><span class="nx">exec</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">formatBlock</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;formatBlock&quot;</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="s2">&quot;wysiwyg-text-align-right&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">state</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">formatBlock</span><span class="p">.</span><span class="nx">state</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;formatBlock&quot;</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="s2">&quot;wysiwyg-text-align-right&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">value</span><span class="o">:</span><span class="kd">function</span><span class="p">(){}}})(</span><span class="nx">wysihtml5</span><span class="p">);(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">underline</span><span class="o">=</span><span class="p">{</span><span class="nx">exec</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">formatInline</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;u&quot;</span><span class="p">)},</span><span class="nx">state</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">formatInline</span><span class="p">.</span><span class="nx">state</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;u&quot;</span><span class="p">)},</span><span class="nx">value</span><span class="o">:</span><span class="kd">function</span><span class="p">(){}}})(</span><span class="nx">wysihtml5</span><span class="p">);</span></div><div class='line' id='LC209'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="s1">&#39;&lt;span id=&quot;_wysihtml5-undo&quot; class=&quot;_wysihtml5-temp&quot;&gt;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">INVISIBLE_SPACE</span><span class="o">+</span><span class="s2">&quot;&lt;/span&gt;&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="s1">&#39;&lt;span id=&quot;_wysihtml5-redo&quot; class=&quot;_wysihtml5-temp&quot;&gt;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">INVISIBLE_SPACE</span><span class="o">+</span><span class="s2">&quot;&lt;/span&gt;&quot;</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">UndoManager</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">Dispatcher</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">constructor</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">editor</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">composer</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">composer</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">composer</span><span class="p">.</span><span class="nx">element</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">history</span><span class="o">=</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">composer</span><span class="p">.</span><span class="nx">getValue</span><span class="p">()];</span><span class="k">this</span><span class="p">.</span><span class="nx">position</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">composer</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">support</span><span class="p">(</span><span class="s2">&quot;insertHTML&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_observe</span><span class="p">()},</span><span class="nx">_observe</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">composer</span><span class="p">.</span><span class="nx">sandbox</span><span class="p">.</span><span class="nx">getDocument</span><span class="p">(),</span></div><div class='line' id='LC210'><span class="nx">g</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="s2">&quot;keydown&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">altKey</span><span class="o">||!</span><span class="nx">a</span><span class="p">.</span><span class="nx">ctrlKey</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">metaKey</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyCode</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">90</span><span class="o">===</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">shiftKey</span><span class="o">||</span><span class="mi">89</span><span class="o">===</span><span class="nx">b</span><span class="p">;</span><span class="mi">90</span><span class="o">===</span><span class="nx">b</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">shiftKey</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">undo</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">())</span><span class="o">:</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">redo</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">())}});</span><span class="nx">d</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="s2">&quot;keydown&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyCode</span><span class="p">;</span><span class="nx">a</span><span class="o">!==</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">,(</span><span class="mi">8</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="mi">46</span><span class="o">===</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">transact</span><span class="p">())});</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">browser</span><span class="p">.</span><span class="nx">hasUndoInContextMenu</span><span class="p">()){</span><span class="kd">var</span> <span class="nx">i</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="s2">&quot;._wysihtml5-temp&quot;</span><span class="p">);)</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">clearInterval</span><span class="p">(</span><span class="nx">i</span><span class="p">)};</span><span class="nx">d</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="s2">&quot;contextmenu&quot;</span><span class="p">,</span></div><div class='line' id='LC211'><span class="kd">function</span><span class="p">(){</span><span class="nx">k</span><span class="p">();</span><span class="nx">e</span><span class="p">.</span><span class="nx">composer</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">executeAndRestoreSimple</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">lastChild</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">composer</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">setAfter</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">lastChild</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">execCommand</span><span class="p">(</span><span class="s2">&quot;insertHTML&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">execCommand</span><span class="p">(</span><span class="s2">&quot;insertHTML&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">execCommand</span><span class="p">(</span><span class="s2">&quot;undo&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="kc">null</span><span class="p">)});</span><span class="nx">i</span><span class="o">=</span><span class="nx">setInterval</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">f</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;_wysihtml5-redo&quot;</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">k</span><span class="p">(),</span><span class="nx">e</span><span class="p">.</span><span class="nx">redo</span><span class="p">())</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;_wysihtml5-undo&quot;</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">k</span><span class="p">(),</span><span class="nx">e</span><span class="p">.</span><span class="nx">undo</span><span class="p">())},</span><span class="mi">400</span><span class="p">);</span><span class="nx">h</span><span class="o">||</span><span class="p">(</span><span class="nx">h</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="nb">document</span><span class="p">,</span><span class="s2">&quot;mousedown&quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="nx">f</span><span class="p">,[</span><span class="s2">&quot;mousedown&quot;</span><span class="p">,</span><span class="s2">&quot;paste&quot;</span><span class="p">,</span><span class="s2">&quot;cut&quot;</span><span class="p">,</span><span class="s2">&quot;copy&quot;</span><span class="p">],</span><span class="nx">k</span><span class="p">))})}</span><span class="k">this</span><span class="p">.</span><span class="nx">editor</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="s2">&quot;newword:composer&quot;</span><span class="p">,</span></div><div class='line' id='LC212'><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">transact</span><span class="p">()}).</span><span class="nx">observe</span><span class="p">(</span><span class="s2">&quot;beforecommand:composer&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">transact</span><span class="p">()})},</span><span class="nx">transact</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">history</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">position</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">composer</span><span class="p">.</span><span class="nx">getValue</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">!=</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">40</span><span class="o">&lt;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">history</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">position</span><span class="p">))</span><span class="k">this</span><span class="p">.</span><span class="nx">history</span><span class="p">.</span><span class="nx">shift</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">position</span><span class="o">--</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">position</span><span class="o">++</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">history</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">)}},</span><span class="nx">undo</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">transact</span><span class="p">();</span><span class="mi">1</span><span class="o">&gt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">position</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">history</span><span class="p">[</span><span class="o">--</span><span class="k">this</span><span class="p">.</span><span class="nx">position</span><span class="o">-</span><span class="mi">1</span><span class="p">]),</span><span class="k">this</span><span class="p">.</span><span class="nx">editor</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;undo:composer&quot;</span><span class="p">))},</span><span class="nx">redo</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">position</span><span class="o">&gt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">history</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">history</span><span class="p">[</span><span class="o">++</span><span class="k">this</span><span class="p">.</span><span class="nx">position</span><span class="o">-</span></div><div class='line' id='LC213'><span class="mi">1</span><span class="p">]),</span><span class="k">this</span><span class="p">.</span><span class="nx">editor</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;redo:composer&quot;</span><span class="p">))},</span><span class="nx">set</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">composer</span><span class="p">.</span><span class="nx">setValue</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">editor</span><span class="p">.</span><span class="nx">focus</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">)}})})(</span><span class="nx">wysihtml5</span><span class="p">);</span></div><div class='line' id='LC214'><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">views</span><span class="p">.</span><span class="nx">View</span><span class="o">=</span><span class="nx">Base</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">constructor</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">config</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_observeViewChange</span><span class="p">()},</span><span class="nx">_observeViewChange</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="s2">&quot;beforeload&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="s2">&quot;change_view&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">name</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">currentView</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">show</span><span class="p">(),</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">focus</span><span class="p">()},</span><span class="mi">0</span><span class="p">))</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">hide</span><span class="p">()})})},</span><span class="nx">focus</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="s2">&quot;:focus&quot;</span><span class="p">)</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">focus</span><span class="p">()}</span><span class="k">catch</span><span class="p">(</span><span class="nx">b</span><span class="p">){}},</span><span class="nx">hide</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span></div><div class='line' id='LC215'><span class="s2">&quot;none&quot;</span><span class="p">},</span><span class="nx">show</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">},</span><span class="nx">disable</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;disabled&quot;</span><span class="p">,</span><span class="s2">&quot;disabled&quot;</span><span class="p">)},</span><span class="nx">enable</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">removeAttribute</span><span class="p">(</span><span class="s2">&quot;disabled&quot;</span><span class="p">)}});</span></div><div class='line' id='LC216'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">browser</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">views</span><span class="p">.</span><span class="nx">Composer</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">views</span><span class="p">.</span><span class="nx">View</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;composer&quot;</span><span class="p">,</span><span class="nx">CARET_HACK</span><span class="o">:</span><span class="s2">&quot;&lt;br&gt;&quot;</span><span class="p">,</span><span class="nx">constructor</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">textarea</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">textarea</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_initSandbox</span><span class="p">()},</span><span class="nx">clear</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">displaysCaretInEmptyContentEditableCorrectly</span><span class="p">()</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">CARET_HACK</span><span class="p">},</span><span class="nx">getValue</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">isEmpty</span><span class="p">()</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">quirks</span><span class="p">.</span><span class="nx">getCorrectInnerHTML</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">);</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">c</span><span class="p">));</span><span class="k">return</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">string</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">INVISIBLE_SPACE</span><span class="p">).</span><span class="nx">by</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)},</span><span class="nx">setValue</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></div><div class='line' id='LC217'><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">a</span><span class="p">},</span><span class="nx">show</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">iframe</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_displayStyle</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">disable</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">enable</span><span class="p">()},</span><span class="nx">hide</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_displayStyle</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">getStyle</span><span class="p">(</span><span class="s2">&quot;display&quot;</span><span class="p">).</span><span class="nx">from</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">iframe</span><span class="p">);</span><span class="s2">&quot;none&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_displayStyle</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_displayStyle</span><span class="o">=</span><span class="kc">null</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">iframe</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">},</span><span class="nx">disable</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">removeAttribute</span><span class="p">(</span><span class="s2">&quot;contentEditable&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="p">()},</span><span class="nx">enable</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;contentEditable&quot;</span><span class="p">,</span><span class="s2">&quot;true&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="p">()},</span><span class="nx">focus</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">browser</span><span class="p">.</span><span class="nx">doesAsyncFocus</span><span class="p">()</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC218'><span class="k">this</span><span class="p">.</span><span class="nx">hasPlaceholderSet</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">clear</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="p">();</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">lastChild</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s2">&quot;BR&quot;</span><span class="o">===</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">setBefore</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">lastChild</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">setAfter</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">lastChild</span><span class="p">))},</span><span class="nx">getTextContent</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">getTextContent</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">)},</span><span class="nx">hasPlaceholderSet</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">getTextContent</span><span class="p">()</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">textarea</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;placeholder&quot;</span><span class="p">)},</span><span class="nx">isEmpty</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">innerHTML</span><span class="p">;</span><span class="k">return</span><span class="s2">&quot;&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="nx">a</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">CARET_HACK</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">hasPlaceholderSet</span><span class="p">()</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">getTextContent</span><span class="p">()</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC219'><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="s2">&quot;blockquote, ul, ol, img, embed, object, table, iframe, svg, video, audio, button, input, select, textarea&quot;</span><span class="p">)},</span><span class="nx">_initSandbox</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">sandbox</span><span class="o">=</span><span class="k">new</span> <span class="nx">c</span><span class="p">.</span><span class="nx">Sandbox</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">_create</span><span class="p">()},{</span><span class="nx">stylesheets</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">stylesheets</span><span class="p">});</span><span class="k">this</span><span class="p">.</span><span class="nx">iframe</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">sandbox</span><span class="p">.</span><span class="nx">getIframe</span><span class="p">();</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;input&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="s2">&quot;hidden&quot;</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;_wysihtml5_mode&quot;</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">textarea</span><span class="p">.</span><span class="nx">element</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">insert</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">iframe</span><span class="p">).</span><span class="nx">after</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">insert</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">after</span><span class="p">(</span><span class="nx">f</span><span class="p">)},</span><span class="nx">_create</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="o">=</span></div><div class='line' id='LC220'><span class="k">this</span><span class="p">.</span><span class="nx">sandbox</span><span class="p">.</span><span class="nx">getDocument</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">body</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">textarea</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">textarea</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">textarea</span><span class="p">.</span><span class="nx">getValue</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">enable</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">selection</span><span class="o">=</span><span class="k">new</span> <span class="nx">b</span><span class="p">.</span><span class="nx">Selection</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">commands</span><span class="o">=</span><span class="k">new</span> <span class="nx">b</span><span class="p">.</span><span class="nx">Commands</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">copyAttributes</span><span class="p">(</span><span class="s2">&quot;className spellcheck title lang dir accessKey&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)).</span><span class="nx">from</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textarea</span><span class="p">.</span><span class="nx">element</span><span class="p">).</span><span class="nx">to</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">composerClassName</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">style</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">style</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">observe</span><span class="p">();</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">name</span><span class="p">;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span></div><div class='line' id='LC221'><span class="nx">e</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">iframe</span><span class="p">,</span><span class="nx">e</span><span class="p">));(</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;string&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">placeholder</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">placeholder</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">textarea</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;placeholder&quot;</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">simulatePlaceholder</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="s2">&quot;styleWithCSS&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_initAutoLinking</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">_initObjectResizing</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">_initUndoManager</span><span class="p">();(</span><span class="k">this</span><span class="p">.</span><span class="nx">textarea</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">hasAttribute</span><span class="p">(</span><span class="s2">&quot;autofocus&quot;</span><span class="p">)</span><span class="o">||</span><span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="s2">&quot;:focus&quot;</span><span class="p">)</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">textarea</span><span class="p">.</span><span class="nx">element</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">focus</span><span class="p">()},</span><span class="mi">100</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">quirks</span><span class="p">.</span><span class="nx">insertLineBreakOnReturn</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">clearsContentEditableCorrectly</span><span class="p">()</span><span class="o">||</span></div><div class='line' id='LC222'><span class="nx">b</span><span class="p">.</span><span class="nx">quirks</span><span class="p">.</span><span class="nx">ensureProperClearing</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">clearsListsInContentEditableCorrectly</span><span class="p">()</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">quirks</span><span class="p">.</span><span class="nx">ensureProperClearingOfLists</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">initSync</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">sync</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">initSync</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">textarea</span><span class="p">.</span><span class="nx">hide</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;beforeload&quot;</span><span class="p">).</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;load&quot;</span><span class="p">)},</span><span class="nx">_initAutoLinking</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">canDisableAutoLinking</span><span class="p">(),</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">doesAutoLinkingInContentEditable</span><span class="p">();</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="s2">&quot;autoUrlDetect&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">autoLink</span><span class="p">){(</span><span class="o">!</span><span class="nx">f</span><span class="o">||</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="s2">&quot;newword:composer&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">executeAndRestore</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></div><div class='line' id='LC223'><span class="nx">b</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">autoLink</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">)})});</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">sandbox</span><span class="p">.</span><span class="nx">getDocument</span><span class="p">().</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;a&quot;</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">autoLink</span><span class="p">.</span><span class="nx">URL_REG_EXP</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">string</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">getTextContent</span><span class="p">(</span><span class="nx">a</span><span class="p">)).</span><span class="nx">trim</span><span class="p">();</span><span class="s2">&quot;www.&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;http://&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="s2">&quot;keydown&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">getSelectedNode</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">getParentElement</span><span class="p">(</span><span class="nx">a</span><span class="p">,{</span><span class="nx">nodeName</span><span class="o">:</span><span class="s2">&quot;A&quot;</span><span class="p">},</span><span class="mi">4</span><span class="p">),</span><span class="nx">e</span><span class="p">;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">h</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">h</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">a</span><span class="o">!==</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;href&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="mi">0</span><span class="p">))}})}},</span><span class="nx">_initObjectResizing</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span></div><div class='line' id='LC224'><span class="p">[</span><span class="s2">&quot;width&quot;</span><span class="p">,</span><span class="s2">&quot;height&quot;</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="s2">&quot;enableObjectResizing&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">allowObjectResizing</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">allowObjectResizing</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">supportsEvent</span><span class="p">(</span><span class="s2">&quot;resizeend&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="s2">&quot;resizeend&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">srcElement</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">)</span><span class="nx">k</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">h</span><span class="p">],</span><span class="nx">c</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">k</span><span class="p">],</span><span class="mi">10</span><span class="p">)),</span><span class="nx">c</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">quirks</span><span class="p">.</span><span class="nx">redraw</span><span class="p">(</span><span class="nx">f</span><span class="p">)})</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">supportsEvent</span><span class="p">(</span><span class="s2">&quot;resizestart&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="s2">&quot;resizestart&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">()})},</span><span class="nx">_initUndoManager</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">new</span> <span class="nx">b</span><span class="p">.</span><span class="nx">UndoManager</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="p">)}})})(</span><span class="nx">wysihtml5</span><span class="p">);</span></div><div class='line' id='LC225'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nb">document</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nb">window</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="s2">&quot;background-color color cursor font-family font-size font-style font-variant font-weight line-height letter-spacing text-align text-decoration text-indent text-rendering word-break word-wrap word-spacing&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="s2">&quot;background-color border-collapse border-bottom-color border-bottom-style border-bottom-width border-left-color border-left-style border-left-width border-right-color border-right-style border-right-width border-top-color border-top-style border-top-width clear display float margin-bottom margin-left margin-right margin-top outline-color outline-offset outline-width outline-style padding-left padding-right padding-top padding-bottom position top left right bottom z-index vertical-align text-align -webkit-box-sizing -moz-box-sizing -ms-box-sizing box-sizing -webkit-box-shadow -moz-box-shadow -ms-box-shadow box-shadow -webkit-border-top-right-radius -moz-border-radius-topright border-top-right-radius -webkit-border-bottom-right-radius -moz-border-radius-bottomright border-bottom-right-radius -webkit-border-bottom-left-radius -moz-border-radius-bottomleft border-bottom-left-radius -webkit-border-top-left-radius -moz-border-radius-topleft border-top-left-radius width height&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span></div><div class='line' id='LC226'><span class="nx">i</span><span class="o">=</span><span class="s2">&quot;width height top left right bottom&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;html             { height: 100%; }&quot;</span><span class="p">,</span><span class="s2">&quot;body             { min-height: 100%; padding: 0; margin: 0; margin-top: -1px; padding-top: 1px; }&quot;</span><span class="p">,</span><span class="s2">&quot;._wysihtml5-temp { display: none; }&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">browser</span><span class="p">.</span><span class="nx">isGecko</span><span class="o">?</span><span class="s2">&quot;body.placeholder { color: graytext !important; }&quot;</span><span class="o">:</span><span class="s2">&quot;body.placeholder { color: #a9a9a9 !important; }&quot;</span><span class="p">,</span><span class="s2">&quot;body[disabled]   { background-color: #eee !important; color: #999 !important; cursor: default !important; }&quot;</span><span class="p">,</span><span class="s2">&quot;img:-moz-broken  { -moz-force-broken-image-icon: 1; height: 24px; width: 24px; }&quot;</span><span class="p">],</span></div><div class='line' id='LC227'><span class="nx">k</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">setActive</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="nx">b</span><span class="p">.</span><span class="nx">setActive</span><span class="p">()}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){}</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">scrollTop</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">{</span><span class="nx">position</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">position</span><span class="p">,</span><span class="nx">top</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">top</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">left</span><span class="p">,</span><span class="nx">WebkitUserSelect</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">WebkitUserSelect</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">setStyles</span><span class="p">({</span><span class="nx">position</span><span class="o">:</span><span class="s2">&quot;absolute&quot;</span><span class="p">,</span><span class="nx">top</span><span class="o">:</span><span class="s2">&quot;-99999px&quot;</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="s2">&quot;-99999px&quot;</span><span class="p">,</span><span class="nx">WebkitUserSelect</span><span class="o">:</span><span class="s2">&quot;none&quot;</span><span class="p">}).</span><span class="nx">on</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">focus</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">setStyles</span><span class="p">(</span><span class="nx">f</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">scrollTo</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">scrollTo</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">)}};</span><span class="nx">b</span><span class="p">.</span><span class="nx">views</span><span class="p">.</span><span class="nx">Composer</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">style</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="s2">&quot;:focus&quot;</span><span class="p">),</span><span class="nx">p</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">textarea</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span></div><div class='line' id='LC228'><span class="nx">q</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">hasAttribute</span><span class="p">(</span><span class="s2">&quot;placeholder&quot;</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">q</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;placeholder&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">focusStylesHost</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">focusStylesHost</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">cloneNode</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">blurStylesHost</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">blurStylesHost</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">cloneNode</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="nx">q</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">.</span><span class="nx">removeAttribute</span><span class="p">(</span><span class="s2">&quot;placeholder&quot;</span><span class="p">);</span><span class="nx">p</span><span class="o">===</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">.</span><span class="nx">blur</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">copyStyles</span><span class="p">(</span><span class="nx">g</span><span class="p">).</span><span class="nx">from</span><span class="p">(</span><span class="nx">p</span><span class="p">).</span><span class="nx">to</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">iframe</span><span class="p">).</span><span class="nx">andTo</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">blurStylesHost</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">copyStyles</span><span class="p">(</span><span class="nx">f</span><span class="p">).</span><span class="nx">from</span><span class="p">(</span><span class="nx">p</span><span class="p">).</span><span class="nx">to</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">).</span><span class="nx">andTo</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">blurStylesHost</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">insertCSS</span><span class="p">(</span><span class="nx">h</span><span class="p">).</span><span class="nx">into</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">);</span><span class="nx">k</span><span class="p">(</span><span class="nx">p</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">copyStyles</span><span class="p">(</span><span class="nx">g</span><span class="p">).</span><span class="nx">from</span><span class="p">(</span><span class="nx">p</span><span class="p">).</span><span class="nx">to</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">focusStylesHost</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">copyStyles</span><span class="p">(</span><span class="nx">f</span><span class="p">).</span><span class="nx">from</span><span class="p">(</span><span class="nx">p</span><span class="p">).</span><span class="nx">to</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">focusStylesHost</span><span class="p">);</span></div><div class='line' id='LC229'><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">array</span><span class="p">(</span><span class="nx">g</span><span class="p">).</span><span class="nx">without</span><span class="p">([</span><span class="s2">&quot;display&quot;</span><span class="p">]);</span><span class="nx">n</span><span class="o">?</span><span class="nx">n</span><span class="p">.</span><span class="nx">focus</span><span class="p">()</span><span class="o">:</span><span class="nx">p</span><span class="p">.</span><span class="nx">blur</span><span class="p">();</span><span class="nx">q</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;placeholder&quot;</span><span class="p">,</span><span class="nx">r</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">.</span><span class="nx">browser</span><span class="p">.</span><span class="nx">hasCurrentStyleProperty</span><span class="p">())</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;resize&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">,</span><span class="nx">j</span><span class="p">.</span><span class="nx">iframe</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">getStyle</span><span class="p">(</span><span class="s2">&quot;display&quot;</span><span class="p">).</span><span class="nx">from</span><span class="p">(</span><span class="nx">p</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">getStyle</span><span class="p">(</span><span class="s2">&quot;display&quot;</span><span class="p">).</span><span class="nx">from</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">iframe</span><span class="p">);</span><span class="nx">p</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">j</span><span class="p">.</span><span class="nx">iframe</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">copyStyles</span><span class="p">(</span><span class="nx">i</span><span class="p">).</span><span class="nx">from</span><span class="p">(</span><span class="nx">p</span><span class="p">).</span><span class="nx">to</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">iframe</span><span class="p">).</span><span class="nx">andTo</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">focusStylesHost</span><span class="p">).</span><span class="nx">andTo</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">blurStylesHost</span><span class="p">);</span><span class="nx">j</span><span class="p">.</span><span class="nx">iframe</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">p</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="nx">a</span><span class="p">}</span><span class="k">else</span> <span class="nx">s</span><span class="p">.</span><span class="nx">stop</span><span class="p">()});</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="s2">&quot;focus:composer&quot;</span><span class="p">,</span></div><div class='line' id='LC230'><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">copyStyles</span><span class="p">(</span><span class="nx">m</span><span class="p">).</span><span class="nx">from</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">focusStylesHost</span><span class="p">).</span><span class="nx">to</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">iframe</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">copyStyles</span><span class="p">(</span><span class="nx">f</span><span class="p">).</span><span class="nx">from</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">focusStylesHost</span><span class="p">).</span><span class="nx">to</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">element</span><span class="p">)});</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="s2">&quot;blur:composer&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">copyStyles</span><span class="p">(</span><span class="nx">m</span><span class="p">).</span><span class="nx">from</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">blurStylesHost</span><span class="p">).</span><span class="nx">to</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">iframe</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">copyStyles</span><span class="p">(</span><span class="nx">f</span><span class="p">).</span><span class="nx">from</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">blurStylesHost</span><span class="p">).</span><span class="nx">to</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">element</span><span class="p">)});</span><span class="k">return</span> <span class="k">this</span><span class="p">}})(</span><span class="nx">wysihtml5</span><span class="p">);</span></div><div class='line' id='LC231'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">browser</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="p">{</span><span class="mi">66</span><span class="o">:</span><span class="s2">&quot;bold&quot;</span><span class="p">,</span><span class="mi">73</span><span class="o">:</span><span class="s2">&quot;italic&quot;</span><span class="p">,</span><span class="mi">85</span><span class="o">:</span><span class="s2">&quot;underline&quot;</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">views</span><span class="p">.</span><span class="nx">Composer</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">observe</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getValue</span><span class="p">(),</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">sandbox</span><span class="p">.</span><span class="nx">getIframe</span><span class="p">(),</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">supportsEventsInIframeCorrectly</span><span class="p">()</span><span class="o">?</span><span class="nx">i</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">sandbox</span><span class="p">.</span><span class="nx">getWindow</span><span class="p">(),</span><span class="nx">k</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">supportsEvent</span><span class="p">(</span><span class="s2">&quot;drop&quot;</span><span class="p">)</span><span class="o">?</span><span class="p">[</span><span class="s2">&quot;drop&quot;</span><span class="p">,</span><span class="s2">&quot;paste&quot;</span><span class="p">]</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;dragdrop&quot;</span><span class="p">,</span><span class="s2">&quot;paste&quot;</span><span class="p">];</span><span class="nx">c</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="s2">&quot;DOMNodeRemoved&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">clearInterval</span><span class="p">(</span><span class="nx">j</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;destroy:composer&quot;</span><span class="p">)});</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">setInterval</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">,</span><span class="nx">g</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">clearInterval</span><span class="p">(</span><span class="nx">j</span><span class="p">),</span></div><div class='line' id='LC232'><span class="nx">e</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;destroy:composer&quot;</span><span class="p">))},</span><span class="mi">250</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="s2">&quot;focus&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;focus&quot;</span><span class="p">).</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;focus:composer&quot;</span><span class="p">);</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">getValue</span><span class="p">()},</span><span class="mi">0</span><span class="p">)});</span><span class="nx">c</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="s2">&quot;blur&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">f</span><span class="o">!==</span><span class="nx">e</span><span class="p">.</span><span class="nx">getValue</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;change&quot;</span><span class="p">).</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;change:composer&quot;</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;blur&quot;</span><span class="p">).</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;blur:composer&quot;</span><span class="p">)});</span><span class="nx">b</span><span class="p">.</span><span class="nx">browser</span><span class="p">.</span><span class="nx">isIos</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="s2">&quot;blur&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;input&quot;</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">scrollTop</span><span class="o">||</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="o">||</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="p">;</span></div><div class='line' id='LC233'><span class="k">try</span><span class="p">{</span><span class="nx">e</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">insertNode</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="nx">i</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="nx">a</span><span class="p">.</span><span class="nx">focus</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nb">window</span><span class="p">.</span><span class="nx">scrollTo</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">)});</span><span class="nx">c</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="s2">&quot;dragenter&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;unset_placeholder&quot;</span><span class="p">)});</span><span class="nx">a</span><span class="p">.</span><span class="nx">firesOnDropOnlyWhenOnDragOverIsCancelled</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="nx">i</span><span class="p">,[</span><span class="s2">&quot;dragover&quot;</span><span class="p">,</span><span class="s2">&quot;dragenter&quot;</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">()});</span><span class="nx">c</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">dataTransfer</span><span class="p">,</span><span class="nx">d</span><span class="p">;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">supportsDataTransfer</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">getData</span><span class="p">(</span><span class="s2">&quot;text/html&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">getData</span><span class="p">(</span><span class="s2">&quot;text/plain&quot;</span><span class="p">));</span><span class="nx">d</span><span class="o">?</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">focus</span><span class="p">(),</span><span class="nx">e</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="s2">&quot;insertHTML&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;paste&quot;</span><span class="p">).</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;paste:composer&quot;</span><span class="p">),</span></div><div class='line' id='LC234'><span class="nx">b</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">())</span><span class="o">:</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;paste&quot;</span><span class="p">).</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;paste:composer&quot;</span><span class="p">)},</span><span class="mi">0</span><span class="p">)});</span><span class="nx">c</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="s2">&quot;keyup&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyCode</span><span class="p">;(</span><span class="nx">a</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">SPACE_KEY</span><span class="o">||</span><span class="nx">a</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">ENTER_KEY</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;newword:composer&quot;</span><span class="p">)});</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="s2">&quot;paste:composer&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;newword:composer&quot;</span><span class="p">)},</span><span class="mi">0</span><span class="p">)});</span><span class="nx">a</span><span class="p">.</span><span class="nx">canSelectImagesInContentEditable</span><span class="p">()</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="s2">&quot;mousedown&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">;</span><span class="s2">&quot;IMG&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">selectNode</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">())});</span><span class="nx">c</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span></div><div class='line' id='LC235'><span class="s2">&quot;keydown&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyCode</span><span class="p">];</span><span class="k">if</span><span class="p">((</span><span class="nx">a</span><span class="p">.</span><span class="nx">ctrlKey</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">metaKey</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">altKey</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">)</span><span class="nx">e</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">()});</span><span class="nx">c</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="s2">&quot;keydown&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">getSelectedNode</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyCode</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="s2">&quot;IMG&quot;</span><span class="o">===</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">BACKSPACE_KEY</span><span class="o">||</span><span class="nx">d</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">DELETE_KEY</span><span class="p">))</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="s2">&quot;A&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">&amp;&amp;!</span><span class="nx">d</span><span class="p">.</span><span class="nx">firstChild</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">quirks</span><span class="p">.</span><span class="nx">redraw</span><span class="p">(</span><span class="nx">i</span><span class="p">)},</span><span class="mi">0</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">()});</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="p">{</span><span class="nx">IMG</span><span class="o">:</span><span class="s2">&quot;Image: &quot;</span><span class="p">,</span><span class="nx">A</span><span class="o">:</span><span class="s2">&quot;Link: &quot;</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="s2">&quot;mouseover&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span></div><div class='line' id='LC236'><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">;</span><span class="o">!</span><span class="p">(</span><span class="s2">&quot;A&quot;</span><span class="o">!==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="s2">&quot;IMG&quot;</span><span class="o">!==</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasAttribute</span><span class="p">(</span><span class="s2">&quot;title&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">+</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;href&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;src&quot;</span><span class="p">)),</span><span class="nx">a</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;title&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">))})}})(</span><span class="nx">wysihtml5</span><span class="p">);</span></div><div class='line' id='LC237'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">views</span><span class="p">.</span><span class="nx">Synchronizer</span><span class="o">=</span><span class="nx">Base</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">constructor</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">editor</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">textarea</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">composer</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_observe</span><span class="p">()},</span><span class="nx">fromComposerToTextarea</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">textarea</span><span class="p">.</span><span class="nx">setValue</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">string</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">composer</span><span class="p">.</span><span class="nx">getValue</span><span class="p">()).</span><span class="nx">trim</span><span class="p">(),</span><span class="nx">c</span><span class="p">)},</span><span class="nx">fromTextareaToComposer</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">textarea</span><span class="p">.</span><span class="nx">getValue</span><span class="p">();</span><span class="nx">a</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">composer</span><span class="p">.</span><span class="nx">setValue</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">composer</span><span class="p">.</span><span class="nx">clear</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">editor</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;set_placeholder&quot;</span><span class="p">))},</span><span class="nx">sync</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="s2">&quot;textarea&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">editor</span><span class="p">.</span><span class="nx">currentView</span><span class="p">.</span><span class="nx">name</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">fromTextareaToComposer</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">fromComposerToTextarea</span><span class="p">(</span><span class="nx">b</span><span class="p">)},</span></div><div class='line' id='LC238'><span class="nx">_observe</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">textarea</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">form</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="o">=</span><span class="nx">setInterval</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fromComposerToTextarea</span><span class="p">()},</span><span class="mi">400</span><span class="p">)},</span><span class="nx">f</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">clearInterval</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="kc">null</span><span class="p">};</span><span class="nx">e</span><span class="p">();</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;submit&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">sync</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">)}),</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;reset&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fromTextareaToComposer</span><span class="p">()},</span><span class="mi">0</span><span class="p">)}));</span><span class="k">this</span><span class="p">.</span><span class="nx">editor</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="s2">&quot;change_view&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;composer&quot;</span><span class="o">&amp;&amp;!</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fromTextareaToComposer</span><span class="p">(</span><span class="kc">true</span><span class="p">);</span><span class="nx">e</span><span class="p">()}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;textarea&quot;</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fromComposerToTextarea</span><span class="p">(</span><span class="kc">true</span><span class="p">);</span><span class="nx">f</span><span class="p">()}});</span><span class="k">this</span><span class="p">.</span><span class="nx">editor</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="s2">&quot;destroy:composer&quot;</span><span class="p">,</span></div><div class='line' id='LC239'><span class="nx">f</span><span class="p">)}})})(</span><span class="nx">wysihtml5</span><span class="p">);</span></div><div class='line' id='LC240'><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">views</span><span class="p">.</span><span class="nx">Textarea</span><span class="o">=</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">views</span><span class="p">.</span><span class="nx">View</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;textarea&quot;</span><span class="p">,</span><span class="nx">constructor</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_observe</span><span class="p">()},</span><span class="nx">clear</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">},</span><span class="nx">getValue</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">isEmpty</span><span class="p">()</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">c</span><span class="p">));</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span><span class="nx">setValue</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">b</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="nx">b</span><span class="p">},</span><span class="nx">hasPlaceholderSet</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">browser</span><span class="p">.</span><span class="nx">supportsPlaceholderAttributeOn</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;placeholder&quot;</span><span class="p">)</span><span class="o">||</span><span class="kc">null</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span></div><div class='line' id='LC241'><span class="k">return</span> <span class="nx">b</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="o">||</span><span class="nx">a</span><span class="o">===</span><span class="nx">c</span><span class="p">},</span><span class="nx">isEmpty</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">string</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">value</span><span class="p">).</span><span class="nx">trim</span><span class="p">()</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">hasPlaceholderSet</span><span class="p">()},</span><span class="nx">_observe</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="nx">focusin</span><span class="o">:</span><span class="s2">&quot;focus&quot;</span><span class="p">,</span><span class="nx">focusout</span><span class="o">:</span><span class="s2">&quot;blur&quot;</span><span class="p">},</span><span class="nx">d</span><span class="o">=</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">browser</span><span class="p">.</span><span class="nx">supportsEvent</span><span class="p">(</span><span class="s2">&quot;focusin&quot;</span><span class="p">)</span><span class="o">?</span><span class="p">[</span><span class="s2">&quot;focusin&quot;</span><span class="p">,</span><span class="s2">&quot;focusout&quot;</span><span class="p">,</span><span class="s2">&quot;change&quot;</span><span class="p">]</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;focus&quot;</span><span class="p">,</span><span class="s2">&quot;blur&quot;</span><span class="p">,</span><span class="s2">&quot;change&quot;</span><span class="p">];</span><span class="nx">c</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="s2">&quot;beforeload&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">]</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">fire</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;:textarea&quot;</span><span class="p">)});</span><span class="nx">wysihtml5</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="nx">b</span><span class="p">,[</span><span class="s2">&quot;paste&quot;</span><span class="p">,</span><span class="s2">&quot;drop&quot;</span><span class="p">],</span><span class="kd">function</span><span class="p">(){</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;paste&quot;</span><span class="p">).</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;paste:textarea&quot;</span><span class="p">)},</span></div><div class='line' id='LC242'><span class="mi">0</span><span class="p">)})})}});</span></div><div class='line' id='LC243'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">toolbar</span><span class="p">.</span><span class="nx">Dialog</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">Dispatcher</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">constructor</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">link</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="o">=</span><span class="nx">b</span><span class="p">},</span><span class="nx">_observe</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">_observed</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">_serialize</span><span class="p">();</span><span class="nx">c</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">elementToChange</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;edit&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;save&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">hide</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">()};</span><span class="nx">c</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">link</span><span class="p">,</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">link</span><span class="p">,</span><span class="s2">&quot;wysihtml5-command-dialog-opened&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">hide</span><span class="p">()},</span><span class="mi">0</span><span class="p">)});</span><span class="nx">c</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">,</span><span class="s2">&quot;keydown&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">keyCode</span><span class="p">;</span></div><div class='line' id='LC244'><span class="nx">e</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">ENTER_KEY</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">e</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">ESCAPE_KEY</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">hide</span><span class="p">()});</span><span class="nx">c</span><span class="p">.</span><span class="nx">delegate</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">,</span><span class="s2">&quot;[data-wysihtml5-dialog-action=save]&quot;</span><span class="p">,</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">delegate</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">,</span><span class="s2">&quot;[data-wysihtml5-dialog-action=cancel]&quot;</span><span class="p">,</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;cancel&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">hide</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">()});</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="s2">&quot;input, select, textarea&quot;</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">clearInterval</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">interval</span><span class="p">)};</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="s2">&quot;change&quot;</span><span class="p">,</span><span class="nx">i</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_observed</span><span class="o">=!</span><span class="mi">0</span><span class="p">}},</span><span class="nx">_serialize</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">elementToChange</span><span class="o">||</span></div><div class='line' id='LC245'><span class="p">{},</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="s2">&quot;[data-wysihtml5-dialog-field]&quot;</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;data-wysihtml5-dialog-field&quot;</span><span class="p">)]</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">value</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">_interpolate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="s2">&quot;:focus&quot;</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="s2">&quot;[data-wysihtml5-dialog-field]&quot;</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">i</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">h</span><span class="p">],</span><span class="nx">b</span><span class="o">!==</span><span class="nx">f</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;hidden&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;data-wysihtml5-dialog-field&quot;</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">elementToChange</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">elementToChange</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">defaultValue</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="nx">c</span><span class="p">)},</span><span class="nx">show</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span></div><div class='line' id='LC246'><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="s2">&quot;input, select, textarea&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">elementToChange</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_observe</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">_interpolate</span><span class="p">();</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span><span class="nx">setInterval</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">_interpolate</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">)},</span><span class="mi">500</span><span class="p">));</span><span class="nx">c</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">link</span><span class="p">,</span><span class="s2">&quot;wysihtml5-command-dialog-opened&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;show&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="nx">e</span><span class="p">.</span><span class="nx">focus</span><span class="p">()}</span><span class="k">catch</span><span class="p">(</span><span class="nx">f</span><span class="p">){}},</span><span class="nx">hide</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">clearInterval</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">elementToChange</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">link</span><span class="p">,</span><span class="s2">&quot;wysihtml5-command-dialog-opened&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;hide&quot;</span><span class="p">)}})})(</span><span class="nx">wysihtml5</span><span class="p">);</span></div><div class='line' id='LC247'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="nx">position</span><span class="o">:</span><span class="s2">&quot;relative&quot;</span><span class="p">},</span><span class="nx">d</span><span class="o">=</span><span class="p">{</span><span class="nx">left</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">margin</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">opacity</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">overflow</span><span class="o">:</span><span class="s2">&quot;hidden&quot;</span><span class="p">,</span><span class="nx">padding</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">position</span><span class="o">:</span><span class="s2">&quot;absolute&quot;</span><span class="p">,</span><span class="nx">top</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">zIndex</span><span class="o">:</span><span class="mi">1</span><span class="p">},</span><span class="nx">e</span><span class="o">=</span><span class="p">{</span><span class="nx">cursor</span><span class="o">:</span><span class="s2">&quot;inherit&quot;</span><span class="p">,</span><span class="nx">fontSize</span><span class="o">:</span><span class="s2">&quot;50px&quot;</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="s2">&quot;50px&quot;</span><span class="p">,</span><span class="nx">marginTop</span><span class="o">:</span><span class="s2">&quot;-25px&quot;</span><span class="p">,</span><span class="nx">outline</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">padding</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">position</span><span class="o">:</span><span class="s2">&quot;absolute&quot;</span><span class="p">,</span><span class="nx">right</span><span class="o">:</span><span class="s2">&quot;-4px&quot;</span><span class="p">,</span><span class="nx">top</span><span class="o">:</span><span class="s2">&quot;50%&quot;</span><span class="p">},</span><span class="nx">f</span><span class="o">=</span><span class="p">{</span><span class="s2">&quot;x-webkit-speech&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">speech</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">toolbar</span><span class="p">.</span><span class="nx">Speech</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;input&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">browser</span><span class="p">.</span><span class="nx">supportsSpeechApiOn</span><span class="p">(</span><span class="nx">h</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">object</span><span class="p">(</span><span class="nx">d</span><span class="p">).</span><span class="nx">merge</span><span class="p">({</span><span class="nx">width</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="o">+</span></div><div class='line' id='LC248'><span class="s2">&quot;px&quot;</span><span class="p">});</span><span class="nx">c</span><span class="p">.</span><span class="nx">insert</span><span class="p">(</span><span class="nx">h</span><span class="p">).</span><span class="nx">into</span><span class="p">(</span><span class="nx">k</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">insert</span><span class="p">(</span><span class="nx">k</span><span class="p">).</span><span class="nx">into</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">setStyles</span><span class="p">(</span><span class="nx">e</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="nx">h</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">setAttributes</span><span class="p">(</span><span class="nx">f</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="nx">h</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">setStyles</span><span class="p">(</span><span class="nx">d</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="nx">k</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">setStyles</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="s2">&quot;onwebkitspeechchange&quot;</span><span class="k">in</span> <span class="nx">h</span><span class="o">?</span><span class="s2">&quot;webkitspeechchange&quot;</span><span class="o">:</span><span class="s2">&quot;speechchange&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">g</span><span class="p">.</span><span class="nx">execCommand</span><span class="p">(</span><span class="s2">&quot;insertText&quot;</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">value</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">});</span><span class="nx">c</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="s2">&quot;wysihtml5-command-disabled&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">()})}</span><span class="k">else</span> <span class="nx">i</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">}})(</span><span class="nx">wysihtml5</span><span class="p">);</span></div><div class='line' id='LC249'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">toolbar</span><span class="p">.</span><span class="nx">Toolbar</span><span class="o">=</span><span class="nx">Base</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">constructor</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">editor</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="o">=</span><span class="s2">&quot;string&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">c</span><span class="o">?</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">composer</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">composer</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_getLinks</span><span class="p">(</span><span class="s2">&quot;command&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_getLinks</span><span class="p">(</span><span class="s2">&quot;action&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_observe</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">show</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="s2">&quot;[data-wysihtml5-command=insertSpeech]&quot;</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="k">new</span> <span class="nx">b</span><span class="p">.</span><span class="nx">toolbar</span><span class="p">.</span><span class="nx">Speech</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="nx">g</span><span class="p">])},</span><span class="nx">_getLinks</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;Links&quot;</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">array</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="s2">&quot;[data-wysihtml5-&quot;</span><span class="o">+</span></div><div class='line' id='LC250'><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="p">)).</span><span class="nx">get</span><span class="p">(),</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;Mapping&quot;</span><span class="p">]</span><span class="o">=</span><span class="p">{},</span><span class="nx">i</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">n</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">i</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">k</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;data-wysihtml5-&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;data-wysihtml5-&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;-value&quot;</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="s2">&quot;[data-wysihtml5-&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;-group=&#39;&quot;</span><span class="o">+</span><span class="nx">k</span><span class="o">+</span><span class="s2">&quot;&#39;]&quot;</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_getDialog</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">k</span><span class="p">),</span><span class="nx">g</span><span class="p">[</span><span class="nx">k</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">j</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">link</span><span class="o">:</span><span class="nx">i</span><span class="p">,</span><span class="nx">group</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">name</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">value</span><span class="o">:</span><span class="nx">j</span><span class="p">,</span><span class="nx">dialog</span><span class="o">:</span><span class="nx">n</span><span class="p">,</span><span class="nx">state</span><span class="o">:!</span><span class="mi">1</span><span class="p">}},</span><span class="nx">_getDialog</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="s2">&quot;[data-wysihtml5-dialog=&#39;&quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;&#39;]&quot;</span><span class="p">),</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">;</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="k">new</span> <span class="nx">b</span><span class="p">.</span><span class="nx">toolbar</span><span class="p">.</span><span class="nx">Dialog</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="s2">&quot;show&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">composer</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">getBookmark</span><span class="p">();</span></div><div class='line' id='LC251'><span class="nx">e</span><span class="p">.</span><span class="nx">editor</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;show:dialog&quot;</span><span class="p">,{</span><span class="nx">command</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">dialogContainer</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">commandLink</span><span class="o">:</span><span class="nx">a</span><span class="p">})}),</span><span class="nx">g</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="s2">&quot;save&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">composer</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">setBookmark</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">_execCommand</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">editor</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;save:dialog&quot;</span><span class="p">,{</span><span class="nx">command</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">dialogContainer</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">commandLink</span><span class="o">:</span><span class="nx">a</span><span class="p">})}),</span><span class="nx">g</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="s2">&quot;cancel&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">editor</span><span class="p">.</span><span class="nx">focus</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">editor</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;cancel:dialog&quot;</span><span class="p">,{</span><span class="nx">command</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">dialogContainer</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">commandLink</span><span class="o">:</span><span class="nx">a</span><span class="p">})}));</span><span class="k">return</span> <span class="nx">g</span><span class="p">},</span><span class="nx">execCommand</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">commandsDisabled</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">commandMapping</span><span class="p">[</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">];</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">dialog</span><span class="o">&amp;&amp;!</span><span class="nx">c</span><span class="p">.</span><span class="nx">state</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">dialog</span><span class="p">.</span><span class="nx">show</span><span class="p">()</span><span class="o">:</span></div><div class='line' id='LC252'><span class="k">this</span><span class="p">.</span><span class="nx">_execCommand</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}},</span><span class="nx">_execCommand</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">editor</span><span class="p">.</span><span class="nx">focus</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">composer</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_updateLinkStates</span><span class="p">()},</span><span class="nx">execAction</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">editor</span><span class="p">;</span><span class="k">switch</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">case</span> <span class="s2">&quot;change_view&quot;</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">currentView</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">textarea</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;change_view&quot;</span><span class="p">,</span><span class="s2">&quot;composer&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;change_view&quot;</span><span class="p">,</span><span class="s2">&quot;textarea&quot;</span><span class="p">)}},</span><span class="nx">_observe</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">editor</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">commandLinks</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">actionLinks</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">setAttributes</span><span class="p">({</span><span class="nx">href</span><span class="o">:</span><span class="s2">&quot;javascript:;&quot;</span><span class="p">,</span><span class="nx">unselectable</span><span class="o">:</span><span class="s2">&quot;on&quot;</span><span class="p">}).</span><span class="nx">on</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span><span class="nx">c</span><span class="p">.</span><span class="nx">delegate</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span></div><div class='line' id='LC253'><span class="s2">&quot;[data-wysihtml5-command]&quot;</span><span class="p">,</span><span class="s2">&quot;mousedown&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">()});</span><span class="nx">c</span><span class="p">.</span><span class="nx">delegate</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="s2">&quot;[data-wysihtml5-command]&quot;</span><span class="p">,</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;data-wysihtml5-command&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;data-wysihtml5-command-value&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">execCommand</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">()});</span><span class="nx">c</span><span class="p">.</span><span class="nx">delegate</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="s2">&quot;[data-wysihtml5-action]&quot;</span><span class="p">,</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;data-wysihtml5-action&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">execAction</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">()});</span><span class="nx">b</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="s2">&quot;focus:composer&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">bookmark</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">clearInterval</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">interval</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">interval</span><span class="o">=</span></div><div class='line' id='LC254'><span class="nx">setInterval</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">_updateLinkStates</span><span class="p">()},</span><span class="mi">500</span><span class="p">)});</span><span class="nx">b</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="s2">&quot;blur:composer&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">clearInterval</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">interval</span><span class="p">)});</span><span class="nx">b</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="s2">&quot;destroy:composer&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">clearInterval</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">interval</span><span class="p">)});</span><span class="nx">b</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="s2">&quot;change_view&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">commandsDisabled</span><span class="o">=</span><span class="s2">&quot;composer&quot;</span><span class="o">!==</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">_updateLinkStates</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">commandsDisabled</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="s2">&quot;wysihtml5-commands-disabled&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="s2">&quot;wysihtml5-commands-disabled&quot;</span><span class="p">)},</span><span class="mi">0</span><span class="p">)})},</span><span class="nx">_updateLinkStates</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">commandMapping</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">actionMapping</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span></div><div class='line' id='LC255'><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">commandsDisabled</span><span class="o">?</span><span class="p">(</span><span class="nx">f</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">link</span><span class="p">,</span><span class="s2">&quot;wysihtml5-command-active&quot;</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">group</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">group</span><span class="p">,</span><span class="s2">&quot;wysihtml5-command-active&quot;</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">dialog</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">dialog</span><span class="p">.</span><span class="nx">hide</span><span class="p">())</span><span class="o">:</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">composer</span><span class="p">.</span><span class="nx">commands</span><span class="p">.</span><span class="nx">state</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">value</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">object</span><span class="p">(</span><span class="nx">f</span><span class="p">).</span><span class="nx">isArray</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">1</span><span class="o">===</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">:!</span><span class="mi">0</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">link</span><span class="p">,</span><span class="s2">&quot;wysihtml5-command-disabled&quot;</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">group</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">group</span><span class="p">,</span><span class="s2">&quot;wysihtml5-command-disabled&quot;</span><span class="p">)),</span><span class="nx">g</span><span class="p">.</span><span class="nx">state</span><span class="o">!==</span><span class="nx">f</span><span class="p">)(</span><span class="nx">g</span><span class="p">.</span><span class="nx">state</span><span class="o">=</span><span class="nx">f</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">link</span><span class="p">,</span><span class="s2">&quot;wysihtml5-command-active&quot;</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">group</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">group</span><span class="p">,</span><span class="s2">&quot;wysihtml5-command-active&quot;</span><span class="p">),</span></div><div class='line' id='LC256'><span class="nx">g</span><span class="p">.</span><span class="nx">dialog</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s2">&quot;object&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">f</span><span class="o">?</span><span class="nx">g</span><span class="p">.</span><span class="nx">dialog</span><span class="p">.</span><span class="nx">show</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">dialog</span><span class="p">.</span><span class="nx">hide</span><span class="p">()))</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">link</span><span class="p">,</span><span class="s2">&quot;wysihtml5-command-active&quot;</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">group</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">group</span><span class="p">,</span><span class="s2">&quot;wysihtml5-command-active&quot;</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">dialog</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">dialog</span><span class="p">.</span><span class="nx">hide</span><span class="p">());</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span> <span class="k">in</span> <span class="nx">d</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="s2">&quot;change_view&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">state</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">editor</span><span class="p">.</span><span class="nx">currentView</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">editor</span><span class="p">.</span><span class="nx">textarea</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">state</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">link</span><span class="p">,</span><span class="s2">&quot;wysihtml5-action-active&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">link</span><span class="p">,</span><span class="s2">&quot;wysihtml5-action-active&quot;</span><span class="p">))},</span><span class="nx">show</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">},</span><span class="nx">hide</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">}})})(</span><span class="nx">wysihtml5</span><span class="p">);</span></div><div class='line' id='LC257'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">{</span><span class="nx">name</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">style</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">toolbar</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">autoLink</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">parserRules</span><span class="o">:</span><span class="p">{</span><span class="nx">tags</span><span class="o">:</span><span class="p">{</span><span class="nx">br</span><span class="o">:</span><span class="p">{},</span><span class="nx">span</span><span class="o">:</span><span class="p">{},</span><span class="nx">div</span><span class="o">:</span><span class="p">{},</span><span class="nx">p</span><span class="o">:</span><span class="p">{}},</span><span class="nx">classes</span><span class="o">:</span><span class="p">{}},</span><span class="nx">parser</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">parse</span><span class="p">,</span><span class="nx">composerClassName</span><span class="o">:</span><span class="s2">&quot;wysihtml5-editor&quot;</span><span class="p">,</span><span class="nx">bodyClassName</span><span class="o">:</span><span class="s2">&quot;wysihtml5-supported&quot;</span><span class="p">,</span><span class="nx">stylesheets</span><span class="o">:</span><span class="p">[],</span><span class="nx">placeholderText</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">allowObjectResizing</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">supportTouchDevices</span><span class="o">:!</span><span class="mi">0</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">Editor</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">Dispatcher</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">constructor</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">textareaElement</span><span class="o">=</span><span class="s2">&quot;string&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">?</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">config</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">object</span><span class="p">({}).</span><span class="nx">merge</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">merge</span><span class="p">(</span><span class="nx">d</span><span class="p">).</span><span class="nx">get</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">currentView</span><span class="o">=</span></div><div class='line' id='LC258'><span class="k">this</span><span class="p">.</span><span class="nx">textarea</span><span class="o">=</span><span class="k">new</span> <span class="nx">b</span><span class="p">.</span><span class="nx">views</span><span class="p">.</span><span class="nx">Textarea</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">textareaElement</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">config</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_isCompatible</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">browser</span><span class="p">.</span><span class="nx">supported</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">_isCompatible</span><span class="o">||!</span><span class="k">this</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">supportTouchDevices</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">browser</span><span class="p">.</span><span class="nx">isTouchDevice</span><span class="p">()){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;beforeload&quot;</span><span class="p">).</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;load&quot;</span><span class="p">)},</span><span class="mi">0</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">b</span><span class="p">.</span><span class="nx">dom</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">bodyClassName</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">currentView</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">composer</span><span class="o">=</span><span class="k">new</span> <span class="nx">b</span><span class="p">.</span><span class="nx">views</span><span class="p">.</span><span class="nx">Composer</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">textareaElement</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">config</span><span class="p">);</span><span class="s2">&quot;function&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">parser</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_initParser</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="s2">&quot;beforeload&quot;</span><span class="p">,</span></div><div class='line' id='LC259'><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">synchronizer</span><span class="o">=</span><span class="k">new</span> <span class="nx">b</span><span class="p">.</span><span class="nx">views</span><span class="p">.</span><span class="nx">Synchronizer</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">textarea</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">composer</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">toolbar</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">toolbar</span><span class="o">=</span><span class="k">new</span> <span class="nx">b</span><span class="p">.</span><span class="nx">toolbar</span><span class="p">.</span><span class="nx">Toolbar</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">toolbar</span><span class="p">))});</span><span class="k">try</span><span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Heya! This page is using wysihtml5 for rich text editing. Check out https://github.com/xing/wysihtml5&quot;</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">f</span><span class="p">){}}},</span><span class="nx">isCompatible</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_isCompatible</span><span class="p">},</span><span class="nx">clear</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">currentView</span><span class="p">.</span><span class="nx">clear</span><span class="p">();</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">getValue</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">currentView</span><span class="p">.</span><span class="nx">getValue</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">setValue</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">clear</span><span class="p">();</span></div><div class='line' id='LC260'><span class="k">this</span><span class="p">.</span><span class="nx">currentView</span><span class="p">.</span><span class="nx">setValue</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">focus</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">currentView</span><span class="p">.</span><span class="nx">focus</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">disable</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">currentView</span><span class="p">.</span><span class="nx">disable</span><span class="p">();</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">enable</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">currentView</span><span class="p">.</span><span class="nx">enable</span><span class="p">();</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">isEmpty</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">currentView</span><span class="p">.</span><span class="nx">isEmpty</span><span class="p">()},</span><span class="nx">hasPlaceholderSet</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">currentView</span><span class="p">.</span><span class="nx">hasPlaceholderSet</span><span class="p">()},</span><span class="nx">parse</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">parser</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">parserRules</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">composer</span><span class="p">.</span><span class="nx">sandbox</span><span class="p">.</span><span class="nx">getDocument</span><span class="p">(),</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="s2">&quot;object&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">quirks</span><span class="p">.</span><span class="nx">redraw</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span></div><div class='line' id='LC261'><span class="nx">_initParser</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="s2">&quot;paste:composer&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">composer</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">executeAndRestore</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">quirks</span><span class="p">.</span><span class="nx">cleanPastedHTML</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">composer</span><span class="p">.</span><span class="nx">element</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">composer</span><span class="p">.</span><span class="nx">element</span><span class="p">)},</span><span class="o">!</span><span class="mi">0</span><span class="p">)});</span><span class="k">this</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="s2">&quot;paste:textarea&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">textarea</span><span class="p">.</span><span class="nx">setValue</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textarea</span><span class="p">.</span><span class="nx">getValue</span><span class="p">()))})}})})(</span><span class="nx">wysihtml5</span><span class="p">);</span></div></pre></div>
          </td>
        </tr>
      </table>
  </div>

          </div>
        </div>

        <a href="#jump-to-line" rel="facebox" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
        <div id="jump-to-line" style="display:none">
          <h2>Jump to Line</h2>
          <form accept-charset="UTF-8" class="js-jump-to-line-form">
            <input class="textfield js-jump-to-line-field" type="text">
            <div class="full-button">
              <button type="submit" class="button">Go</button>
            </div>
          </form>
        </div>

      </div>
    </div>
</div>

<div id="js-frame-loading-template" class="frame frame-loading large-loading-area" style="display:none;">
  <img class="js-frame-loading-spinner" src="https://a248.e.akamai.net/assets.github.com/images/spinners/octocat-spinner-128.gif?1347543532" height="64" width="64">
</div>


        </div>
      </div>
      <div class="context-overlay"></div>
    </div>

      <div id="footer-push"></div><!-- hack for sticky footer -->
    </div><!-- end of wrapper - hack for sticky footer -->

      <!-- footer -->
      <div id="footer">
  <div class="container clearfix">

      <dl class="footer_nav">
        <dt>GitHub</dt>
        <dd><a href="https://github.com/about">About us</a></dd>
        <dd><a href="https://github.com/blog">Blog</a></dd>
        <dd><a href="https://github.com/contact">Contact &amp; support</a></dd>
        <dd><a href="http://enterprise.github.com/">GitHub Enterprise</a></dd>
        <dd><a href="http://status.github.com/">Site status</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Applications</dt>
        <dd><a href="http://mac.github.com/">GitHub for Mac</a></dd>
        <dd><a href="http://windows.github.com/">GitHub for Windows</a></dd>
        <dd><a href="http://eclipse.github.com/">GitHub for Eclipse</a></dd>
        <dd><a href="http://mobile.github.com/">GitHub mobile apps</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Services</dt>
        <dd><a href="http://get.gaug.es/">Gauges: Web analytics</a></dd>
        <dd><a href="http://speakerdeck.com">Speaker Deck: Presentations</a></dd>
        <dd><a href="https://gist.github.com">Gist: Code snippets</a></dd>
        <dd><a href="http://jobs.github.com/">Job board</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Documentation</dt>
        <dd><a href="http://help.github.com/">GitHub Help</a></dd>
        <dd><a href="http://developer.github.com/">Developer API</a></dd>
        <dd><a href="http://github.github.com/github-flavored-markdown/">GitHub Flavored Markdown</a></dd>
        <dd><a href="http://pages.github.com/">GitHub Pages</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>More</dt>
        <dd><a href="http://training.github.com/">Training</a></dd>
        <dd><a href="https://github.com/edu">Students &amp; teachers</a></dd>
        <dd><a href="http://shop.github.com">The Shop</a></dd>
        <dd><a href="/plans">Plans &amp; pricing</a></dd>
        <dd><a href="http://octodex.github.com/">The Octodex</a></dd>
      </dl>

      <hr class="footer-divider">


    <p class="right">&copy; 2013 <span title="0.09467s from fe15.rs.github.com">GitHub</span> Inc. All rights reserved.</p>
    <a class="left" href="https://github.com/">
      <span class="mega-icon mega-icon-invertocat"></span>
    </a>
    <ul id="legal">
        <li><a href="https://github.com/site/terms">Terms of Service</a></li>
        <li><a href="https://github.com/site/privacy">Privacy</a></li>
        <li><a href="https://github.com/security">Security</a></li>
    </ul>

  </div><!-- /.container -->

</div><!-- /.#footer -->


    

    

<div id="keyboard_shortcuts_pane" class="instapaper_ignore readability-extra" style="display:none">
  <h2>Keyboard Shortcuts <small><a href="#" class="js-see-all-keyboard-shortcuts">(see all)</a></small></h2>

  <div class="columns threecols">
    <div class="column first">
      <h3>Site wide shortcuts</h3>
      <dl class="keyboard-mappings">
        <dt>s</dt>
        <dd>Focus command bar</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>?</dt>
        <dd>Bring up this help dialog</dd>
      </dl>
    </div><!-- /.column.first -->

    <div class="column middle" style='display:none'>
      <h3>Commit list</h3>
      <dl class="keyboard-mappings">
        <dt>j</dt>
        <dd>Move selection down</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>k</dt>
        <dd>Move selection up</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>c <em>or</em> o <em>or</em> enter</dt>
        <dd>Open commit</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>y</dt>
        <dd>Expand URL to its canonical form</dd>
      </dl>
    </div><!-- /.column.first -->

    <div class="column last js-hidden-pane" style='display:none'>
      <h3>Pull request list</h3>
      <dl class="keyboard-mappings">
        <dt>j</dt>
        <dd>Move selection down</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>k</dt>
        <dd>Move selection up</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>o <em>or</em> enter</dt>
        <dd>Open issue</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt><span class="platform-mac">â</span><span class="platform-other">ctrl</span> <em>+</em> enter</dt>
        <dd>Submit comment</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt><span class="platform-mac">â</span><span class="platform-other">ctrl</span> <em>+</em> shift p</dt>
        <dd>Preview comment</dd>
      </dl>
    </div><!-- /.columns.last -->

  </div><!-- /.columns.equacols -->

  <div class="js-hidden-pane" style='display:none'>
    <div class="rule"></div>

    <h3>Issues</h3>

    <div class="columns threecols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt>j</dt>
          <dd>Move selection down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>k</dt>
          <dd>Move selection up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>x</dt>
          <dd>Toggle selection</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o <em>or</em> enter</dt>
          <dd>Open issue</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="platform-mac">â</span><span class="platform-other">ctrl</span> <em>+</em> enter</dt>
          <dd>Submit comment</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="platform-mac">â</span><span class="platform-other">ctrl</span> <em>+</em> shift p</dt>
          <dd>Preview comment</dd>
        </dl>
      </div><!-- /.column.first -->
      <div class="column last">
        <dl class="keyboard-mappings">
          <dt>c</dt>
          <dd>Create issue</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>l</dt>
          <dd>Create label</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>i</dt>
          <dd>Back to inbox</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>u</dt>
          <dd>Back to issues</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>/</dt>
          <dd>Focus issues search</dd>
        </dl>
      </div>
    </div>
  </div>

  <div class="js-hidden-pane" style='display:none'>
    <div class="rule"></div>

    <h3>Issues Dashboard</h3>

    <div class="columns threecols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt>j</dt>
          <dd>Move selection down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>k</dt>
          <dd>Move selection up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o <em>or</em> enter</dt>
          <dd>Open issue</dd>
        </dl>
      </div><!-- /.column.first -->
    </div>
  </div>

  <div class="js-hidden-pane" style='display:none'>
    <div class="rule"></div>

    <h3>Network Graph</h3>
    <div class="columns equacols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt><span class="badmono">â</span> <em>or</em> h</dt>
          <dd>Scroll left</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">â</span> <em>or</em> l</dt>
          <dd>Scroll right</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">â</span> <em>or</em> k</dt>
          <dd>Scroll up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">â</span> <em>or</em> j</dt>
          <dd>Scroll down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>t</dt>
          <dd>Toggle visibility of head labels</dd>
        </dl>
      </div><!-- /.column.first -->
      <div class="column last">
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">â</span> <em>or</em> shift h</dt>
          <dd>Scroll all the way left</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">â</span> <em>or</em> shift l</dt>
          <dd>Scroll all the way right</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">â</span> <em>or</em> shift k</dt>
          <dd>Scroll all the way up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">â</span> <em>or</em> shift j</dt>
          <dd>Scroll all the way down</dd>
        </dl>
      </div><!-- /.column.last -->
    </div>
  </div>

  <div class="js-hidden-pane" >
    <div class="rule"></div>
    <div class="columns threecols">
      <div class="column first js-hidden-pane" >
        <h3>Source Code Browsing</h3>
        <dl class="keyboard-mappings">
          <dt>t</dt>
          <dd>Activates the file finder</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>l</dt>
          <dd>Jump to line</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>w</dt>
          <dd>Switch branch/tag</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>y</dt>
          <dd>Expand URL to its canonical form</dd>
        </dl>
      </div>
    </div>
  </div>

  <div class="js-hidden-pane" style='display:none'>
    <div class="rule"></div>
    <div class="columns threecols">
      <div class="column first">
        <h3>Browsing Commits</h3>
        <dl class="keyboard-mappings">
          <dt><span class="platform-mac">â</span><span class="platform-other">ctrl</span> <em>+</em> enter</dt>
          <dd>Submit comment</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>escape</dt>
          <dd>Close form</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>p</dt>
          <dd>Parent commit</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o</dt>
          <dd>Other parent commit</dd>
        </dl>
      </div>
    </div>
  </div>

  <div class="js-hidden-pane" style='display:none'>
    <div class="rule"></div>
    <h3>Notifications</h3>

    <div class="columns threecols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt>j</dt>
          <dd>Move selection down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>k</dt>
          <dd>Move selection up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o <em>or</em> enter</dt>
          <dd>Open notification</dd>
        </dl>
      </div><!-- /.column.first -->

      <div class="column second">
        <dl class="keyboard-mappings">
          <dt>e <em>or</em> shift i <em>or</em> y</dt>
          <dd>Mark as read</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift m</dt>
          <dd>Mute thread</dd>
        </dl>
      </div><!-- /.column.first -->
    </div>
  </div>

</div>

    <div id="markdown-help" class="instapaper_ignore readability-extra">
  <h2>Markdown Cheat Sheet</h2>

  <div class="cheatsheet-content">

  <div class="mod">
    <div class="col">
      <h3>Format Text</h3>
      <p>Headers</p>
      <pre>
# This is an &lt;h1&gt; tag
## This is an &lt;h2&gt; tag
###### This is an &lt;h6&gt; tag</pre>
     <p>Text styles</p>
     <pre>
*This text will be italic*
_This will also be italic_
**This text will be bold**
__This will also be bold__

*You **can** combine them*
</pre>
    </div>
    <div class="col">
      <h3>Lists</h3>
      <p>Unordered</p>
      <pre>
* Item 1
* Item 2
  * Item 2a
  * Item 2b</pre>
     <p>Ordered</p>
     <pre>
1. Item 1
2. Item 2
3. Item 3
   * Item 3a
   * Item 3b</pre>
    </div>
    <div class="col">
      <h3>Miscellaneous</h3>
      <p>Images</p>
      <pre>
![GitHub Logo](/images/logo.png)
Format: ![Alt Text](url)
</pre>
     <p>Links</p>
     <pre>
http://github.com - automatic!
[GitHub](http://github.com)</pre>
<p>Blockquotes</p>
     <pre>
As Kanye West said:

> We're living the future so
> the present is our past.
</pre>
    </div>
  </div>
  <div class="rule"></div>

  <h3>Code Examples in Markdown</h3>
  <div class="col">
      <p>Syntax highlighting with <a href="http://github.github.com/github-flavored-markdown/" title="GitHub Flavored Markdown" target="_blank">GFM</a></p>
      <pre>
```javascript
function fancyAlert(arg) {
  if(arg) {
    $.facebox({div:'#foo'})
  }
}
```</pre>
    </div>
    <div class="col">
      <p>Or, indent your code 4 spaces</p>
      <pre>
Here is a Python code example
without syntax highlighting:

    def foo:
      if not bar:
        return true</pre>
    </div>
    <div class="col">
      <p>Inline code for comments</p>
      <pre>
I think you should use an
`&lt;addr&gt;` element here instead.</pre>
    </div>
  </div>

  </div>
</div>


    <div id="ajax-error-message" class="flash flash-error">
      <span class="mini-icon mini-icon-exclamation"></span>
      Something went wrong with that request. Please try again.
      <a href="#" class="mini-icon mini-icon-remove-close ajax-error-dismiss"></a>
    </div>

    
    
    <span id='server_response_time' data-time='0.09571' data-host='fe15'></span>
    
  </body>
</html>

